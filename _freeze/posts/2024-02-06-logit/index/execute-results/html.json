{
  "hash": "dbc36eea2c6723ac02873392d28f03c0",
  "result": {
    "markdown": "---\ntitle: You Just Said Something Wrong About Logistic Regression\ndate: \"2024-02-06\"\ncode-fold: true\necho: true\nfig-cap-location: top\ncategories: []\nnumber-sections: true\ndraft: false\n---\n\nCongratulations, you just said something wrong about logistic regression.  That's OK, logistic regression is hard and we all have to learn/re-learn some things from time to time.\n\nThis is a living blog post intended to address some common misconceptions or flat out wrong statements I've seen people make about logistic regression.\n\n##  The Coefficients of Logistic Regression are Interpreted as \"You're X Times More Likely to See Y Given Factor Z\".  \n\nWrong!  The (exponentiated) coefficients of logistic regression are interpreted as \"the odds you see Y given Factor Z are X times larger\".\n\nPhrases like \"X times _more likely_\" allude to the the probability of the event.  If the probability of getting some event is 10%, and the probability of getting some other event is 20%, then you are 2 times more likely to get the latter event than the former.  \n\nThis kind of comparison between two probabilities is called \"the relative risk\" (or risk ratio, or lift, it really depends on where you work).  The coefficients of a logistic regression are _not_ risk ratios, nor are they log risk ratios; they are log odds ratios.\n\nNow, it is actually fine to make this mistake under a few conditions.  Namely, when a) the odds ratio is sufficiently small, and/or b) the baseline risk is sufficiently small.  You can see this on the plot below which plots the odds ratios and corresponds risk ratios for various baseline risks.  On the whole though, you shouldn't interpret any output from logistic regression as a risk ratio unless you explicitly go out of our way to estimate that quantity.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes\n\np1 = np.array([0.01, 0.05, 0.1, 0.15, 0.20])\n\nrr = np.linspace(1, 4.9, 500)\n\nfig, ax = plt.subplots(dpi=240)\nax.set_aspect('equal')\nax.set_xlim(1, 5)\nax.set_ylim(1, 5)\n\n# Set light gray background\nax.set_facecolor('#f0f0f0')\n\n# Set white grid lines\nax.grid(color='white', linestyle='-', linewidth=0.5)\n\nax.plot([0, 5], [0, 5], 'k--')\n\ncmap = cm.get_cmap('magma')\ncolors = cmap(np.linspace(0, 1, len(p1)))\n\nfor i, p in enumerate(p1):\n    p2 = rr * p\n    odr = p2 * (1 - p) / ((1 - p2) * p)\n    ax.plot(rr, odr, label=f\"{p:.2f}\", color=colors[i])\n\n# Move legend outside the plot axis to the right\nax.legend(title=\"Baseline risk\", loc='center left', bbox_to_anchor=(1, 0.5))\n\n# Set y ticks to [1, 2, 3, 4, 5]\nax.set_yticks([1, 2, 3, 4, 5])\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xlabel('Relative Risk')\nax.set_ylabel('Odds Ratio')\n\n# Add zoom inset region axis on the bottom center\naxins = ax.inset_axes(\n    [0.6, 0.1, 0.47*0.8, 0.47*0.8],  # Adjusted position\n    xlim=(1, 1.5), ylim=(1, 1.5), xticklabels=[1, 1.25, 1.5], yticklabels=[1,'', 1.25,'', 1.5])\n\naxins.set_facecolor('#f0f0f0')\naxins.grid(color='white', linestyle='-', linewidth=0.5)\n\nfor i, p in enumerate(p1):\n    p2 = rr * p\n    odr = p2 * (1 - p) / ((1 - p2) * p)\n    axins.plot(rr, odr, label=f\"{p:.2f}\", color=colors[i])\n\n# Use ax.indicate_inset_zoom to draw a rectangle around the zoomed-in region\nax.indicate_inset_zoom(axins, edgecolor=\"black\")\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![How the relative risk and odds ratio differ for various baseline risks.  For each basline risk, we can compute the associated probabiltity given the relative risk.  Given that probability, we can also compute the odds ratio.](index_files/figure-html/cell-2-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}