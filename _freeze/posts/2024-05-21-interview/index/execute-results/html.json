{
  "hash": "42302b5393114da1d642510d84fcc860",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Interesting Interview Questions\ndate: \"2024-05-21\"\ncode-fold: true\necho: true\nfig-cap-location: top\ncategories: [Probability]\nnumber-sections: false\n---\n\nI'm about to do some interviews this week which got me reflecting on some of my favorite questions I've been asked.  Usually, these are little toy problems you'd find in an intro to probability textbook, but they can be pretty fun and rewarding to solve.\n\n## Question 1\n\nPerson A has $n$ fair coins, and person B has $n+1$ fair coins.  They each can flip all their coins simultaneously.  What is the probability that person B gets more heads? Provide your answer as a function of $n$.\n\n## Answer\n\nI actually took the liberty of editing this question (the function of $n$ was not included).  Anyway, this is pretty simple.  Suppose $n$ is large enough to justify using a normal approximation.  Then\n\n$$ A \\sim \\operatorname{normal}\\left( \\dfrac{n}{2}, \\dfrac{n}{4} \\right) \\>,$$\n\n$$ B \\sim \\operatorname{normal}\\left( \\dfrac{n}{2}, \\dfrac{n}{4} \\right) \\>.$$\n\nWe're interested in $\\Pr(B \\gt A) = \\Pr(B - A \\gt 0)$.  So let $D=B-A$.  Then $D$ has the following distribution\n\n$$ D \\sim \\operatorname{normal}\\left( \\dfrac{1}{2}, \\dfrac{2n+1}{4} \\right) \\>.$$\n\nNow, we just need to make a standardized normal random variable and pass it through the CDF of a gaussian.  That turns out to be\n\n$$ Z = \\dfrac{0-\\frac{1}{2}}{\\sqrt{\\frac{2n+1}{4}}} = \\dfrac{-1}{\\sqrt{2n+1}} $$\n\nand so\n\n$$ \\Pr(B \\gt A) = Pr(D \\gt 0) = 1 - \\Phi(Z(n)) \\>.$$\n\nI'm not sure what the interviewer expected, but we can see that the probability approaches 1/2 as $n \\to \\infty$.\n\n\nNow, this might be a \"good 'nuff\" answer, but it relies on an approximation that breaks down for small $n$.  What is the REAL answer?\n\nFor that, we need to use convolution.  If $D=B-A$ then $D$ can take on integer values between $-n$ (where B flips 0 heads and A flips $n$) and $n+1$ (where B flips $n+1$ heads and A flips 0).\n\nThe convolution is then the following sum \n\n$$\\Pr(D = k) = \\sum_{i=1}^{n+1} \\Pr(B=i) \\Pr(A = i-k)$$\n\nwith the added stipulation that $\\Pr(A>n) = 0$.  Ok, not a fun sum to do by hand, let's cook up a numpy function\n\n::: {#3ffbd261 .cell execution_count=1}\n``` {.python .cell-code code-fold=\"false\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import binom, norm\nimport matplotlib.patches as patches\nimport pandas as pd\nimport itertools\n\ndef f(k:int, n:int):\n    i = np.arange(1, n+2).reshape(-1, 1)\n    density = binom(n=n+1, p=0.5).pmf(i)*binom(n=n, p=0.5).pmf(i-k)\n    return density.sum()\n\ndef approx_f(n:int):\n    z = -1 / np.sqrt(2*n+1) \n    return 1 - norm.cdf(z)\n\nmax_coins = 1000\ncoins = np.arange(1, max_coins+1, 5)\nprobs = np.zeros(coins.size)\n\nfor i, n in enumerate(coins):\n\n    outcomes = np.arange(1, n+2)\n    probs[i] = f(outcomes, n)\n```\n:::\n\n\n::: {#76be825d .cell execution_count=2}\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\nIn fact, it looks like the probability is _always_ 0.5, which is interesting.  Let's see why.\n\nCredit to Misha Lavrov for showing me this very simple and elegant solution.  Again, let $D = B-A$, but now instead focus on $D+n = B + (n-A)$ which is the number of heads from $B$ plus the number of tails from $A$.  Since the coins are fair, this is the sum of two binomials with $2n+1$ trials.  Hence, the probability mass function is \n\n$$ \\Pr(D+n = n+k) = {2n+1 \\choose n+k} 2^{-2n-1} \\>, k \\in \\left[ -n \\>, \\cdots \\>, n+1\\right] $$\n\nThis means $\\Pr(D+n)$ is symmetric about $n+0.5$ implying that $\\Pr(D\\leq 0) = \\Pr(D\\gt 0) = 0.5$ as desired.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}