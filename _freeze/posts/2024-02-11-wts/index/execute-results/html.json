{
  "hash": "f5ffff45b395717f31cd0c4e8109e4a2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Peeking Sets You Up For Dissapointment\ndate: \"2024-02-08\"\ncode-fold: true\necho: true\nfig-cap-location: top\ncategories: []\nnumber-sections: true\n---\n\n\n\nI'm trying to get a really good understanding of confounding and why it happens.  In this post, I'm going to walk through a simple example of confounding/conditioning to show why a naïve estimate of the difference between groups can be confounded and how conditioning fixes this.\n\n## \n\nConsider a population with strata defined by $S= 1, 2, 3$ and a binary treatment $D=0, 1$.  Assume that the potential outcomes are exchangeable conditional on $S$, and that the conditional average treatment (conditional on $S$) varies.  If we draw this as a DAG, this  would be a classic confounding dag.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdag)\nlibrary(tidyverse)\nlibrary(kableExtra)\ndagify(y~S,\n       D~S, \n       y~D,\n       exposure=\"D\",\n       outcome=\"y\",\n       coords = list(\n         x=c(D=0, y=3, S=1.5),\n         y=c(D=0, y=0, S=1))\n       ) %>% \n  ggdag_status() + \n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nLet's further assume that we can take an (infinitely) large sample from this population, and so population within strata estimates of the outcome are consistent and unbiased.  Let's assume the conditional expectations are as follows\n\n\n::: {.cell tbl-cap='Conditional expectation of y given S and D.  Because of exchangeability conditional on S, these are also estimates of $E[Y^d \\mid S=s]$ .'}\n\n```{.r .cell-code}\ne <- c(2, 6, 10, 4, 8, 14)\nexpectations <- matrix(e, nrow=3)\n\ntibble(e, d = rep(0:1, each=3), s = rep(1:3, 2)) %>% \n  spread(d, e) %>%\n  mutate(s = str_c('S=', s)) %>% \n  kbl(\n    col.names = c('', str_c('D=', 0:1)),\n    align = c('r', 'c', 'c'),\n    escape = FALSE\n\n  ) %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\">  </th>\n   <th style=\"text-align:center;\"> D=0 </th>\n   <th style=\"text-align:center;\"> D=1 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> S=1 </td>\n   <td style=\"text-align:center;\"> 2 </td>\n   <td style=\"text-align:center;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> S=2 </td>\n   <td style=\"text-align:center;\"> 6 </td>\n   <td style=\"text-align:center;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> S=3 </td>\n   <td style=\"text-align:center;\"> 10 </td>\n   <td style=\"text-align:center;\"> 14 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nand that the joint distribution of $S$ and $D$ is as follows =\n\n\n::: {.cell tbl-cap='Joint distribution of exposure (D) and S'}\n\n```{.r .cell-code}\ne <- c(36, 8, 12, 12, 12, 20) / 100\njoint <- matrix(e, nrow=3, byrow = T)\n\ntibble(e, d = rep(0:1, 3), s=rep(1:3, each=2)) %>% \n  spread(d, e) %>%\n  mutate(s = str_c('S=', s)) %>% \n  kbl(\n    col.names = c('', str_c('D=', 0:1)),\n    align = c('r', 'c', 'c'),\n    escape = FALSE\n  ) %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\">  </th>\n   <th style=\"text-align:center;\"> D=0 </th>\n   <th style=\"text-align:center;\"> D=1 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> S=1 </td>\n   <td style=\"text-align:center;\"> 0.36 </td>\n   <td style=\"text-align:center;\"> 0.08 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> S=2 </td>\n   <td style=\"text-align:center;\"> 0.12 </td>\n   <td style=\"text-align:center;\"> 0.12 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> S=3 </td>\n   <td style=\"text-align:center;\"> 0.12 </td>\n   <td style=\"text-align:center;\"> 0.20 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nBecause potential outcomes are exchangeable conditional on $S$, this is all we need to compute an estimate of the ATE.  However, let's assume we didn't summarize the data accordingly and had many many samples.  What would we obtain as a naïve estimate (meaning, not adjusting for $S$) of the ATE?\n\n\n\n::: {.cell tbl-cap='Unadjusted estimate of the ATE computed from drawing 1, 000, 000 samples from the distribution as defined.'}\n\n```{.r .cell-code}\ne <- c(36, 12, 12, 8, 12, 20) / 100\ny <- c(2, 6, 10, 4, 8, 14)\n\nd <- tibble(e, D = rep(0:1, each=3), S = rep(1:3, 2), y=y) %>% \n     sample_n(size = as.integer(1e6), replace=T, weight = e)\n\nnaive <- d %>% \n  group_by(D) %>% \n  summarise(Estimate = mean(y)) %>% \n  mutate(D = str_c(\"D=\", D)) %>% \n  spread(D, Estimate)  %>% \n  mutate(estimate = `D=1` - `D=0`) \n\n\nkbl(naive, \n    digits = 2) %>% \n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> D=0 </th>\n   <th style=\"text-align:right;\"> D=1 </th>\n   <th style=\"text-align:right;\"> estimate </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 4.39 </td>\n   <td style=\"text-align:right;\"> 10.2 </td>\n   <td style=\"text-align:right;\"> 5.81 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nWe know this is the wrong estimate of the ATE by construction.  What is this estimating then?  How do we get there? Well, the estimate in the table above is $E[Y^1 \\mid D=1] -E[Y^0 \\mid D=0]$, no conditioning on.  Given the joint distributions above, we can compute $E[Y^d \\mid D=d]$ using\n\n$$ E[Y^d \\mid D=d] = \\sum_{s \\in S} E[Y^d \\mid S=s] \\cdot P(S=s \\cap D=d) $$\n\nLet's compute this exactly given the distributions above\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Conditional distribution of S given D\nconditional <- sweep(joint, 2, colSums(joint), FUN = '/')\n\n# Marginal expectation \nestimates <- colSums(conditional * expectations)\n\n# Unadjusted estimate\ndiff(estimates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.8\n```\n\n\n:::\n:::\n\n\nWhich is basically what we got above, up to simulation error.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}