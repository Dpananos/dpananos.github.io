<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Demetri Pananos Ph.D</title>
<link>https://dpananos.github.io/</link>
<atom:link href="https://dpananos.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Tue, 18 Mar 2025 04:00:00 GMT</lastBuildDate>
<item>
  <title>More on Bayesian Statistics</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2025-03-17-bayes-big-deal/</link>
  <description><![CDATA[ 





<p>I recently wrote a <a href="https://www.geteppo.com/blog/bayes-vs-frequentism-can-be-a-big-deal">blog post</a> for my employer in which I made some claims regarding Bayesian statistics.</p>
<section id="claim-1-flat-priors-in-heirarchal-models-can-lead-to-pulling-apart-and-implausible-estimates" class="level1">
<h1>Claim 1: Flat Priors in Heirarchal Models Can Lead to Pulling Apart and Implausible Estimates</h1>
<p>On flat priors in hierarchical models, Gelman says</p>
<blockquote class="blockquote">
<p>A noninformative uniform prior on the coefficients is equivalent to a hierarchical N(0,tau^2) model with tau set to a very large value. This is a very strong prior distribution pulling the estimates apart, and the resulting estimates of individual coefficients are implausible.</p>
</blockquote>
<p>By “pulling the estimates apart” I assume Gelman means “not pooling/regularizing estimates” as opposed to literally pulling the estimates apart. As for the line about “implausibility” of individual coefficients, that requires some unpacking.</p>
<p>Gelman is known for picking out poor methodological papers and commenting on them. Consider <a href="https://sites.stat.columbia.edu/gelman/research/unpublished/prior_context_2.pdf">“The prior can often only be understood in the context of the likelihood”</a> in which Gelman and authors discuss a study which ostensibly demonstrated that “beautiful” are more likely to have a daughter.</p>
<p>You’re free to read what Gelman and authors wrote, I won’t summarize it here, but in short the authors to which Gelman refers report an unusually high differential in the probability of giving birth to a girl. Given what we know about the sex ratio of births and how they vary across the globe, this seems fairly extreme. Reading between the lines, I would go so far as to say Gelman would consider this estimate as “implausible”. Hence, I interpret “implausible” to mean “no different than Frequentist estimates”. That is not to say that all frequentist estimates are implausible, just that when certain estimates should be shrunk/regularized, a hierarchical model with a flat prior would fail to do so.</p>
<p>This is fairly easily demonstrated. I’m going to simulate 16 A/B tests. Each test is powered to detect a lift of 5%. However, each of the lifts from the 16 tests is drawn from a normal distribution with mean 1 and standard deviation 0.02. This means that, while not impossible to see a 5% lift, it is highly improbable and often our tests are underpowered for the true effect. This, as I understand it, is the prevailing attitude in A/B testing.</p>
<p>Each A/B test will be fed to a hierarchical model (shown below in Stan). I place a flat prior on the population mean and parameterize the prior on the population variance so that I can study how estimates change when the prior is less/more variable.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb1-1"></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">data</span>{</span>
<span id="cb1-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb1-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] log_rr;</span>
<span id="cb1-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] stderr;</span>
<span id="cb1-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta;</span>
<span id="cb1-7">}</span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">parameters</span>{</span>
<span id="cb1-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu;</span>
<span id="cb1-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; tau;</span>
<span id="cb1-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] z;</span>
<span id="cb1-12">}</span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb1-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] theta = mu + tau * z;</span>
<span id="cb1-15">}</span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">model</span> {</span>
<span id="cb1-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No mu in the model block means a uniform prior over the domain.</span></span>
<span id="cb1-18">  tau ~ inv_gamma(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, beta);</span>
<span id="cb1-19">  z ~ std_normal();</span>
<span id="cb1-20">  log_rr ~ normal(theta, stderr);</span>
<span id="cb1-21">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7">control_conversion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-8">target_lift <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span></span>
<span id="cb2-9">target_conversion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> control_conversion <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> target_lift</span>
<span id="cb2-10">design <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.prop.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p1 =</span> control_conversion, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p2 =</span> target_conversion, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb2-11">n_per_group <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(design<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)</span>
<span id="cb2-12">n_experiments <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb2-13"></span>
<span id="cb2-14">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(n_experiments, {</span>
<span id="cb2-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In reality, we generate smaller effects than we wish we did</span></span>
<span id="cb2-16">  actual_lift <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb2-17">  actual_log_rr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(actual_lift)</span>
<span id="cb2-18">  </span>
<span id="cb2-19">  control <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_per_group, control_conversion)</span>
<span id="cb2-20">  treatment <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_per_group, control_conversion <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> actual_lift)</span>
<span id="cb2-21">  </span>
<span id="cb2-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the groups are the same size the two factors of log(n_per_group) cancel</span></span>
<span id="cb2-23">  observed_log_rr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(treatment) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(control)</span>
<span id="cb2-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A Standard result from the Delta method.</span></span>
<span id="cb2-25">  sampling_var <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> treatment <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> control <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_per_group</span>
<span id="cb2-26">  stderr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sampling_var)</span>
<span id="cb2-27">  </span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(observed_log_rr, stderr, actual_log_rr)</span>
<span id="cb2-29">  </span>
<span id="cb2-30">})</span>
<span id="cb2-31"></span>
<span id="cb2-32">log_rr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ]</span>
<span id="cb2-33">stderr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ]</span>
<span id="cb2-34">actual_log_rr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, ]</span>
<span id="cb2-35"></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep track of the RMSE from our frequentist estimates.</span></span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hopefully, the Hierarchical model will do better than this.</span></span>
<span id="cb2-38">observed_rmse <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((log_rr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> actual_log_rr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-39"></span>
<span id="cb2-40">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model.stan'</span>)</span>
<span id="cb2-41"></span>
<span id="cb2-42">beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-43">sims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(beta, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> {</span>
<span id="cb2-44">  stan_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb2-45">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n_experiments,</span>
<span id="cb2-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_rr =</span> log_rr,</span>
<span id="cb2-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stderr =</span> stderr,</span>
<span id="cb2-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> .x</span>
<span id="cb2-49">  )</span>
<span id="cb2-50">  </span>
<span id="cb2-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">capture.output</span>(</span>
<span id="cb2-52">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb2-53">    stan_data,</span>
<span id="cb2-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb2-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>,</span>
<span id="cb2-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb2-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb2-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-59">  )</span>
<span id="cb2-60">  )</span>
<span id="cb2-61">  </span>
<span id="cb2-62">  </span>
<span id="cb2-63">  estimated <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'theta'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean</span>
<span id="cb2-64">  error <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> actual_log_rr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> estimated</span>
<span id="cb2-65">  rmse <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(error <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-66">  max_rhat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(posterior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'theta'</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rhat'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rhat)</span>
<span id="cb2-67">  divs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diagnostic_summary</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>num_divergent)</span>
<span id="cb2-68">  </span>
<span id="cb2-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(rmse, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> .x, max_rhat, divs)</span>
<span id="cb2-70">  </span>
<span id="cb2-71">})</span>
<span id="cb2-72"></span>
<span id="cb2-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopifnot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(sims<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>divs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb2-74"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopifnot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(sims<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>max_rhat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>))</span></code></pre></div>
</details>
</div>
<p>Below is a plot of the relative RMSE of the estimates from the Bayesian model. I’ve rescaled the y axis so that the black line (y=1) corresponds to the RMSE from the Frequentist estimates. As you can see, more informative priors do result in better RMSE – to a point. When the prior becomes too informative, then the RMSE increases. This is due to pooling all estimates to the grand mean. Conversely, when the prior on the variance is too large, no pooling happens and results are the same as Frequentist estimates (i.e.&nbsp;implausible if they are noisy a la Gelman).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2025-03-17-bayes-big-deal/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2025-03-17-bayes-big-deal/</guid>
  <pubDate>Tue, 18 Mar 2025 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A Brief Tour of CUPED and Related Methods (Pt. 2)</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2025-03-10-cuped-2/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p><a href="https://dpananos.github.io/posts/2025-03-03-cuped/">In a previous post</a>, I demonstrated that Deng et. al’s CUPED is formally equivalent to regression adjustment as justified through the Frisch Waugh Lovell theorem. As a consequence, analysts can feel justified fitting a regression model as opposed to performing the calculations outlined in Deng 2013.</p>
<p>Deng et. al recommend estimating <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> – the coefficient for the control variate, or equivalently a regression coefficient – from the pooled population of treatment and control, writing “The impact on variance reduction will likely be negligible”. This recommendation is akin to recommending the following model be estimated</p>
<p><img src="https://latex.codecogs.com/png.latex?%20Y%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20X%20+%20%5CDelta%20D%20+%20%5Cepsilon%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?D"> is a randomly assigned treatment indicator. Most statisticians will recognize this as an ANCOVA model (though the names are moot here, its all regression). In this post, we discuss potential biases problems with the model above when <img src="https://latex.codecogs.com/png.latex?D"> is randomly assigned, as well as how the model can be improved, and how this all relates to CUPED (which again, is just regression).</p>
<section id="freedman-2008" class="level2">
<h2 class="anchored" data-anchor-id="freedman-2008">Freedman 2008</h2>


</section>
</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2025-03-10-cuped-2/</guid>
  <pubDate>Mon, 10 Mar 2025 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A Brief Tour of CUPED and Related Methods (Pt. 1)</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2025-03-03-cuped/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Randomized experiments have a rich history, almost none of which is the concern of this post. Rather, I want to focus on a tiny slice of randomized experiment literature: CUPED (Controlled-experiment Using Pre-Experiment Data). The technique has been impactful in the online randomized experiment (a.k.a. A/B Testing) community, with many vendors – Eppo included – offering the technique. Despite the popularity and impact, customers and data scientists still seem to misunderstand why CUPED works, why different implementations of the procedure (a la regression adjustment) still provide the same benefit, and why different implementations are equivalent.</p>
<p>This sequence of posts seeks to answer popular questions regarding the CUPED, and in particular frames the technique as a regression procedure first as opposed to a “new” or different technique. I discuss papers that pre-date the CUPED as well as discuss how the literature has evolved since the publication of CUPED. This is not a systematic review, nor a scoping review; this is a story of regression erasure (I kid).</p>
<p>This post in particular will demonstrate the equivlence between CUPED and regression.</p>
</section>
<section id="set-up" class="level1">
<h1>Set Up</h1>
<p>Most of this blog post concerns online randomized experiments or “A/B tests” as they are known in industry. Generally, subjects will be exposed to treatment or control at some known probability (usually 50/50 since this is the most efficient design). Some outcome, <img src="https://latex.codecogs.com/png.latex?Y">, is then recorded and groups are compared statistically. Various estimands are used in industry, but for simplicity we will use the average treatment effect as our estimand of choice.</p>
</section>
<section id="cuped-for-those-who-dont-know" class="level1">
<h1>CUPED: For Those Who Don’t Know</h1>
<p>Deng and colleagues published CUPED in their 2013 paper <a href="https://exp-platform.com/Documents/2013-02-CUPED-ImprovingSensitivityOfControlledExperiments.pdf">“Improving the Sensitivity of Online Controlled Experiments by Utilizing Pre-Experiment Data”</a>. The main motivation for the paper is increasing sensitivity of experiments to detect smaller effects, detect effects faster, or both. Deng et. al motivate their approach through “control variates”. Briefly – and aside from experimentation for a moment – given pairs of random variables <img src="https://latex.codecogs.com/png.latex?(Y_i,%20X_i)"> in which <img src="https://latex.codecogs.com/png.latex?E%5BX%5D"> is known, define</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BY%7D_%7Bc%20v%7D=%5Cbar%7BY%7D-%5Ctheta%20%5Cbar%7BX%7D+%5Ctheta%20E%5BX%5D"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> is an arbitrary constant. It can be shown that <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BY%7D_%7Bc%20v%7D"> is an unbiased estimator of <img src="https://latex.codecogs.com/png.latex?E%5BY%5D">. Because <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> is arbitrary, we can choose a <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> so that the variance of the estimator is minimized. The variance of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BY%7D_%7Bc%20v%7D"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cbegin%7Balign%7D%0A%5Coperatorname%7BVar%7D(%5Cwidehat%7BY%7D_%7Bc%20v%7D)%20&amp;=%20%5Coperatorname%7BVar%7D(%5Cbar%7BY%7D-%5Ctheta%20%5Cbar%7BX%7D+%5Ctheta%20E%5BX%5D)%5C%5C%0A&amp;=%5Cdfrac%7B1%7D%7Bn%7D%20%5Cleft(%20%5Coperatorname%7BVar%7D(Y)%20+%20%5Ctheta%5E2%20%5Coperatorname%7BVar%7D(X)%20-%202%5Ctheta%5Coperatorname%7BCov%7D(X,Y)%20%5Cright)%0A%5Cend%7Balign%7D"></p>
<p>and is notably quadratic in <img src="https://latex.codecogs.com/png.latex?%5Ctheta">. Application of elementary calculus shows that the variance is then minimized when</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Ctheta%20=%20%5Cdfrac%7B%5Coperatorname%7BCov%7D(Y,%20X)%7D%7B%5Coperatorname%7BVar%7D(X)%7D%20"> and further algebraic manipulation shows</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Coperatorname%7Bvar%7D%5Cleft(%5Cwidehat%7BY%7D_%7Bc%20v%7D%5Cright)=%5Coperatorname%7Bvar%7D(%5Cbar%7BY%7D)%5Cleft(1-%5Crho%5E2%5Cright)%20"> where <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%20%5Coperatorname%7BCor%7D(Y,%20X)">.</p>
<p>In short, the standard error of the mean can be reduced so long as there is some other variable, <img src="https://latex.codecogs.com/png.latex?X">, correlated with <img src="https://latex.codecogs.com/png.latex?Y">, where larger correlations lead to more variance reduction.</p>
<p>Back to experimentation, the insight in the CUPED paper was that while finding an <img src="https://latex.codecogs.com/png.latex?X"> with known expectation is hard, the <em>difference</em> in expectations for any random variable in the pre-treatment period is 0. Deng et. al then estimate the difference in means between treatment in control by computing the control variate versions of outcomes in each group and then estimating the difference in means using <sup>1</sup></p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CDelta_%7Bc%20v%7D=%5Cwidehat%7BY%7D_%7Bc%20v%7D%5E%7B(t)%7D-%5Cwidehat%7BY%7D_%7Bc%20v%7D%5E%7B(c)%7D%20%5C%3E.%20"></p>
<p>In the remainder of the paper, Deng et. al provide some recommendations on choosing <img src="https://latex.codecogs.com/png.latex?X">, landing on the recommendation to “[…]to use the same variable from the pre-experiment period as the covariate” – i.e.&nbsp;to use the pre-experiment outcome as the control variable. Deng et. al write</p>
<blockquote class="blockquote">
<p>It is interesting to point out the connection with linear regression. The optimal <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> tunrs out to be the ordinary least squares (OLS) solution regressing (centered) <img src="https://latex.codecogs.com/png.latex?Y"> on (centered) <img src="https://latex.codecogs.com/png.latex?X"></p>
</blockquote>
<p>so the connection to regression was clearly made to readers. As we will see, the method is formally equivalent to regression, but in order to see this more clearly we will need the Frisch Waugh Lovell theorem.</p>
</section>
<section id="frisch-waugh-lovell-theorem-for-those-who-dont-know" class="level1">
<h1>Frisch Waugh Lovell Theorem: For Those Who Don’t Know</h1>
<p>Econometricians will know the Frisch Waugh Lovell (FWL) theorem well. Borrowing from wikipedia, the theorem states that the estimate for <img src="https://latex.codecogs.com/png.latex?%5Cbeta_2"> in the model (henceforth full model)</p>
<p><img src="https://latex.codecogs.com/png.latex?%20Y%20=%20X_1%20%5Cbeta_1%20+%20X_2%20%5Cbeta_2%20+u%20"> will be the same as the estimate of <img src="https://latex.codecogs.com/png.latex?%5Cbeta_2"> in the model (henceforth FWL model)</p>
<p><img src="https://latex.codecogs.com/png.latex?M_%7BX_1%7D%20Y=M_%7BX_1%7D%20X_2%20%5Cbeta_2+M_%7BX_1%7D%20u"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?M_%7BX_1%7D%20=%20I-X_1(X%5ET_1X_1)%5E%7B-1%7DX_1%5ET">. Squint hard enough and you will see that the projection, or hat, matrix appears in <img src="https://latex.codecogs.com/png.latex?M_%7BX_1%7D">. The FWL theorem then says, more or less,</p>
<blockquote class="blockquote">
<p>First regress <img src="https://latex.codecogs.com/png.latex?Y"> onto <img src="https://latex.codecogs.com/png.latex?X_1"> and compute the residuals. Then, regress <img src="https://latex.codecogs.com/png.latex?X_2"> onto <img src="https://latex.codecogs.com/png.latex?X_1"> and compute the residuals. The regression of the result from the first operation onto the result from the second operation will yield the same estimate of <img src="https://latex.codecogs.com/png.latex?%5Cbeta_2">.</p>
</blockquote>
<p>The proof can (probably) be found in most econometrics textbooks, but for now we will suffice for an example in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(am <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> vs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>mtcars)</span>
<span id="cb1-2"></span>
<span id="cb1-3">(ols_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vs'</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        vs 
-0.4072501 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">r1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resid</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(am <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>mtcars))</span>
<span id="cb3-2">r2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resid</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(vs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>mtcars))</span>
<span id="cb3-3"></span>
<span id="cb3-4">fwl_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(r1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>r2)</span>
<span id="cb3-5"></span>
<span id="cb3-6">(fwl_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fwl_fit)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r2'</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        r2 
-0.4072501 </code></pre>
</div>
</div>
<p>The procedure described above is sometimes called “partialling out” or “residualizing”. Point estimates and standard errors should be the same from both procedures (note that you have to adjust the partialled out estimate of the standard error so that it has the same degrees of freedom as the full estimate, see code below).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">(se_vs_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Std. Error"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1816192</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">se_vs_fwl_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fwl_fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Std. Error"</span>]</span>
<span id="cb7-2"></span>
<span id="cb7-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(mtcars)</span>
<span id="cb7-4">p_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of parameters in full model</span></span>
<span id="cb7-5">p_fwl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fwl_fit))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of parameters in FWL regression</span></span>
<span id="cb7-6"></span>
<span id="cb7-7">sigma2_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">residuals</span>(fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p_full)</span>
<span id="cb7-8">sigma2_fwl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">residuals</span>(fwl_fit)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p_fwl)</span>
<span id="cb7-9"></span>
<span id="cb7-10">(se_vs_fwl_corrected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> se_vs_fwl_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sigma2_full <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sigma2_fwl))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1816192</code></pre>
</div>
</div>
<p>Note also that the standard error from either the FWL model or the full model is smaller than it would be had <img src="https://latex.codecogs.com/png.latex?X_2"> (or <code>vs</code> in my example) been the only variable in the regression. While I omit a proof of this claim, the intuition is straight forward. When including <img src="https://latex.codecogs.com/png.latex?X_1"> in the regression (either in the full or FWL model), some of the variation in <img src="https://latex.codecogs.com/png.latex?Y"> will be explained by variation in <img src="https://latex.codecogs.com/png.latex?X_1">. This leads to smaller residual variation, which in turn shrinks the sampling variability of the coefficient for <img src="https://latex.codecogs.com/png.latex?X_2">. Hence <em>variance is reduced by including <img src="https://latex.codecogs.com/png.latex?X_1"></em> in the regression. Furthermore, there is little risk of inflated standard errors due to collinearity since <img src="https://latex.codecogs.com/png.latex?X_2"> is independent of <img src="https://latex.codecogs.com/png.latex?X_1"> and hence uncorrelated in expectation. Hence, variance should only decrease when adjusting for pre-treatment variables correlated with <img src="https://latex.codecogs.com/png.latex?Y">.</p>
</section>
<section id="why-you-cant-spell-cuped-without-fwl" class="level1">
<h1>Why You Can’t Spell CUPED without FWL</h1>
<p>Let’s bring this all together.<sup>2</sup> I’m going to start with a regression model and apply the FWL theorem in order to prove that CUPED is equivalent to regression.</p>
<p>Let <img src="https://latex.codecogs.com/png.latex?(Y,%20X,%20D)"> be a triple of random variables such that</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?E%5BY%5D%20=%20E%5BX%5D%20=%20E%5BD%5D%20=%200"></li>
<li><img src="https://latex.codecogs.com/png.latex?D"> is a randomly assigned binary treatment indicator and takes on values <img src="https://latex.codecogs.com/png.latex?%5C%7B-0.5,%200.5%5C%7D">. This is mostly for convenience.</li>
<li><img src="https://latex.codecogs.com/png.latex?Y,%20X%20%5Cperp%20D"> due to randomization</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BCov%7D(Y,%20X)%20%20%5Cneq%200"></li>
<li>The true data generating mechanism is <img src="https://latex.codecogs.com/png.latex?Y%20=%20%5Ctheta%20X%20+%20%5CDelta%20D%20+%20%5Cepsilon"> with <img src="https://latex.codecogs.com/png.latex?E%5B%5Cepsilon%5D%20=%200"> and <img src="https://latex.codecogs.com/png.latex?E%5B%5Cepsilon%20D%5D%20=%200">.</li>
</ol>
<p>First, partial out the effect of <img src="https://latex.codecogs.com/png.latex?X"> on <img src="https://latex.codecogs.com/png.latex?Y"> by regression <img src="https://latex.codecogs.com/png.latex?Y"> on <img src="https://latex.codecogs.com/png.latex?X">. The residual <img src="https://latex.codecogs.com/png.latex?r_1"> is defined as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20r_1%20=%20Y%20-%20%5Chat%7B%5Ctheta%7DX%20"></p>
<p>with <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Ctheta%7D%20=%20%5Coperatorname%7BCov%7D(Y,%20X)%20/%20%5Coperatorname%7BVar%7D(X)">. Note that this choice of <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> minimizes the variance of <img src="https://latex.codecogs.com/png.latex?r_1">.</p>
<p>Second, partial out the effect of <img src="https://latex.codecogs.com/png.latex?X"> on <img src="https://latex.codecogs.com/png.latex?D"> by computing</p>
<p><img src="https://latex.codecogs.com/png.latex?r_2%20=%20D-%5Chat%7B%5Cbeta%7D%20X%20"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?D"> is assumed independent of <img src="https://latex.codecogs.com/png.latex?X">, then <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bbeta%7D=0"> and therefore <img src="https://latex.codecogs.com/png.latex?r_2=D">.</p>
<p>By the FWL theorem, the coefficeint <img src="https://latex.codecogs.com/png.latex?%5CDelta"> can be estimated using the following regression</p>
<p><img src="https://latex.codecogs.com/png.latex?%20r_1%20=%20%5CDelta%20r_2%20+%20%5Cvarepsilon%20=%20%5CDelta%20D%20+%20%5Cvarepsilon%20"> Since <img src="https://latex.codecogs.com/png.latex?D"> is binary and treatment corresponds to a unit change in <img src="https://latex.codecogs.com/png.latex?D">, this model estimates the difference in means between the two groups. The difference in means is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CDelta%20=%20E%5BY%20-%20%5Chat%7B%5Ctheta%7D%20X%20%5Cmid%20D=0.5%5D%20-%20E%5BY%20-%20%5Chat%7B%5Ctheta%7D%20X%20%5Cmid%20D=-0.5%5D"></p>
<p>which is equivalent to the CUPED estimator.</p>
<p>Statistics, machine learning, and online experimentation are just different dialects of the same language. It can be useful to be proficient in all dialects because that means we can borrow ideas from one to apply to the other without the need to re-invent the wheel. Now that we know CUPED is just regression, we can just skip right to fitting a linear model and interpreting the coefficient knowing that we benefit from the variance reduction CUPED promises us.</p>
<p>I want to bring special attention to a quote from the CUPED paper regarding the choice of <img src="https://latex.codecogs.com/png.latex?%5Ctheta">.</p>
<blockquote class="blockquote">
<p>There is a slight subtlety that’s worth pointing out. The pair <img src="https://latex.codecogs.com/png.latex?(Y,%20X)"> may have different distributions in treatment and control when there is an experiment effect. For <img src="https://latex.codecogs.com/png.latex?%5CDelta_%7Bcv%7D"> to be unbiased, the same <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> has to be used for both control and treatment. The simplest way to estimate it is from the pooled population of control and treatment. The impact on variance reduction will likely be negligible.</p>
</blockquote>
<p>In the next post in this series, we’ll examine this statement more closely along with earler criticisms of the use of OLS for estimating the average treatment effect in randomized experiments.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The algebraic details are as follows. Let <img src="https://latex.codecogs.com/png.latex?Y_i%5E%7B(t)%7D"> be an outcome in the treatment group and let <img src="https://latex.codecogs.com/png.latex?Y_i%5E%7B(c)%7D"> be an outcome in the control group. Then <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%20%5CDelta_%7Bc%20v%7D&amp;=%5Cwidehat%7BY%7D_%7Bc%20v%7D%5E%7B(t)%7D-%5Cwidehat%7BY%7D_%7Bc%20v%7D%5E%7B(c)%7D%5C%5C%0A&amp;=%20%5Cbar%7BY%7D%5E%7B(t)%7D-%5Ctheta%20%5Cbar%7BX%7D%5E%7B(t)%7D+%5Ctheta%20E%5BX%5E%7B(t)%7D%5D%20-%20(%5Cbar%7BY%7D%5E%7B(c)%7D-%5Ctheta%20%5Cbar%7BX%7D%5E%7B(c)%7D+%5Ctheta%20E%5BX%5E%7B(c)%7D%5D%20)%0A%5Cend%7Balign%7D"> Note that prior to the treatment <img src="https://latex.codecogs.com/png.latex?E%5BX%5E%7B(t)%7D%5D%20=%20E%5BX%5E%7B(c)%7D%5D">. Deng et. al also recommend using the same <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> for both treatment and control groups, which we will see in a future post can be improved upon.↩︎</p></li>
<li id="fn2"><p>Hat tip Evan Miller, I saw this section’s title in an internal doc and had a good laugh.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2025-03-03-cuped/</guid>
  <pubDate>Mon, 03 Mar 2025 05:00:00 GMT</pubDate>
</item>
<item>
  <title>How Long to Run a Bayesian AB Test</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-09-01-ab-length/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Bayesian decision making with loss functions was a very popular with stakeholders and data scientists when I was working in AB testing. In short, eschew p values instead ask “If I made this decision, and I was wrong, what do I stand to lose?” and then make the decision which minimizes your expected loss. In my opinion, and from what I’ve heard from others, this is an attractive method because it places the thing we care most about (usually revenue, or improvement to the metric) at the heart of the decision.</p>
<p>But while Bayes is nice for decision making, I would always get the same question from stakeholders: “How long do we run the experiment”? As a frequentist, you can answer this by appealing to statistical power, but Bayes has at least more options. Kruschke <sup>1</sup> argues for using posterior precision as a stopping criterion, others (e.g.&nbsp;David Robinson<sup>2</sup>) have mentioned setting some threshold for expected loss. These seem to be the most popular from what I’ve read, and I think both of these make a lot of sense – especially the stopping criterion based on precision. But that doesn’t really answer my question. I want to answer “how long do we have to run the experiment”, which should be answered in a unit of time and not “until your precision is <img src="https://latex.codecogs.com/png.latex?x">”. Answering in this way just results in another question, such as “how much precision do I need”. Additionally, these approaches have no time element – the experiment could go on for much longer than we might be willing to accept, and we may still not reach our stopping criterion. What do we do in those cases, and how do we understand the trade offs? How do I prevent stakeholders from using the stopping without the stopping criterion as precedence for running under powered experiments? I don’t have answers to those questions.</p>
<p>When I asked about this on twitter, a few people mentioned <a href="https://en.wikipedia.org/wiki/Expected_value_of_sample_information">The Expected Value of Sample Information</a> (EVSI) which I think is closer to what I want. In short, the EVSI helps us understand the change in expected loss the decision maker could obtain from getting access to an additional sample before making a decision. This is closer to what I want, because now I could say to a stakeholder “Don’t/Stop now, there is a <img src="https://latex.codecogs.com/png.latex?p%5C%25"> chance the results would change in a week”. It may not be a direct answer for how long, but its closer. Additionally, Carl Vogel (then of Babylist) seemed to be using this approach, as explained in his posit::conf 2023 talk<sup>3</sup>, so it seems like SOMEONE is doing this already and I’m not just crazy.</p>
<p>I think the EVSI approach is good, but I have lingering questions, mostly about calibration. So in this post, I want to run a few simulations to see how well calibrated this procedure can be in the case where we run an experiment with two variants and a binomial outcome. I’ll set up some math as a refresher, then we’ll dive into the simulations.</p>
</section>
<section id="refresher-on-decision-making" class="level2">
<h2 class="anchored" data-anchor-id="refresher-on-decision-making">Refresher on Decision Making</h2>
<p>Suppose I launch a test with two variants. I’m interested in estimating each variant’s mean outcome, <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> (which for all intents and purposes could a conversion rate for some process). I collect some data, <img src="https://latex.codecogs.com/png.latex?y">, and I get posterior distributions for each <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, <img src="https://latex.codecogs.com/png.latex?p(%5Ctheta%20%5Cmid%20y)">. I need to make a decision about which variant to launch, and I want to do that based on their mean outcomes, but I don’t know the mean outcomes perfectly. One way to make the decision is through minimizing expected loss. Let <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D(%5Ctheta_A,%20%5Ctheta_B,%20x)"> be the loss I would incur were I to launch variant <img src="https://latex.codecogs.com/png.latex?x"> (e.g.&nbsp;A/B) when in truth <img src="https://latex.codecogs.com/png.latex?%5Cneg%20x"> (e.g.&nbsp;B/A) was the superior variant. The expected loss for shipping <img src="https://latex.codecogs.com/png.latex?x"> is provided by the following integral</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5B%5Cmathcal%7BL%7D%5D(x)%20=%20%5Cint_%7B%5Ctheta_A%7D%20%5Cint_%7B%5Ctheta_%7BB%7D%7D%20%5Cmathcal%7BL%7D(%5Ctheta_A,%20%5Ctheta_B,%20x)%20p(%5Ctheta_A,%20%5Ctheta_%7BB%7D%20%5Cmid%20y_B,%20y_B)%20%5C,%20d%5Ctheta_A%20%5C,%20d%5Ctheta_B%20%5C%3E,%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?p"> is the joint posterior distribution of <img src="https://latex.codecogs.com/png.latex?%5Ctheta_A,%20%5Ctheta_B">. The decision, <img src="https://latex.codecogs.com/png.latex?D">, we should make is to launch the variant which results in smallest expected loss</p>
<p><img src="https://latex.codecogs.com/png.latex?%20D%20=%20%20%5Cunderset%7B%7Bx%20%5Cin%20%5C%7BA,%20B%5C%7D%7D%7D%7B%5Coperatorname%7Barg%20min%7D%7D%20%5Cleft%5C%7B%20E%5B%5Cmathcal%7BL%7D%5D(x)%20%20%5Cright%5C%7D%20%5C%3E.%20"></p>
<p>For more on this sort of evaluation for AB testing, see <a href="https://www.chrisstucchio.com/pubs/VWO_SmartStats_technical_whitepaper.pdf">this report</a> by Chris Stucchio. In what follows, I’m going to use the following loss function</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmathcal%7BL%7D(%5Ctheta_A,%20%5Ctheta_b,%20x)%20=%20%5Cbegin%7Bcases%7D%20&amp;%20%5Cmax(%5Ctheta_B-%5Ctheta_A,%200)%20%5C%3E,%20&amp;%20x=A%20%5C%5C%5C%5C%20&amp;%20%5Cmax(%5Ctheta_A-%5Ctheta_B,%200)%20%5C%3E,%20&amp;%20x=B%5Cend%7Bcases%7D%20%5C%3E%20"></p>
<p>I interpret this loss function to be the improvement to the mean outcome we would has missed out on, had we shipped the wrong variant. As an example, if we ship A but B is truly better, then we lose out on a total of <img src="https://latex.codecogs.com/png.latex?%5Ctheta_B%20-%20%5Ctheta_A">. If we ship A and A is truly the superior variant, then we lose out on 0 improvement to the metric (because we chose right). Note that this works for revenue too! This decision can be written succinctly in code using draws from the posterior as follows</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">decision <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(draws_a, draws_b){</span>
<span id="cb1-2">  diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> draws_b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> draws_a</span>
<span id="cb1-3">  loss_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(diff, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-4">  loss_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>diff, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-5">  </span>
<span id="cb1-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(loss_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> loss_b){</span>
<span id="cb1-7">    winner <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span></span>
<span id="cb1-8">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-9">    winner <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span></span>
<span id="cb1-10">  }</span>
<span id="cb1-11">  </span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">winner=</span>winner, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loss_a=</span>loss_a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loss_b=</span>loss_b)</span>
<span id="cb1-13">}</span></code></pre></div>
</div>
</section>
<section id="quick-primer-on-evsi" class="level2">
<h2 class="anchored" data-anchor-id="quick-primer-on-evsi">Quick Primer on EVSI</h2>
<p>The expected loss from the optimal decision given the data <img src="https://latex.codecogs.com/png.latex?y_A,%20y_B"> would be</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%20E%5B%5Cmathcal%7BL%7D%5D(D)%20&amp;=%20%20%20%5Cunderset%7B%7Bx%20%5Cin%20%5C%7BA,%20B%5C%7D%7D%7D%7B%5Coperatorname%7Bmin%7D%7D%20%5Cleft%5C%7B%20E%5B%5Cmathcal%7BL%7D%5D(x)%20%20%5Cright%5C%7D%20%5C%5C%20&amp;=%20%5Cunderset%7B%7Bx%20%5Cin%20%5C%7BA,%20B%5C%7D%7D%7D%7B%5Coperatorname%7Bmin%7D%7D%20%20%5Cint_%7B%5Ctheta_A%7D%20%5Cint_%7B%5Ctheta_%7BB%7D%7D%20%5Cmathcal%7BL%7D(%5Ctheta_A,%20%5Ctheta_B,%20x)%20p(%5Ctheta_A,%20%5Ctheta_%7BB%7D%20%5Cmid%20y_A,%20y_B)%20%5C,%20d%5Ctheta_B%20%5C,%20d%5Ctheta_A%20%20%5Cend%7Balign*%7D%20"></p>
<p>Suppose I had the opportunity to gain additional samples. Were I to observe <img src="https://latex.codecogs.com/png.latex?%5Ctilde%7By%7D_A,%20%5Ctilde%7By%7D_B">, the expected loss would be</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5B%5Cmathcal%7BL%7D%5D(%5Ctilde%7BD%7D)=%20%5Cunderset%7B%7Bx%20%5Cin%20%5C%7BA,%20B%5C%7D%7D%7D%7B%5Coperatorname%7Bmin%7D%7D%20%20%5Cint_%7B%5Ctheta_A%7D%20%5Cint_%7B%5Ctheta_%7BB%7D%7D%20%5Cmathcal%7BL%7D(%5Ctheta_A,%20%5Ctheta_B,%20x)%20p(%5Ctheta_A,%20%5Ctheta_%7BB%7D%20%5Cmid%20y_A%20+%20%5Ctilde%7By%7D_A,%20y_B%20+%20%5Ctilde%7By%7D_B)%20%5C,%20d%5Ctheta_B%20%5C,%20d%5Ctheta_A%20%20"> where <img src="https://latex.codecogs.com/png.latex?%5Ctilde%7BD%7D"> is the optimal decision from the new data. Of course, we can’t say what this optimal decision would be since we don’t know the new data. But, having a model for these data, we could sample from that model and integrate over the uncertainty for <img src="https://latex.codecogs.com/png.latex?%5Ctilde%7By%7D_A,%20%5Ctilde%7By%7D_B">. That means we would compute</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5B%5Cmathcal%7BL%7D%5D(%5Ctilde%7BD%7D)=%20%5Cint_%7B%5Ctheta_a%7D%20%5Cint_%7B%5Ctheta_b%7D%5Cunderset%7B%7Bx%20%5Cin%20%5C%7BA,%20B%5C%7D%7D%7D%7B%5Coperatorname%7Bmin%7D%7D%20%20%5Cint_%7B%5Ctilde%7B%5Ctheta%7D_A%7D%20%5Cint_%7B%5Ctilde%7B%5Ctheta%7D_%7BB%7D%7D%20%5Cmathcal%7BL%7D(%5Ctilde%7B%5Ctheta%7D_A,%20%5Ctilde%7B%5Ctheta%7D_B,%20x)%20p(%5Ctilde%7B%5Ctheta%7D_A,%20%5Ctilde%7B%5Ctheta%7D_%7BB%7D%20%5Cmid%20y_A%20+%20%5Ctilde%7By%7D_A,%20y_B%20+%20%5Ctilde%7By%7D_B)%20p(%5Ctilde%7By%7D_A,%20%5Ctilde%7By%7D_B%20%5Cmid%20%5Ctheta_A,%20%5Ctheta_B%20)%20p(%5Ctheta_A,%20%5Ctheta_B%20%5Cmid%20y_A,%20y_B)%20%5C,%20d%5Ctilde%7B%5Ctheta%7D_B%20%5C,%20d%5Ctilde%7B%5Ctheta%7D_A%20%20%5C,%20d%5Ctheta_B%20%5C,%20d%5Ctheta_A%20"></p>
<p>Now, this looks like a right harry integral. However, its straightforward to understand. Consider the following process:</p>
<ul>
<li>Use the posterior predictive (<img src="https://latex.codecogs.com/png.latex?p(%5Ctilde%7By%7D_A,%20%5Ctilde%7By%7D_B%20%5Cmid%20%5Ctheta_A,%20%5Ctheta_B%20)%20p(%5Ctheta_A,%20%5Ctheta_B%20%5Cmid%20y_A,%20y_B)">) to sample data you would have seen were you to continue the experiment.</li>
<li>Act as if that data was the true data and condition your model on it to obtain your future updated posterior (<img src="https://latex.codecogs.com/png.latex?p(%5Ctilde%7B%5Ctheta%7D_A,%20%5Ctilde%7B%5Ctheta%7D_%7BB%7D%20%5Cmid%20y_A%20+%20%5Ctilde%7By%7D_A,%20y_B%20+%20%5Ctilde%7By%7D_B)">)</li>
<li>Compute the optimal loss for each decision having seen that data</li>
<li>Determine what decision you would make had that been the data you would have seen.</li>
<li>Repeat for as many draws from the posterior predictive as you like, and average over samples.</li>
</ul>
<p>The EVSI should then be</p>
<p><img src="https://latex.codecogs.com/png.latex?EVSI%20=%20E%5B%5Cmathcal%7BL%7D%5D(D)%20-%20%20E%5B%5Cmathcal%7BL%7D%5D(%5Ctilde%7BD%7D)%20"></p>
<p>which can be understood as the expected reduction in expected loss were you to continue sampling.</p>
</section>
<section id="evsi-changing-ones-mind-and-calibration" class="level2">
<h2 class="anchored" data-anchor-id="evsi-changing-ones-mind-and-calibration">EVSI, Changing One’s Mind, and Calibration</h2>
<p>While EVSI can be used to determine if one should continue to sample based on costs and expected benefits, I am interested in a slightly different question. Ostensibly, EVSI can be used to justify continued sampling in the event one variant looks like a winner because, as Carl Vogel says, “[each future] posterior may not change my mind at all based on what I was going to do under the prior. They may change my mind a lot based on what I was going to do under the prior”. This leads me to ask about calibration for changing my mind. If this procedure tells me there is a <img src="https://latex.codecogs.com/png.latex?p%5C%25"> I change my mind about which variant to ship, do I actually change my mind <img src="https://latex.codecogs.com/png.latex?p%5C%25"> of the time?</p>
<p>The answer is “Yea, kind of”! To see this, let’s do some simulation. I’ll simulate some data from a two variant AB test with a binary outcome. Then, I will compute the EVSI and determine if more data might change my mind as to what variant I might ship. Then, I’ll simulate additional data from the truth to see if my mind would have changed.</p>
<p>From there we can determine the calibration by looking at the proportion of simulations in which my mind actually changed, versus the proportion of simulations in which the EVSI computation forecasted I would have changed my mind. The code is in the cell below if you want to look at how I do this.</p>
<p>Here is a high level overview of the simulation:</p>
<ul>
<li>The true probability in group A is 10%.</li>
<li>The true probability in group B is 10.3% (a 3% lift).</li>
<li>We get 20, 000 subjects in the experiment per week, which is 10, 000 in each group per week.</li>
<li>We run the experiment for a single week and ask “If I ran for one more week, might I change my mind about what I ship”?</li>
<li>We use a beta binomial model for the analysis, and we have an effective prior sample size of 1000 (our priors are <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%20100"> and <img src="https://latex.codecogs.com/png.latex?%5Cbeta=900">).</li>
</ul>
<p>I realize there are a lot of hyperparameters we could tune here: More/fewer samples, higher/lower lift, day of week effects, etc etc. I’m going to keep it very simple for now and let you experiment as you see fit. This also means I can’t make sweeping statements about how well this performs or not.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3">true_probability_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-4">true_lift <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.03</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">true_probability_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> true_probability_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> true_lift</span>
<span id="cb2-7">N <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb2-8">nsims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">ALPHA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-11">BETA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>multisession, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-14">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> furrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nsims, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>{</span>
<span id="cb2-15">  </span>
<span id="cb2-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the experiment and observe outcomes</span></span>
<span id="cb2-17">  ya <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, true_probability_a)</span>
<span id="cb2-18">  yb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, true_probability_b)</span>
<span id="cb2-19">  </span>
<span id="cb2-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the posterior</span></span>
<span id="cb2-21">  posterior_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ya, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ya)</span>
<span id="cb2-22">  posterior_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> yb, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> yb)</span>
<span id="cb2-23">  </span>
<span id="cb2-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What decision would we make RIGHT NOW if we had to?</span></span>
<span id="cb2-25">  out_now <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">decision</span>(posterior_a, posterior_b)</span>
<span id="cb2-26">  current_decision <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out_now<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>winner</span>
<span id="cb2-27">  current_loss_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out_now<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>loss_a</span>
<span id="cb2-28">  current_loss_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> out_now<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>loss_b</span>
<span id="cb2-29">  </span>
<span id="cb2-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What might we see in the future, conditioned on what we know now?</span></span>
<span id="cb2-31">  forecasted_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nsims, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>{</span>
<span id="cb2-32">    </span>
<span id="cb2-33"></span>
<span id="cb2-34">    theta_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(posterior_a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-35">    theta_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(posterior_b, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-36">    </span>
<span id="cb2-37">    </span>
<span id="cb2-38">    future_y_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, theta_a)</span>
<span id="cb2-39">    future_y_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, theta_b)</span>
<span id="cb2-40">    </span>
<span id="cb2-41">    future_posterior_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ya <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> future_y_a, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ya <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> future_y_a)</span>
<span id="cb2-42">    future_posterior_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> yb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> future_y_b, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> yb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> future_y_b)</span>
<span id="cb2-43">    </span>
<span id="cb2-44">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">decision</span>(future_posterior_a, future_posterior_b)</span>
<span id="cb2-45">    </span>
<span id="cb2-46">  })</span>
<span id="cb2-47">  </span>
<span id="cb2-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Laplace smoothing to make sure there is always a non-zero chance of something happening.</span></span>
<span id="cb2-49">  forecasted_winners<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_chr</span>(forecasted_out, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'winner'</span>))</span>
<span id="cb2-50">  forecasted_loss_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(forecasted_out, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_a'</span>)</span>
<span id="cb2-51">  forecasted_loss_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(forecasted_out, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_b'</span>)</span>
<span id="cb2-52">  </span>
<span id="cb2-53">  prob_mind_change <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(forecasted_winners <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> current_decision)</span>
<span id="cb2-54">  </span>
<span id="cb2-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now, run the experiment into the future to see if we changed our minds</span></span>
<span id="cb2-56">  </span>
<span id="cb2-57">  ya <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ya <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, true_probability_a)</span>
<span id="cb2-58">  yb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> yb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N, true_probability_b)</span>
<span id="cb2-59">  </span>
<span id="cb2-60">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the posterior</span></span>
<span id="cb2-61">  posterior_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ya, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ya)</span>
<span id="cb2-62">  posterior_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ALPHA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> yb, BETA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> yb)</span>
<span id="cb2-63">  </span>
<span id="cb2-64">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What decision would we make RIGHT NOW if we had to?</span></span>
<span id="cb2-65">  future_decision <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">decision</span>(posterior_a, posterior_b)</span>
<span id="cb2-66">  </span>
<span id="cb2-67">  mind_changed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(future_decision<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>winner <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> current_decision)</span>
<span id="cb2-68">  </span>
<span id="cb2-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current_winner =</span> current_decision, </span>
<span id="cb2-70">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">future_winner =</span> future_decision<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>winner,</span>
<span id="cb2-71">         mind_changed, </span>
<span id="cb2-72">         prob_mind_change, </span>
<span id="cb2-73">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">forecasted_evsi_a =</span> current_loss_a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(forecasted_loss_a), </span>
<span id="cb2-74">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">forecasted_evsi_b =</span> current_loss_b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(forecasted_loss_b), </span>
<span id="cb2-75">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_evsi_a =</span> current_loss_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> future_decision<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>loss_a,</span>
<span id="cb2-76">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_evsi_b =</span> current_loss_b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> future_decision<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>loss_b)</span>
<span id="cb2-77">  </span>
<span id="cb2-78">  </span>
<span id="cb2-79">}, </span>
<span id="cb2-80"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.progress =</span> T, </span>
<span id="cb2-81"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.options =</span> furrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">furrr_options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span>T))</span></code></pre></div>
</details>
</div>
<p>Calibration results are shown below. Its…not bad, right? I suppose if this calibration really irked you then you could run this simulation assuming the true lift was <img src="https://latex.codecogs.com/png.latex?z%5C%25">, and recalibrate the estimates using whatever procedure you like!</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(results, CalibrationCurves<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valProbggplot</span>(prob_mind_change, mind_changed))</span>
<span id="cb3-2"></span>
<span id="cb3-3">out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ggPlot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-09-01-ab-length/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>I really like EVSI, and generally this whole procedure for thinking about if we should continue to collect data or not. The results from this tiny little simulation are not intended to be generalizable, and they very likely depend on things like the prior, how much additional data you would collect, and the priors for the model. However, I’ve chosen these parameters to roughly reflect real world scenarios I came across working in AB testing, so this is really encouraging to me!</p>
<p>So how would I answer a stakeholder who wanted to know how long to run the test if they wanted to use a Bayesian method? Generally I might advise a minimum run length of 1 week (so we can integrate over day of week effects). Then, its all sequential from there! Use this procedure to determine the probability you change your mind, and how much the additional sample might change your mind in terms of revenue/improvement/whatever your criterion is. There may come a time at which no more data would change your mind (at least according to the data you’ve seen so far) and at that point the inference problem is kind of irrelevant.</p>
<p>Generally, there are no “right” procedures when it comes to decision making – only trade offs. I particularly like this approach because its good at triaging risk, which is what I think data science should be.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Doing Bayesian data analysis↩︎</p></li>
<li id="fn2"><p>http://varianceexplained.org/r/bayesian-ab-testing/↩︎</p></li>
<li id="fn3"><p>https://www.youtube.com/watch?v=GN5PJXajxKw↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2024-09-01-ab-length/</guid>
  <pubDate>Sun, 01 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>What Is Confounding?</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-06-23-confound/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Thinking back to my <em>Introduction to Epidemiology</em> class, confounding was one of the topics of central interest. However, it took the remainder of my PhD (and then some) to really get <em>what confounding was</em>. Confounding was introduced as exposure and outcome having common cause. You’ve probably seen the idea motivated with the following DAG:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-06-23-confound/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Here, S is a common cause of <img src="https://latex.codecogs.com/png.latex?D"> and <img src="https://latex.codecogs.com/png.latex?Y">, and we’re typically interested in estimating the effect of <img src="https://latex.codecogs.com/png.latex?D"> on <img src="https://latex.codecogs.com/png.latex?Y">. Granted, the effect of <img src="https://latex.codecogs.com/png.latex?D"> on <img src="https://latex.codecogs.com/png.latex?Y"> is confounded. But like…why? DAG’s aside, what is happening here? That much isn’t answered in introductory classes, and I think it would behoove most people to learn the answer. As a digression, I know the simple difference in means can be decomposed into ATE + Selection Bias + Heterogeneous treatment effect, but I don’t think that really anwers what I want since that decomposition is in terms of potential outcomes and I want an answer which involves the data we have in hand and how we choose to summarize it.</p>
<p>To provide such an answer we need a little but of math, but <em>only</em> a little. In particular, we need the <em>The Law of Total Expectation</em>, which writes an expected value, <img src="https://latex.codecogs.com/png.latex?E%5BX%5D">, as a weighted average of conditional expectations, namely</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5BX%5D%20=%20%5Csum_a%20E%5BX%20%5Cmid%20A=a%5D%20P(A=a)%20%5C%3E.%20"> In what follows, I motivate confounding with a fairly typical example involving how a binary exposure affects risk of a binary outcome. We’ll discuss the “Right Way” to estimate the effect of the exposure as well as “The Wrong Way”. We’ll find that the confounding of the relationship between exposure and outcome comes down to a single fact: <em>the wrong weights are applied to the right estimates</em>.</p>
</section>
<section id="an-example" class="level2">
<h2 class="anchored" data-anchor-id="an-example">An Example</h2>
<p>Suppose a new drug <img src="https://latex.codecogs.com/png.latex?D"> is introduced to prevent death. In truth, the drug decreases the risk of death in both men and women by 10 percentage points, but men are more likely to take the drug and men are more likely to die. Hence, the effect of the drug is confounded by sex. Let <img src="https://latex.codecogs.com/png.latex?D=1"> be exposure to the drug, <img src="https://latex.codecogs.com/png.latex?S=1"> indicate males, and <img src="https://latex.codecogs.com/png.latex?Y=1"> indicate death. I’m going to simulate this scenario using the following data generating process</p>
<p><img src="https://latex.codecogs.com/png.latex?%20S%20%5Csim%20%5Coperatorname%7BBernoulli%7D(0.5)%20%5C%3E,%20"> <img src="https://latex.codecogs.com/png.latex?%20D%20%5Cmid%20S%20%5Csim%20%5Coperatorname%7BBernoulli%7D(0.6%20+%200.3S)%20%5C%3E,"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20Y%20%5Cmid%20D,%20S%20%5Csim%20%5Coperatorname%7BBernoulli%7D(0.4%20-%200.1D%20+%200.4S)%20%5C%3E."></p>
<p>I’ll simulate a million observations so that our precision is big enough to not worry about sampling variability. In R, that can be done with</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">sim_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>){</span>
<span id="cb1-2">  withr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_seed</span>(x, {</span>
<span id="cb1-3">    s <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-4">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s)</span>
<span id="cb1-5">    y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s)</span>
<span id="cb1-6">  })</span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(s, d, y)</span>
<span id="cb1-8">}</span></code></pre></div>
</div>
<p>We’ll use this data to explore the “Right Way” and teh “Wrong Way” of analyzing the causal effect of <img src="https://latex.codecogs.com/png.latex?D"> on <img src="https://latex.codecogs.com/png.latex?Y">.</p>
</section>
<section id="the-right-way" class="level2">
<h2 class="anchored" data-anchor-id="the-right-way">The “Right Way”</h2>
<p>Open up a book like <a href="https://www.hsph.harvard.edu/miguel-hernan/causal-inference-book/">“<em>What If</em>”</a> and you’ll find that the way to correctly estimate the effect of <img src="https://latex.codecogs.com/png.latex?D"> on <img src="https://latex.codecogs.com/png.latex?Y"> would be to first estimate the risk of death within strata defined by sex and then weight the stratified estimates by the prevalence of the strata. This can be done in the following way</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(marginaleffects)</span>
<span id="cb2-2"></span>
<span id="cb2-3">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_data</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>())</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-6">  modelr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_predictions</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(pred), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-9">  diff</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.09910701</code></pre>
</div>
</div>
<p>or, perhaps more elegantly, using <code>{marginaleffects}</code></p>
<div class="cell">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(marginaleffects)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If I didn't know P(S) maybe I wouldn't use datagrid in this way</span></span>
<span id="cb4-4">nd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datagrid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg_comparisons</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> nd)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
 Term Contrast Estimate Std. Error     z Pr(&gt;|z|)   S  2.5 %  97.5 %
    d    1 - 0  -0.0991    0.00119 -83.6   &lt;0.001 Inf -0.101 -0.0968

Columns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high 
Type:  response </code></pre>
</div>
</div>
<p>Regardless of approach, the estimate is very close to the actual effect of the drug; a reduction in risk of death of 10 percentage points. Why exactly this procedure works relies on the consistency and ignorability assumptions, and the law of total expectation.</p>
<p>Briefly, if we have consistency and ignorability then <img src="https://latex.codecogs.com/png.latex?E%5BY(d)%20%5Cmid%20S=s%5D%20=%20E%5BY%5Cmid%20D=d,%20S=s%5D">, and by the law of total expectation</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5BY(d)%5D%20=%20%5Csum_%7Bs%7D%20E%5BY(d)%20%5Cmid%20S=s%5D%20P(S=s)%20=%5Csum_%7Bs%7D%20E%5BY%20%5Cmid%20D=d,%20S=s%5D%20P(S=s)%20"> which is a weighted average of within strata estimates. ’Nuff said, let’s take an extended look at the wrong way of doing things.</p>
</section>
<section id="the-wrong-way" class="level2">
<h2 class="anchored" data-anchor-id="the-wrong-way">The “Wrong Way”</h2>
<p>So we know the “Right Way” uses the law of total expectation to get the right weights for the within strata estimates. What does the “Wrong Way” estimate then if not the true causal contrast? Let’s use <code>avg_comparisons</code> to see</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_data</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>())</span>
<span id="cb6-2"></span>
<span id="cb6-3">nd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datagrid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg_comparisons</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> nd)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
 Term Contrast Estimate Std. Error    z Pr(&gt;|z|)   S  2.5 % 97.5 %
    d    1 - 0   0.0599    0.00115 51.8   &lt;0.001 Inf 0.0576 0.0621

Columns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high 
Type:  response </code></pre>
</div>
</div>
<p>Interesting, the wrong answer is <em>really wrong</em>. Without adjusting for sex, we would conclude that the drug increases risk of death by 6%. Of course, this is a result of the fact that men are more likely to take the drug and more likely to die.</p>
<p>The “Wrong Way” is a simple difference in means between exposure groups. In doing so, we marginalize over the distribution of <img src="https://latex.codecogs.com/png.latex?S"> conditional on <img src="https://latex.codecogs.com/png.latex?D">. Since the law of total expectation is used to obtain the right answer, it might be beneficial to use it here as well. In the “Wrong Way” we compute</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5BY%20%5Cmid%20D=d%5D%20%5C%3E.%20"></p>
<p>which can be re-written using the law of total expectation as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5BY%20%5Cmid%20D=d%5D%20=%20%5Csum_%7Bs%7D%20E%5BY%20%5Cmid%20D=d,%20S=s%5D%20P(S=s%5Cmid%20D=d)%20"></p>
<p>Aha! Now we see what confounding <em>really is</em>. Note that <img src="https://latex.codecogs.com/png.latex?E%5BY%20%5Cmid%20D=d,%20S=s%5D"> appears in both the “Right Way” and the “Wrong Way”, but in the “Wrong Way” the weights are wrong! They should be <img src="https://latex.codecogs.com/png.latex?P(S=s)"> but instead they are <img src="https://latex.codecogs.com/png.latex?P(S=s%5Cmid%20D=d)">! Confounding is (partially) an improper weighting of the correct estimates!</p>
<p>As an interesting digression, we can actually compute what the wrong approach would produce in the limit of infinite data if we just leverage Bayes rule to rewrite <img src="https://latex.codecogs.com/png.latex?P(S=s%5Cmid%20D=d)"> as</p>
<p><img src="https://latex.codecogs.com/png.latex?P(S=s%5Cmid%20D=d)%20=%20%5Cdfrac%7BP(D=d%20%5Cmid%20S=s)%20P(S=s)%7D%7BP(D=d)%7D%20%5C%3E.%20"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">Ey <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d, s){</span>
<span id="cb8-2">  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s</span>
<span id="cb8-3">}</span>
<span id="cb8-4"></span>
<span id="cb8-5">Ed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(s){</span>
<span id="cb8-6">  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s  </span>
<span id="cb8-7">}</span>
<span id="cb8-8"></span>
<span id="cb8-9">Pd1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">Eyd1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ey</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Pd1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ey</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Pd1</span>
<span id="cb8-12">Eyd0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ey</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Pd1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ey</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Pd1)</span>
<span id="cb8-13"></span>
<span id="cb8-14">wrong_answer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Eyd1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Eyd0</span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#0.06</span></span></code></pre></div>
</div>
<p>This really drives the point home that confounding is not a matter of more data, rather its a matter of the right data.</p>
</section>
<section id="more-wrong" class="level2">
<h2 class="anchored" data-anchor-id="more-wrong">More Wrong</h2>
<p>So confounding is partially the wrong weights applied to the right estimates. Earlier, I mentioned that the simple difference in means can be decomposed into selection bias and heterogeneous treatment effects. Now, I’ve designed this example to have a homogeneous treatment effect, so we know that the error comes from selection bias. Let’s determine where exactly selection bias lives in the wrong weights applied to the right estimates, <img src="https://latex.codecogs.com/png.latex?P(S=s%5Cmid%20D=d)">.</p>
<p>According to <a href="https://mixtape.scunning.com/04-potential_outcomes#simple-difference-in-means-decomposition">Causal Inference: The Mixed Tape</a>, the selection bias in the simple difference in means is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20E%5BY(0)%20%5Cmid%20D=1%5D%20-%20E%5BY(0)%20%5Cmid%20D=0%5D%20%5C%3E.%20"></p>
<p>Again, let’s use the law of total expectation to re-write <img src="https://latex.codecogs.com/png.latex?E%5BY(d%5E%5Cprime)%20%5Cmid%20D=d%5D"> as a marginalization over <img src="https://latex.codecogs.com/png.latex?S">.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cbegin%7Balign*%7DE%5BY(d%5E%5Cprime)%20%5Cmid%20D=d%5D%20&amp;=%20%5Csum_%7Bs%7D%20E%5BY(d%5E%5Cprime)%20%5Cmid%20D=d,%20S=s%5DP(S=s%5Cmid%20D=d)%20%5C%5C%20&amp;=%20%5Csum_%7Bs%7DE%5BY(d%5E%5Cprime)%20%5Cmid%20D=d,%20S=s%5D%5Cfrac%7BP(D=d%20%5Cmid%20S=s)%20P(S=s)%7D%7BP(D=d)%7D%20%5Cend%7Balign*%7D"></p>
<p>Its easier to spot where the bias comes from (mathematically) if you consider what the implication would be were exposure to be independent of sex. If exposure were independent of sex, as would be the case in a randomized experiment, then <img src="https://latex.codecogs.com/png.latex?P(D=d%20%5Cmid%20S=s)%20=%20P(D=d)">. The weight in this sum then collapses to <img src="https://latex.codecogs.com/png.latex?P(S=s)">, which is the right weight. However, in this example, <img src="https://latex.codecogs.com/png.latex?D"> is not independent of <img src="https://latex.codecogs.com/png.latex?S"> and so <img src="https://latex.codecogs.com/png.latex?P(D=d%20%5Cmid%20S=s)%20%5Cneq%20P(D=d)">! This probability has a name, <em>the propensity score</em>, and that it is not the same between strata defined by sex is the reason that the selection bias is non zero in our example. If the propensity score was the same within strata, then strata defined by <img src="https://latex.codecogs.com/png.latex?D"> would be exchangeable and <img src="https://latex.codecogs.com/png.latex?E%5BY(d%5E%5Cprime)%20%5Cmid%20D=d%5D%20=%20E%5BY(d%5E%5Cprime)%5D">.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Confounding, at least exemplified by the DAG at the top of this post, can be seen as the improper weighting of the right estimates. When viewed through this lens, approaches like re-weighting (via inverse propensity scores or some other mechanism) make a lot more intuitive sense as possible remidies.</p>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-06-23-confound/</guid>
  <pubDate>Wed, 26 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Interesting Interview Questions</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-05-21-interview/</link>
  <description><![CDATA[ 





<p>I’m about to do some interviews this week which got me reflecting on some of my favorite questions I’ve been asked. Usually, these are little toy problems you’d find in an intro to probability textbook, but they can be pretty fun and rewarding to solve.</p>
<section id="question-1" class="level2">
<h2 class="anchored" data-anchor-id="question-1">Question 1</h2>
<p>Person A has <img src="https://latex.codecogs.com/png.latex?n"> fair coins, and person B has <img src="https://latex.codecogs.com/png.latex?n+1"> fair coins. They each can flip all their coins simultaneously. What is the probability that person B gets more heads? Provide your answer as a function of <img src="https://latex.codecogs.com/png.latex?n">.</p>
</section>
<section id="answer" class="level2">
<h2 class="anchored" data-anchor-id="answer">Answer</h2>
<p>I actually took the liberty of editing this question (the function of <img src="https://latex.codecogs.com/png.latex?n"> was not included). Anyway, this is pretty simple. Suppose <img src="https://latex.codecogs.com/png.latex?n"> is large enough to justify using a normal approximation. Then</p>
<p><img src="https://latex.codecogs.com/png.latex?%20A%20%5Csim%20%5Coperatorname%7Bnormal%7D%5Cleft(%20%5Cdfrac%7Bn%7D%7B2%7D,%20%5Cdfrac%7Bn%7D%7B4%7D%20%5Cright)%20%5C%3E,"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20B%20%5Csim%20%5Coperatorname%7Bnormal%7D%5Cleft(%20%5Cdfrac%7Bn%7D%7B2%7D,%20%5Cdfrac%7Bn%7D%7B4%7D%20%5Cright)%20%5C%3E."></p>
<p>We’re interested in <img src="https://latex.codecogs.com/png.latex?%5CPr(B%20%5Cgt%20A)%20=%20%5CPr(B%20-%20A%20%5Cgt%200)">. So let <img src="https://latex.codecogs.com/png.latex?D=B-A">. Then <img src="https://latex.codecogs.com/png.latex?D"> has the following distribution</p>
<p><img src="https://latex.codecogs.com/png.latex?%20D%20%5Csim%20%5Coperatorname%7Bnormal%7D%5Cleft(%20%5Cdfrac%7B1%7D%7B2%7D,%20%5Cdfrac%7B2n+1%7D%7B4%7D%20%5Cright)%20%5C%3E."></p>
<p>Now, we just need to make a standardized normal random variable and pass it through the CDF of a gaussian. That turns out to be</p>
<p><img src="https://latex.codecogs.com/png.latex?%20Z%20=%20%5Cdfrac%7B0-%5Cfrac%7B1%7D%7B2%7D%7D%7B%5Csqrt%7B%5Cfrac%7B2n+1%7D%7B4%7D%7D%7D%20=%20%5Cdfrac%7B-1%7D%7B%5Csqrt%7B2n+1%7D%7D%20"></p>
<p>and so</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CPr(B%20%5Cgt%20A)%20=%20Pr(D%20%5Cgt%200)%20=%201%20-%20%5CPhi(Z(n))%20%5C%3E."></p>
<p>I’m not sure what the interviewer expected, but we can see that the probability approaches 1/2 as <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty">.</p>
<p>Now, this might be a “good ’nuff” answer, but it relies on an approximation that breaks down for small <img src="https://latex.codecogs.com/png.latex?n">. What is the REAL answer?</p>
<p>For that, we need to use convolution. If <img src="https://latex.codecogs.com/png.latex?D=B-A"> then <img src="https://latex.codecogs.com/png.latex?D"> can take on integer values between <img src="https://latex.codecogs.com/png.latex?-n"> (where B flips 0 heads and A flips <img src="https://latex.codecogs.com/png.latex?n">) and <img src="https://latex.codecogs.com/png.latex?n+1"> (where B flips <img src="https://latex.codecogs.com/png.latex?n+1"> heads and A flips 0).</p>
<p>The convolution is then the following sum</p>
<p><img src="https://latex.codecogs.com/png.latex?%5CPr(D%20=%20k)%20=%20%5Csum_%7Bi=1%7D%5E%7Bn+1%7D%20%5CPr(B=i)%20%5CPr(A%20=%20i-k)"></p>
<p>with the added stipulation that <img src="https://latex.codecogs.com/png.latex?%5CPr(A%3En)%20=%200">. Ok, not a fun sum to do by hand, let’s cook up a numpy function</p>
<div id="3ffbd261" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> binom, norm</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.patches <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> patches</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> itertools</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> f(k:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb1-9">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-10">    density <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binom(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>).pmf(i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>binom(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>).pmf(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>k)</span>
<span id="cb1-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> density.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> approx_f(n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb1-14">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) </span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> norm.cdf(z)</span>
<span id="cb1-16"></span>
<span id="cb1-17">max_coins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-18">coins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_coins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-19">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(coins.size)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(coins):</span>
<span id="cb1-22"></span>
<span id="cb1-23">    outcomes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-24">    probs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f(outcomes, n)</span></code></pre></div>
</div>
<div id="76be825d" class="cell" data-execution_count="2">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-05-21-interview/index_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>In fact, it looks like the probability is <em>always</em> 0.5, which is interesting. Let’s see why.</p>
<p>Credit to Misha Lavrov for showing me this very simple and elegant solution. Again, let <img src="https://latex.codecogs.com/png.latex?D%20=%20B-A">, but now instead focus on <img src="https://latex.codecogs.com/png.latex?D+n%20=%20B%20+%20(n-A)"> which is the number of heads from <img src="https://latex.codecogs.com/png.latex?B"> plus the number of tails from <img src="https://latex.codecogs.com/png.latex?A">. Since the coins are fair, this is the sum of two binomials with <img src="https://latex.codecogs.com/png.latex?2n+1"> trials. Hence, the probability mass function is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CPr(D+n%20=%20n+k)%20=%20%7B2n+1%20%5Cchoose%20n+k%7D%202%5E%7B-2n-1%7D%20%5C%3E,%20k%20%5Cin%20%5Cleft%5B%20-n%20%5C%3E,%20%5Ccdots%20%5C%3E,%20n+1%5Cright%5D%20"></p>
<p>This means <img src="https://latex.codecogs.com/png.latex?%5CPr(D+n)"> is symmetric about <img src="https://latex.codecogs.com/png.latex?n+0.5"> implying that <img src="https://latex.codecogs.com/png.latex?%5CPr(D%5Cleq%200)%20=%20%5CPr(D%5Cgt%200)%20=%200.5"> as desired.</p>


</section>

 ]]></description>
  <category>Probability</category>
  <guid>https://dpananos.github.io/posts/2024-05-21-interview/</guid>
  <pubDate>Tue, 21 May 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Peeking Sets You Up For Dissapointment</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-02-08-peek/</link>
  <description><![CDATA[ 





<p>Peeking (looking for significance in an AB test before the experiment has enough samples to reach desired power) is a “no no”. Rationales for not peeking typically mention inflated type 1 error rate.</p>
<p>Unless you’re just randomizing into two groups and not changing anything, the null is unlikely to be true. So inflated type one error rate is really not the primary concern. Rather, if we peek then we are setting ourselves up for disappointment. Detected effects from peeking will typically not generalize, and we will be overstating out impact. The reason why is <a href="https://dpananos.github.io/posts/2024-01-22-curse/">fairly clear when considering the Winner’s Curse</a>.</p>
<p>The long and the short of it is as follows:</p>
<ul>
<li>When you peak, your tests are under powered.</li>
<li>Statistically significant results from under powered tests generally over estimate the truth (see my post on the Winner’s curse for why).</li>
<li>So when you detect an effect from peeking, you are very likely over estimating your impact. When you roll out the change globally, you’re probably not going to see the impact you expected. This can lead to disappointment (and a lot of questions from everyone when they don’t see changes to the numbers on a dashboard).</li>
</ul>
<p>As a concrete example, say you design an experiment to detect a 3% lift in a binary outcome, and say your intervention truly does improve the outcome by 3%. The baseline is 10%, and you design your experiment to have 80% power with a 5% false positive rate. You’re going to need a total of 318,132 users in your experiment…which sounds like a lot. What if we instead checked for statistical significance each time the groups hit a multiple of 20, 000. Depending on how fast we can accrue users into the experiment, this could save time…right?</p>
<p>Shown below is a line plot of the relative error between what you would expect to detect at each peek and the true lift. The plot speaks for itself; conditional on finding an effect early, you’re likely over estimating the truth.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>), N)</span>
<span id="cb1-2">pwr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(n, \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.prop.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span>x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p1=</span>pc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p2=</span>pt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power)</span>
<span id="cb1-3">log_rr_mean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pc)</span>
<span id="cb1-4">log_rr_var <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pt)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(pt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pc)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(pc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n)</span>
<span id="cb1-5">log_rr_sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(log_rr_var)</span>
<span id="cb1-6"></span>
<span id="cb1-7">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> log_rr_mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_sd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(pwr)</span>
<span id="cb1-8"></span>
<span id="cb1-9"></span>
<span id="cb1-10"></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expectation from truncated normal</span></span>
<span id="cb1-13">trunc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> log_rr_mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_rr_sd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>((z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_sd) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>((z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_sd))</span>
<span id="cb1-14">err <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>( log_rr_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>trunc)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>log_rr_mean</span>
<span id="cb1-15"></span>
<span id="cb1-16">sims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(n, \(nn) {</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  </span>
<span id="cb1-19">  r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, {</span>
<span id="cb1-20">    </span>
<span id="cb1-21">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, nn, pc)</span>
<span id="cb1-22">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, nn, pt)</span>
<span id="cb1-23">  </span>
<span id="cb1-24">  test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prop.test</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(y, x), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(nn, nn))</span>
<span id="cb1-25">  </span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb1-27">  })</span>
<span id="cb1-28">  </span>
<span id="cb1-29">  (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span>T) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_mean</span>
<span id="cb1-30">  </span>
<span id="cb1-31">  </span>
<span id="cb1-32">})</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-02-08-peek/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In the best case scenario, where you end the experiment on the first peek, you’re going to vastly over estimate the impact you had (almost by a factor of 2.3x!). The worst part is that these errors compound, so if you peek on every experiment you’re going to <em>grossly</em> over estimate the total impact you had. Maybe something to talk to your PMs about.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-02-08-peek/</guid>
  <pubDate>Thu, 08 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>You Just Said Something Wrong About Logistic Regression</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-02-06-logit/</link>
  <description><![CDATA[ 





<p>Congratulations, you just said something wrong about logistic regression. That’s OK, logistic regression is hard and we all have to learn/re-learn some things from time to time.</p>
<p>This is a living blog post intended to address some common misconceptions or flat out wrong statements I’ve seen people make about logistic regression.</p>
<section id="the-coefficients-of-logistic-regression-are-interpreted-as-youre-x-times-more-likely-to-see-y-given-factor-z." class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="the-coefficients-of-logistic-regression-are-interpreted-as-youre-x-times-more-likely-to-see-y-given-factor-z."><span class="header-section-number">1</span> The Coefficients of Logistic Regression are Interpreted as “You’re X Times More Likely to See Y Given Factor Z”.</h2>
<p>Wrong! The (exponentiated) coefficients of logistic regression are interpreted as “the odds you see Y given Factor Z are X times larger”.</p>
<p>Phrases like “X times <em>more likely</em>” allude to the the probability of the event. If the probability of getting some event is 10%, and the probability of getting some other event is 20%, then you are 2 times more likely to get the latter event than the former.</p>
<p>This kind of comparison between two probabilities is called “the relative risk” (or risk ratio, or lift, it really depends on where you work). The coefficients of a logistic regression are <em>not</em> risk ratios, nor are they log risk ratios; they are log odds ratios.</p>
<p>Now, it is actually fine to make this mistake under a few conditions. Namely, when a) the odds ratio is sufficiently small, and/or b) the baseline risk is sufficiently small. You can see this on the plot below which plots the odds ratios and corresponds risk ratios for various baseline risks. On the whole though, you shouldn’t interpret any output from logistic regression as a risk ratio unless you explicitly go out of our way to estimate that quantity.</p>
<div id="bd57bd8e" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.axes_grid1.inset_locator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> inset_axes</span>
<span id="cb1-5"></span>
<span id="cb1-6">p1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.20</span>])</span>
<span id="cb1-7"></span>
<span id="cb1-8">rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)</span>
<span id="cb1-11">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb1-12">ax.set_xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-13">ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set light gray background</span></span>
<span id="cb1-16">ax.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#f0f0f0'</span>)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set white grid lines</span></span>
<span id="cb1-19">ax.grid(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21">ax.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k--'</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'magma'</span>)</span>
<span id="cb1-24">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(p1)))</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(p1):</span>
<span id="cb1-27">    p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p</span>
<span id="cb1-28">    odr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p)</span>
<span id="cb1-29">    ax.plot(rr, odr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i])</span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move legend outside the plot axis to the right</span></span>
<span id="cb1-32">ax.legend(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Baseline risk"</span>, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center left'</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set y ticks to [1, 2, 3, 4, 5]</span></span>
<span id="cb1-35">ax.set_yticks([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb1-36">ax.set_xticks([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb1-37">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Relative Risk'</span>)</span>
<span id="cb1-38">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Odds Ratio'</span>)</span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add zoom inset region axis on the bottom center</span></span>
<span id="cb1-41">axins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.inset_axes(</span>
<span id="cb1-42">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusted position</span></span>
<span id="cb1-43">    xlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), ylim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), xticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>], yticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>])</span>
<span id="cb1-44">    </span>
<span id="cb1-45">axins.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k--'</span>)</span>
<span id="cb1-46">axins.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#f0f0f0'</span>)</span>
<span id="cb1-47">axins.grid(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(p1):</span>
<span id="cb1-50">    p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p</span>
<span id="cb1-51">    odr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p)</span>
<span id="cb1-52">    axins.plot(rr, odr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i])</span>
<span id="cb1-53"></span>
<span id="cb1-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use ax.indicate_inset_zoom to draw a rectangle around the zoomed-in region</span></span>
<span id="cb1-55">ax.indicate_inset_zoom(axins, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb1-56"></span>
<span id="cb1-57">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>How the relative risk and odds ratio differ for various baseline risks. For each basline risk, we can compute the associated probabiltity given the relative risk. Given that probability, we can also compute the odds ratio.</figcaption>
<p><img src="https://dpananos.github.io/posts/2024-02-06-logit/index_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-02-06-logit/</guid>
  <pubDate>Tue, 06 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The Winner’s Curse Is Easy To Understand From This Picture</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-01-22-curse/</link>
  <description><![CDATA[ 





<p>Take a look at the photo below, and it i should be easy to understand why The Winner’s Curse (the general tendency for detected effects to be an over estimate of the truth) is a thing.</p>
<p>The plot shows our typical setup for a hypothesis test. In black is the sampling distribution of the test statistic for a difference in means under the null, and in blue is the statistic’s sampling distribution under the alternative. The shaded blue region represents the statistical power, and those effect sizes in the shaded region would be considered “statistically significant”.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_f57febe84b86407f210dc36b318d860c">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-2">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Difference in means'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb1-10">)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-22-curse/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The shaded blue region defines a lower truncated normal distribution. Were the alternative hypothesis true, and were we to run many experiments to estimate the difference in means, our detected effects would be samples from this distribution. Hence, using those samples to estimate the mean of the alternative distribution would result in a biased estimate of the mean.</p>
<p>The expectation for a lower truncated normal distribution truncated at <img src="https://latex.codecogs.com/png.latex?x=a"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmu+%5Csigma%20%20%5Cdfrac%7B%5Cvarphi%5Cleft(%20%5Cdfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%20%5Cright)%7D%7B1%20-%20%5CPhi%5Cleft(%5Cdfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%5Cright)%7D%20%20%20%5C%3E."></p>
<p>Here <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma"> are the mean and standard deviation of the distribution under the alternative, <img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> is the standard normal density, <img src="https://latex.codecogs.com/png.latex?%5CPhi"> is the standard normal cumulative distribution. So our estimate of the mean would be biased upwards by <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%20%5Cfrac%7B%5Cvarphi%5Cleft(%20%5Cfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%20%5Cright)%7D%7B1%20-%20%5CPhi%5Cleft(%5Cfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%5Cright)%7D">. That can be small or large depending on <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma">.</p>
<p>Without doing any differentiation to understand where this bias is largest, it should be intutituve from the picture that the bias is small/large when statistical power is large/small.</p>
<p>Hence, estimates from underpowered studies should be met with &lt;fry_squint.jpg&gt;.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-01-22-curse/</guid>
  <pubDate>Sat, 20 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Survival Analysis With Logistic Regression</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-01-20-logistic-survival/</link>
  <description><![CDATA[ 





<p><a href="https://stats.stackexchange.com/questions/636963/logistic-regression-varying-exposure-variable/637018#637018">This</a> question came up on cross validated. In the course of responding to my answer, OP asks “why can’t I adjust for exposure length in a logistic regression” which kind of got me scratching my head. Seems like it <em>could</em> be done.</p>
<p>I brought the question to twitter, and Dr.&nbsp;Ellie Murray <a href="https://twitter.com/EpiEllie/status/1747987418152612085">responded</a> reminding me that time to death and death are different outcomes and should be treated differently. A logistic regression could be done, depending on what you’re trying to model.</p>
<p>Finally, Frank Harrell <a href="https://twitter.com/f2harrell/status/1748327687066652908">responded</a> to Dr.&nbsp;Murray, with a link to a paper by Brad Efron (because of course Efron wrote something on this) which showed how this can be done quite elegantly.</p>
<p>Let’s see how we can use logistic regression for survival analysis.</p>
<section id="the-gist" class="level2">
<h2 class="anchored" data-anchor-id="the-gist">The Gist</h2>
<p>Recall that the Kaplan-Meir product limit estimator looks like</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cwidehat%7BS%7D_%7BKM%7D%20(t)%20=%20%5Cprod_%7Bi:%20t_i%20%5Cleq%20t%7D%20%5Cleft(1-%5Cdfrac%7Bd_i%7D%7Bn_i%7D%20%5Cright)%20%5C%3E.%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?d_i"> is the number of subjects who experience the outcome at time <img src="https://latex.codecogs.com/png.latex?t_i">, and <img src="https://latex.codecogs.com/png.latex?n_i"> is the number of individuals known to have survived up to time <img src="https://latex.codecogs.com/png.latex?t_i">. In essence, the product limit estimator is a product of a sequence of probabilities. What else do we use to model probabilities? Logistic regression.</p>
<p>Efron writes that the main assumption for using logistic regression to model these probabilities is that the number of events <img src="https://latex.codecogs.com/png.latex?d_i"> is binomial given <img src="https://latex.codecogs.com/png.latex?n_i"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20d_i%20%5Cmid%20n_i%20%5Csim%20%5Coperatorname%7BBinomial%7D(h_i;%20n_i)%20%5C%3E.%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?h_i"> is the discrete hazard rate (i.e.&nbsp;the probability the subject experiences the outcome during the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> interval given the subject has survived until the beginning of the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> interval).</p>
<p>The main problem is that the hazard may not be linear in the exposure time. Efron uses splines to allow <img src="https://latex.codecogs.com/png.latex?h_i"> to be flexible in exposure time, and then computes the estimated survival function using</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Ctilde%7BS%7D(t)%20=%20%20%5Cprod_%7Bi:%20t_i%20%5Cleq%20t%7D%20%5Cleft(1-h_i%5Cright)"></p>
<p>As an algorithm, the steps might look like:</p>
<ul>
<li>Structure your data so that you have number at risk, number of events, and number of censoring events as columns</li>
<li>Fit a logistic regression on the event/at risk columns (in R this is done by making <code>cbind(y, n-y)</code> the outcome in the <code>glm</code> call). Ensure the time variable is modeled flexibly (either with splines or something more exotic).</li>
<li>Predict the risk of death (i.e.&nbsp;the discrete hazard) from the logistic regression on the observed event times.</li>
<li>Take the cumulative product of one minus the discrete hazards. These are the survival function estimates.</li>
</ul>
</section>
<section id="replicating-efrons-example" class="level2">
<h2 class="anchored" data-anchor-id="replicating-efrons-example">Replicating Efron’s Example</h2>
<p>Efron motivates this approach using survival data from a Head-and-Neck cancer study conducted by the Northern California Oncology Group. I’ve extracted this data to replicate the method.</p>
<p>First, let’s show the Kaplan-Meir estimates</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(survival)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(splines)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"make_data.R"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7">sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'survival'</span>)</span>
<span id="cb1-8">sfit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survfit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(month, event) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strata</span>(arm), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>sd, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weights =</span> wt)</span>
<span id="cb1-9"></span>
<span id="cb1-10">sfit_tidy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(sfit) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(strata, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixed</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'strata(arm)='</span>)))</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14">base_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sfit_tidy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>strata, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span>strata)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Month'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Survival Probability'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Kaplan-Meier Estimated Survival Curves for Head-and-Neck Cancer Study'</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23">base_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_step</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The intial model presented expands time in the following basis functions</p>
<p><img src="https://latex.codecogs.com/png.latex?%20x_i%20=%20(1,%20t_i,%20(t_i-11)_-%5E%7B2%7D,%20(t_i-11)_-%5E%7B3%7D)%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?t_i"> is the the midpoint between months. This is equivalent to estimating the risk of the outcome between the start of month <img src="https://latex.codecogs.com/png.latex?i"> and the start of month <img src="https://latex.codecogs.com/png.latex?i+1">. The function <img src="https://latex.codecogs.com/png.latex?(%20z%20)_-%20=%20%5Cmin(z,%200)">. This particular expansion allows <img src="https://latex.codecogs.com/png.latex?t_i"> to vary as a cubic function before <img src="https://latex.codecogs.com/png.latex?t_i=11">, and then as a linear function thereafter.</p>
<p>After fitting the model with an interaction by arm (so that the hazards can differ by arm), we can plot the hazards readily <sup>1</sup>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logistic'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tm =</span> month <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, </span>
<span id="cb2-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">txt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(arm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>))</span>
<span id="cb2-4"></span>
<span id="cb2-5"></span>
<span id="cb2-6">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, d) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>((x), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(s, n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>s) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> arm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (tm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(tm<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(tm<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb2-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d, </span>
<span id="cb2-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>())</span>
<span id="cb2-11"></span>
<span id="cb2-12">preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se.fit=</span>T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit),</span>
<span id="cb2-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.low =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>se.fit),</span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.high =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>se.fit)</span>
<span id="cb2-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(arm) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(arm, month) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p),</span>
<span id="cb2-22">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S.low =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.low),</span>
<span id="cb2-23">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S.high =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.high))</span>
<span id="cb2-24"></span>
<span id="cb2-25"></span>
<span id="cb2-26">preds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tm, p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>arm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Month'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hazard'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hazard (Risk Estimate From Logistic Regression)'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>And we can also plot the estimated survival function against the Kaplan Meier to compare.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">base_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>preds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(month, S, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>arm), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Kaplan-Meier as Compared to Logistic Regression'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="final-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="final-thoughts">Final Thoughts</h2>
<p>Why would we want to parametrically model the hazard when Kaplan-Meir <em>can’t</em> misspecify the hazard? What do we gain from this? In a word: <em>efficiency</em> , at least according to Efron. Additionally, if we are willing to make assumptions about how the hazard evolves into the future (e.g.&nbsp;linearly) then we can use this approach to forecast survival beyond the last observed timepoint.</p>
<p>In his paper, Efron has some notes on computing standard errors for this estimator. Its fairly dense, and I haven’t included confidence intervals here lest I naively compute them. That’s a topic for a future blog post.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I Just can’t get the hazard’s to look the same as Figure 2. Might be an error copying over the data.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2024-01-20-logistic-survival/</guid>
  <pubDate>Sat, 20 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The Generalized Gamma Distribution For Parametric Survival</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-12-02-gen-gamma/</link>
  <description><![CDATA[ 





<p>A couple weeks back, I posted a little something something on <a href="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/">the Shifted Beta Geometric distribution</a>. That distribution is used in estimating churn in contractual settings (think Netflix, or any other service whereby you renew your service monthly). Its a nice model, but I want something more flexible.</p>
<p>I’ve been aware of the generalized gamma distribution through Jordan Nafa (who likely uses it for some very interesting decision theory applications). Briefly, if <img src="https://latex.codecogs.com/png.latex?T"> is the event time, then let <img src="https://latex.codecogs.com/png.latex?Y=%5Clog(T)">, and <img src="https://latex.codecogs.com/png.latex?Z%20=%20(Y-%5Cmu)/%5Csigma">. Then <img src="https://latex.codecogs.com/png.latex?Z"> has the following density</p>
<p><img src="https://latex.codecogs.com/png.latex?%20f(z%20;%20k)=%5Cfrac%7Bk%5E%7Bk-1%20/%202%7D%7D%7B%5CGamma(k)%7D%20%5Cexp%20%5Cleft(k%5E%7B1%20/%202%7D%20z-k%20e%5E%7Bk%5E%7B-1%20/%202%7D%20z%7D%5Cright)"></p>
<p>and <img src="https://latex.codecogs.com/png.latex?T%20=%20%5Cexp(Y)"> is distributed according to the generalized gamma distribution . Here, <img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%5Clt%20z%20%5Clt%20%5Cinfty">, <img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%5Clt%20%5Cmu%20%5Clt%20%5Cinfty">, and <img src="https://latex.codecogs.com/png.latex?%5Csigma,%20k%3E0">. For more on the generalized gamma, especially for use in survival analysis, see <em>Statistical Models and Methods for Lifetime Data</em> by Jerry Lawless (1982).</p>
<p>The nice thing about the generalized gamma is that the exponential, gamma, and weibull distributions – all common parmetric survival likelihoods – are special cases (and the log normal is a limiting distribution) <sup>1</sup>.<br>
That is especially nice for me. I’m working on some life time value modelling and it would be great if I didn’t have to try several models. Instead I can just use the generalized gamma and hope it fits well enough if the data are best approximated via one of the aforementioned survival functions.</p>
<p>In this post, I want to implement some survival analyses using the generalized gamma. Let’s get started.</p>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>We’ll need some data. Rather than simulate it myself, I’ll use the <code>veteran</code> data from <code>{survival}</code>. The survival function is roughly exponential, which is good because we know the generalized gamma can fit it in principle. There is a <code>trt</code> indicator in these data, so we’ll fit one survival curve to each strata. Shown below are the Kaplan-Meir non-parametric estimates for these data. Rather than plot the survival curve <img src="https://latex.codecogs.com/png.latex?S(t)">, I choose to plot <img src="https://latex.codecogs.com/png.latex?1-S(t)"> because my brain groks the plot easier as “the proportion of individuals in a cohort who would have experienced the outcome by time <img src="https://latex.codecogs.com/png.latex?t">”. The log of this quantity is the cumulative hazard, but I don’t know if <img src="https://latex.codecogs.com/png.latex?1-S(t)"> has a proper name. I mean … it is technically an estimate of the CDF of the event time distribution.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Non-parametric estimate of <img src="https://latex.codecogs.com/png.latex?1%20-%20S(t%7Ctrt)"> for each <code>trt</code> strata in the veteran dataset. The curves look roughly exponential meaning the generalized gamma should provide a good fit.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Stan does not have an implementation for the generalized gamma, so we’ll have to write that ourselves in the <code>functions</code> block.</p>
</section>
<section id="lpdf-_lcdf-and-_lccdf-implementations-in-stan" class="level2">
<h2 class="anchored" data-anchor-id="lpdf-_lcdf-and-_lccdf-implementations-in-stan"><code>_lpdf</code>, <code>_lcdf</code>, and <code>_lccdf</code> Implementations in Stan</h2>
<p>To do parametric survival analysis in Stan, we need three functions:</p>
<ul>
<li>The log probability density as <code>generalized_gamma_lpdf</code> so we can increment the log posterior density when we observe an outcome,</li>
<li>The log complementary CDF as <code>generalized_gamma_lccdf</code> so we can increment the log posterior density when we observe a censoring event, and</li>
<li>The log CDF as <code>generalized_gamma_lcdf</code> so we can implement the <code>_lccdf</code>.</li>
</ul>
<p>The first and third functions are implemented already by Krzysztof Sakrejda in <a href="https://github.com/sakrejda/tooling/blob/master/models/stan-lang/functions/generalized-gamma.stan.part">this repo</a>. The <code>_lpdf</code> and <code>_lcdf</code> are given, so now we just need the complementary cdf function <code>_lccdf</code>. Since Stan works on the log probability scale, we need to return the the log of the complementary cdf. Since we have the log cdf we could just do</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb1-1"></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb1-4"> </span>
<span id="cb1-5"> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - exp(generalized_gamma_lcdf(x | k, mu sigma)));</span>
<span id="cb1-6"> </span>
<span id="cb1-7">}</span></code></pre></div>
</div>
</div>
<p>Stan has a nicer function to do this called <code>log_diff_exp</code> which can be used to take differences in exponential space and then take the log of the result.</p>
<p>Additionally, we can create a random number generator for the generalized gamma distribution by noting that <code>flexsurv</code>’s implementation of the generalized gamma is equivalent to ours if we let <img src="https://latex.codecogs.com/png.latex?Q=1/%5Csqrt%7Bk%7D">. Our <code>functions</code> block then looks like</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span> {</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-6">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-7">    d = (k - .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) * log(k) - log(sigma) - lgamma(k) + (sqrt(k) * w - k * exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> / sqrt(k) * w)) - log(x);</span>
<span id="cb2-8">    </span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-10">  }</span>
<span id="cb2-11">  </span>
<span id="cb2-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_cdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-15">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-16">    d = gamma_p(k, k * exp(w / sqrt(k)));</span>
<span id="cb2-17">    </span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-19">  }</span>
<span id="cb2-20">  </span>
<span id="cb2-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lcdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-24">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-25">    d = log(gamma_p(k, k * exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> / sqrt(k) * w)));</span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-27">  }</span>
<span id="cb2-28">  </span>
<span id="cb2-29">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> log_diff_exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, generalized_gamma_lcdf(x | k, mu, sigma));</span>
<span id="cb2-31">  }</span>
<span id="cb2-32">  </span>
<span id="cb2-33">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_rng(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> Q = <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> / sqrt(k);</span>
<span id="cb2-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> gamma = gamma_rng(Q^-<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb2-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w = log(Q^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * gamma) / Q;</span>
<span id="cb2-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> exp(mu + sigma * w);</span>
<span id="cb2-38">  }</span>
<span id="cb2-39">  </span></code></pre></div>
</div>
</div>
</section>
<section id="fitting-the-model" class="level2">
<h2 class="anchored" data-anchor-id="fitting-the-model">Fitting The Model</h2>
<p>The model fits fairly quickly (4 chains in parallel takes &lt;2 seconds on my M1 Pro macbook pro). We can easily plot the survival curve against the Kaplan-Meir estimate to compare, however a better comparison would be to draw samples from the event time distribution and compute the ecdf of those samples. That plot is shown below, and is equivalent to a posterior predictive check in the case where there is no censoring. You can see that the KM estimates look similar to the ecdfs, which is good enough for me.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 chains, at most 10 in parallel...

Chain 1 finished in 1.9 seconds.
Chain 2 finished in 1.9 seconds.
Chain 3 finished in 1.9 seconds.
Chain 4 finished in 1.9 seconds.

All 4 chains finished successfully.
Mean chain execution time: 1.9 seconds.
Total execution time: 2.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Kaplan-Meir estimates (black) with posterior survival functions.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Kaplan-Meir estimates (black) with estimated ECDFs computed from draws of the posterior distribution. Each colored line corresponds to one sample of event times from the posterior distribution, conditional on <img src="https://latex.codecogs.com/png.latex?%5Cmu">, <img src="https://latex.codecogs.com/png.latex?%5Csigma">, and <img src="https://latex.codecogs.com/png.latex?k">.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Left as an exercise to the reader.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2023-12-02-gen-gamma/</guid>
  <pubDate>Sat, 02 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Brain Teaser About Frequentist Statistics</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-12-01-ron/</link>
  <description><![CDATA[ 





<p>Ron Kohavi is somewhat of a prominent figure in the A/B testing community. Armed with having coauthored “Trustworthy Online Controlled Experiments”, experience at places like AirBNB and Microsoft, and what seems to be a $20/month subscription to ChatGPT, he will often post these kinds of questions on LinkedIn.</p>
<p>The post below really caught my attention (probably because of the AI generated accompanying picture, a fad everyone seems to be doing for some reason).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/linkedin.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>This should be fairly simple to reason through. Below is a plot depicting the concept of statistical power. The black curve is the sampling distribution under the null, the blue curve is the sampling distribution under the alternative implied by the minimal detectable effect (MDE). The area under the blue curve is the statsitical power (its the probability we observe a test statistic greater than the critical value).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-4">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span>F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb1-12">)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topleft'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[A])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>According to Ron, we run our experiment and observe the our (MDE) exactly. In our picture, that means we observe the mean of the sampling distribution under the alternative, so we just need to find how far out the MDE is with respect to the null distribution.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb2-4">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span>F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb2-12">)</span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topleft'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[A])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Let’s do a little bit of math. Assuming the sampling distribution under the null is standard normal, the critical value would be <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D">. The critical value under the alternative would then be <img src="https://latex.codecogs.com/png.latex?%5Cmu_1%20+%20z_%7B1-%5Cbeta%7D%5Csigma_1">. Plugging in some numbers, this means the mean under the alternative should have a z-zcore of <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D%20-%20%5Csigma_1z_%7B1-%5Cbeta%7D">. Now, we just need to evaluate <img src="https://latex.codecogs.com/png.latex?1%20-%20%5Cmathbf%7B%5CPhi%7D(%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D%20-%20%5Csigma_1z_%7B1-%5Cbeta%7D)">.</p>
<p>Assume that these distributions are standardized so that <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20=%200"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma_0%20=%20%5Csigma_1=1">. This results in a p-value of</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower.tail =</span> F)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.00255513</code></pre>
</div>
</div>
<p>and I bet because I’ve only focused on one tail I should multiply by 2, so a p value of ~ 0.005, <a href="https://www.linkedin.com/posts/ronnyk_test-your-intuition-on-p-values-you-design-activity-7136272639823663104-H7u8">which seems to be correct</a>.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-12-01-ron/</guid>
  <pubDate>Fri, 01 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Estimating the Shifted Beta Geometric Model in Stan</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/</link>
  <description><![CDATA[ 





<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</details>
</div>
<p>The shifted beta geometric model (sBG) is a model that is used to forecast retention/survival of users in contractual settings (think netflix, disney plus, tinder gold, etc). The model is quite simple and posits:</p>
<ul>
<li>At the end of each period, a customer flips a coin: “heads” she cancels he contract, “tails” she renews it.</li>
<li>For each individual, the probability of a coin coming up “heads” does not change over time</li>
<li>The probabiliuty of heads varies across customers. Fader and Hardie motivate the model in their paper <em>How to Project Customer Retention</em> and even provide a way to fit the model in excel. Neat!</li>
</ul>
<p>Excel isn’t a great tool for fitting models, so Let’s write this in Stan.</p>
<section id="sbg-in-stan" class="level2">
<h2 class="anchored" data-anchor-id="sbg-in-stan">sBG in Stan</h2>
<p>The two things we need are the probability density function and the survival function. Fader and Hardie provide these in their paper. Mathematically, the probability density and survival function are</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(T=t%20%5Cmid%20%5Calpha,%20%5Cbeta)%20=%20%5Cdfrac%7BB(%5Calpha+1,%20%5Cbeta+t-1)%7D%7BB(%5Calpha,%20%5Cbeta)%7D%20%5C%3E,"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20S(T=t%20%5Cmid%20%5Calpha,%20%5Cbeta)%20=%20%5Cdfrac%7BB(%5Calpha,%20%5Cbeta+t)%7D%7BB(%5Calpha,%20%5Cbeta)%7D%20%5C%3E.%20"> Here, <img src="https://latex.codecogs.com/png.latex?B(%5Calpha,%20%5Cbeta)"> is the beta function <em>and not the beta distribution</em> (I made that mistake early). Stan operates on the log scale, and so we’ll have to take the log of these. Stan has a log beta function called <code>lbeta</code> so we’ll use that in our functions for the density and survival function.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span>{</span>
<span id="cb2-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb2-3">    </span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, beta+time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>) - lbeta(alpha, beta);</span>
<span id="cb2-5">  }</span>
<span id="cb2-6">  </span>
<span id="cb2-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb2-8">    </span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha, beta + time) - lbeta(alpha, beta);</span>
<span id="cb2-10">  }</span>
<span id="cb2-11">  </span>
<span id="cb2-12">}</span></code></pre></div>
</div>
</div>
<p>The data we need to fit the model include:</p>
<ul>
<li>How many customers were lost at each time period,</li>
<li>The times at which customers were lost, and</li>
<li>The total number of customers under observation</li>
</ul>
<p>We’ll also include an array of times at which to estimate the survival curve</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">data</span>{</span>
<span id="cb3-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fitting the model</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> N;</span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_total;</span>
<span id="cb3-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lost;</span>
<span id="cb3-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time;</span>
<span id="cb3-7">  </span>
<span id="cb3-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Making Predictions</span></span>
<span id="cb3-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> N_pred;</span>
<span id="cb3-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_pred] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> pred_times;</span>
<span id="cb3-11">}</span></code></pre></div>
</div>
</div>
<p>Later, we’ll need the last time point we observed customers who haven’t churned. This is the truncation time</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed data</span>{</span>
<span id="cb4-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> truncation_time = max(time);</span>
<span id="cb4-3">}</span></code></pre></div>
</div>
</div>
<p>All that is left to do is specify parameters, write the model block, and generate predictions for our survival curve. The likelihood computations are shown in the paper I referenced, so I’ll let you read that if you’re interested</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">parameters</span>{</span>
<span id="cb5-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; alpha;</span>
<span id="cb5-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; beta;</span>
<span id="cb5-4">}</span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">model</span>{</span>
<span id="cb5-6">  alpha ~ cauchy(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-7">  beta ~ cauchy(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-8">  </span>
<span id="cb5-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N){</span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha, beta);</span>
<span id="cb5-11">  }</span>
<span id="cb5-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> (n_total - sum(lost)) * sbg_lccdf(truncation_time| alpha, beta);</span>
<span id="cb5-13">}</span>
<span id="cb5-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb5-15">  </span>
<span id="cb5-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_pred] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> expected_surviving;</span>
<span id="cb5-17">  </span>
<span id="cb5-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N_pred){</span>
<span id="cb5-19">    expected_surviving[i] = exp(sbg_lccdf(pred_times[i]| alpha, beta));</span>
<span id="cb5-20">  }</span>
<span id="cb5-21">  </span>
<span id="cb5-22">}</span></code></pre></div>
</div>
</div>
</section>
<section id="fitting-the-model" class="level1">
<h1>Fitting the Model</h1>
<p>Fader and Hardie provide an example in their appendix for fitting the model. We’ll use that data to check our fit. Let’s take a look at that data now</p>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb6-4"></span>
<span id="cb6-5">stan_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">active =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">863</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">743</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">653</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">593</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">551</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">517</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">491</span>),</span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">126</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>),</span>
<span id="cb6-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb6-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb6-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb6-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_pred =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb6-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_times =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb6-13">)</span>
<span id="cb6-14"></span>
<span id="cb6-15"></span>
<span id="cb6-16">surv_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">active=</span>stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>active) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-17">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, active)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-18">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-19">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-20">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-21">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Customers Surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-22">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-23">              see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-24">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb6-25">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>())</span>
<span id="cb6-26"></span>
<span id="cb6-27">surv_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>Now, let’s compare with the fit</p>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sbg.stan'</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(stan_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.0 seconds.
Chain 2 finished in 0.0 seconds.
Chain 3 finished in 0.0 seconds.
Chain 4 finished in 0.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.0 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">pred_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_times=</span>stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred_times, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(pred_times))</span>
<span id="cb9-2">fit_predict <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(expected_surviving[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expected_surviving =</span> expected_surviving <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(pred_times)</span>
<span id="cb9-7"></span>
<span id="cb9-8"></span>
<span id="cb9-9"></span>
<span id="cb9-10">surv_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>fit_predict, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pred_times, expected_surviving), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>fit_predict, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pred_times, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> .lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span>.upper), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>Nice, not a bad fit.</p>
<p>Model extensions seem fairly straight forward. You could maybe model alpha and beta much in the same way you do for a beta regression.</p>
</section>
<section id="regression" class="level1">
<h1>Regression</h1>
<p>In that same paper are two examples of survival curves; one for “high end” customers and another for “regular” customers. It should be fairly straight forward to write this as a regression model. If you’ve written a beta regression before, you can do this fairly readily.</p>
<p>Now, be warned: My approach is pretty hacky, but its just meant to illustrate a point. Here is the regression model in full</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span>{</span>
<span id="cb10-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb10-3">    </span>
<span id="cb10-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, beta+time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>) - lbeta(alpha, beta);</span>
<span id="cb10-5">  }</span>
<span id="cb10-6">  </span>
<span id="cb10-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb10-8">    </span>
<span id="cb10-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha, beta + time) - lbeta(alpha, beta);</span>
<span id="cb10-10">  }</span>
<span id="cb10-11">  </span>
<span id="cb10-12">}</span>
<span id="cb10-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">data</span>{</span>
<span id="cb10-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Observations</span></span>
<span id="cb10-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb10-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Predictors (2 in this case)</span></span>
<span id="cb10-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p;</span>
<span id="cb10-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time;</span>
<span id="cb10-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Design matrix</span></span>
<span id="cb10-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[n, p] X;</span>
<span id="cb10-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lost;</span>
<span id="cb10-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// These are the hacky bits.  I just don't want to work hard to </span></span>
<span id="cb10-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute these in stan, so I do them in R.</span></span>
<span id="cb10-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sum_lost;</span>
<span id="cb10-25">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_total;</span>
<span id="cb10-26">}</span>
<span id="cb10-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed data</span>{</span>
<span id="cb10-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> truncation_time = max(time);</span>
<span id="cb10-29">}</span>
<span id="cb10-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">parameters</span>{</span>
<span id="cb10-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[p] zeta;</span>
<span id="cb10-32">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[p] gamma;</span>
<span id="cb10-33">}</span>
<span id="cb10-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed parameters</span>{</span>
<span id="cb10-35">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt;[n] mu = inv_logit(X * zeta);</span>
<span id="cb10-36">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt;[n] kappa = exp(X * gamma);</span>
<span id="cb10-37">  </span>
<span id="cb10-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Kind of like beta regression.</span></span>
<span id="cb10-39">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] alpha = mu./kappa;</span>
<span id="cb10-40">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] beta = (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>-mu)./kappa;</span>
<span id="cb10-41">}</span>
<span id="cb10-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">model</span>{</span>
<span id="cb10-43">  zeta ~ student_t(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb10-44">  gamma ~ student_t(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb10-45">  </span>
<span id="cb10-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb10-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (time[i] == truncation_time){</span>
<span id="cb10-48">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha[i], beta[i]);</span>
<span id="cb10-49">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> (n_total[i] - sum_lost[i]) * sbg_lccdf(truncation_time| alpha[i], beta[i]);</span>
<span id="cb10-50">    }</span>
<span id="cb10-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>{</span>
<span id="cb10-52">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha[i], beta[i]);</span>
<span id="cb10-53">    }</span>
<span id="cb10-54">  }</span>
<span id="cb10-55">}</span>
<span id="cb10-56"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb10-57">   <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> expected_surviving;</span>
<span id="cb10-58">  </span>
<span id="cb10-59">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb10-60">    expected_surviving[i] = exp(sbg_lccdf(time[i]| alpha[i], beta[i]));</span>
<span id="cb10-61">  }</span>
<span id="cb10-62">}</span></code></pre></div>
</div>
</div>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sorry for the spaghetti</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">regular_surv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">631</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">382</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">326</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">289</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">262</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">241</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">223</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">207</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">194</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>)</span>
<span id="cb11-4">highend_surv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">869</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">743</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">653</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">593</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">551</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">517</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">491</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">445</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">427</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">409</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">394</span>)</span>
<span id="cb11-5"></span>
<span id="cb11-6">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb11-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Regular =</span> regular_surv,</span>
<span id="cb11-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">High End</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> highend_surv,</span>
<span id="cb11-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(regular_surv)</span>
<span id="cb11-10">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(Regular<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">High End</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, </span>
<span id="cb11-12">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'customer'</span>, </span>
<span id="cb11-13">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(customer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(customer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high_end =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(customer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'High End'</span>),</span>
<span id="cb11-17">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>surviving, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(surviving, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> surviving),</span>
<span id="cb11-18">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb11-19">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sum_lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(lost)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-20">  ungroup <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(time))</span>
<span id="cb11-22">  </span>
<span id="cb11-23">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>high_end, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb11-24"></span>
<span id="cb11-25">stan_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(X),</span>
<span id="cb11-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(X),</span>
<span id="cb11-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X=</span>X,</span>
<span id="cb11-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n_total,</span>
<span id="cb11-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lost,</span>
<span id="cb11-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb11-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sum_lost =</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sum_lost</span>
<span id="cb11-33">)</span>
<span id="cb11-34"></span>
<span id="cb11-35">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sbg_regression.stan'</span>)</span>
<span id="cb11-36"></span>
<span id="cb11-37">chains <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>()</span>
<span id="cb11-38">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(stan_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> chains, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 chains, at most 10 in parallel...

Chain 1 finished in 0.2 seconds.
Chain 2 finished in 0.2 seconds.
Chain 3 finished in 0.2 seconds.
Chain 4 finished in 0.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 0.3 seconds.</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(expected_surviving[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  mean_qi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>customer)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>expected_surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>customer)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>expected_surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>customer), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-9">  see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Customers Surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-13">  see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb13-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>Fader, Peter S., and Bruce GS Hardie. “How to project customer retention.” Journal of Interactive Marketing 21.1 (2007): 76-90.</p>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/</guid>
  <pubDate>Mon, 20 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Regularization of Noisy Multinomial Counts</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-24-l1/</link>
  <description><![CDATA[ 





<p>I’m reading <a href="https://hastie.su.domains/StatLearnSparsity/"><em>Statistical Learning with Sparsity</em></a>. Its like Elements of Statistical Learning, but just for the LASSO. In chapter 3, there is this interesting example of using the LASSO to estimate rates for noisy multinomial processes. Here is the setup from the book</p>
<blockquote class="blockquote">
<p>Suppose we have a sample of <img src="https://latex.codecogs.com/png.latex?N"> counts <img src="https://latex.codecogs.com/png.latex?%5C%7B%20y_k%20%5C%7D_%7Bk-=1%7D%5EN"> from an <img src="https://latex.codecogs.com/png.latex?N">-cell multinomial distribution, and let <img src="https://latex.codecogs.com/png.latex?r_k%20=%20y_k%20/%20%5Csum_%7B%5Cell=1%7D%5EN%20y_%7B%5Cell%7D"> be the corresponding vector of proportions. For example, in large-scale web applications, these counts might represent the number of people in each country in teh YSA that visited a particular website during a given week. This vector could be sparse depending on the specifics, so there is desire to regularize toward a broader, more stable distribution <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D%20=%20%5C%7B%20u_k%20%5C%7D_%7Bk=1%7D%5EN"> (for example, the same demographic, except measured over years)</p>
</blockquote>
<p>In short, you’ve got some vector of probabilities from a multinomial process, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D">. These probabilities are noisy, and instead of regularizing them to be uniform, you want to regularize them towards some other, more stable, distribution <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D">. The result is other distribution, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bq%7D">, and you constrain yourself so that the max approximation error between <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bq%7D"> is less than some tolerance, <img src="https://latex.codecogs.com/png.latex?%5CVert%20%5Cmathbf%7Br%7D%20-%20%5Cmathbf%7Bq%7D%20%5CVert%20_%5Cinfty%20%3C%20%5Cdelta">. The authors then go on to show that minimizing the KL-divergence for discrete distributions, subject to this constraint, is equivalent to the LASSO with a poisson likelihood. Only added trick is that you use <img src="https://latex.codecogs.com/png.latex?%5Clog(%5Cmathbf%7Bu%7D)"> as an offset in the model call. For more detail, see chapter 3 of the book.</p>
<p>The authors kind of give a half hearted attempt at an application of such a procedure, so I tried to come up with one myself. In a <a href="https://dpananos.github.io/posts/2022-08-16-pca/">previous blog post</a>, we used looked at what kind of experts exist on statsexchange. We can use the data explorer I used for that post to look at two frequencies:</p>
<ul>
<li>Frequencies of total posts over a typical week in the year 2022, and</li>
<li>Frequencies of posts tagged “regularization” posts over a typical week in the year 2022.</li>
</ul>
<p>There are considerably more non-regularization posts than there are regularization posts, so while we should expect the frequencies to be similar there is probably some noise. Let’s use the query (below) to get our data and make a plot of those frequencies.</p>
<details>
<summary>
Click to see SQL Query
</summary>
<p>
</p><pre><code>select
cast(A.CreationDate as date) as creation_date,
count(distinct A.id) as num_posts,
count(distinct case when lower(TargetTagName) = 'regularization' then A.id end) as reg_posts
from Posts A
left join PostTags as B on A.Id = B.PostId
left join TagSynonyms as C on B.TagId = C.Id
where A.PostTypeId = 1 and A.CreationDate between '2022-01-01' and '2022-12-31'
group by cast(A.CreationDate as date)
order by cast(A.CreationDate as date)
</code></pre>
<p></p>
</details>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glmnet)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%+replace%</span></span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb2-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span></span>
<span id="cb2-11">    )</span>
<span id="cb2-12">  )</span>
<span id="cb2-13"></span>
<span id="cb2-14"></span>
<span id="cb2-15">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'QueryResults.csv'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-16">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(</span>
<span id="cb2-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'post'</span>)),</span>
<span id="cb2-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.funs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> \(x) x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(x))</span>
<span id="cb2-19">     )</span>
<span id="cb2-20"></span>
<span id="cb2-21">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>oday <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ordered=</span>T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sunday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Monday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tuesday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Wednesday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Thursday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Friday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saturday'</span>))</span>
<span id="cb2-22"></span>
<span id="cb2-23">d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(oday) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(oday, num_posts, reg_posts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>(</span>
<span id="cb2-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day of Week'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total Post Count'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Post Count'</span>)</span>
<span id="cb2-28">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bootstrap_options =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'striped'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-striped table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Day of Week</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Total Post Count</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Regularization Post Count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Sunday</td>
<td style="text-align: right;">1699</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="even">
<td style="text-align: left;">Monday</td>
<td style="text-align: right;">2494</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tuesday</td>
<td style="text-align: right;">2759</td>
<td style="text-align: right;">24</td>
</tr>
<tr class="even">
<td style="text-align: left;">Wednesday</td>
<td style="text-align: right;">2805</td>
<td style="text-align: right;">26</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Thursday</td>
<td style="text-align: right;">2689</td>
<td style="text-align: right;">32</td>
</tr>
<tr class="even">
<td style="text-align: left;">Friday</td>
<td style="text-align: right;">2500</td>
<td style="text-align: right;">27</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Saturday</td>
<td style="text-align: right;">1703</td>
<td style="text-align: right;">10</td>
</tr>
</tbody>
</table>


</div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">base_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-4">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) </span>
<span id="cb3-7">            </span>
<span id="cb3-8">base_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Obviously, the smaller number of posts about regularization leads to larger noise in the multinomial estimates. You can very easily see that in the plot; Monday is not special, its very likely noise.</p>
<p>So here is where we can use LASSO to reign in some of that noise. We just need to specify how discordant we want our predicted frequencies to be from the observed frequencies, and fit a LASSO model with a penalty which achieves this desired tolerance.</p>
<p>So let’s say my predictions from the LASSO are the vector <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bp%7D"> and the observed frequencies for regularization posts are <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D">. Let’s say I want the largest error between the two to be no larger than 0.05. Shown below is some code for how to do that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up the regression problem</span></span>
<span id="cb4-2">u <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>num_posts_p</span>
<span id="cb4-3">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reg_posts_p</span>
<span id="cb4-4">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Day<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb4-5">max_error <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grid of penalties to search over</span></span>
<span id="cb4-8">lambda.grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span>)</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit the model and compute the difference between the largest error and our tolerance</span></span>
<span id="cb4-11">fit_lasso <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x){</span>
<span id="cb4-12">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>x)</span>
<span id="cb4-13">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)</span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_error)</span>
<span id="cb4-15">}</span>
<span id="cb4-16"></span>
<span id="cb4-17">errors<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(lambda.grid, fit_lasso)</span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the lambda which produces error closest to 0.03</span></span>
<span id="cb4-19">lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lambda.grid[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.min</span>(errors)]</span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions under this model</span></span>
<span id="cb4-21">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>lambda)</span>
<span id="cb4-22">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s0'</span>]</span>
<span id="cb4-23"></span>
<span id="cb4-24">new_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-25">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-27">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-28">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-29">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb4-31"></span>
<span id="cb4-32">new_plot</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This might be easier to see if we follow Tufte and show small multiples. You can see as the penalty increases, the green dots (predicted) go from the blue dots (observed frequencies of regularization related posts) to the pink dots (the frequencies of all plots).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">lam <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3">all_d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(lam, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>{</span>
<span id="cb5-4">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>.x)</span>
<span id="cb5-5">  d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s0'</span>]</span>
<span id="cb5-6">  d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> .x</span>
<span id="cb5-7">  </span>
<span id="cb5-8">  d</span>
<span id="cb5-9">})</span>
<span id="cb5-10"></span>
<span id="cb5-11">all_d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-17">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>lambda, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> label_both) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(</span>
<span id="cb5-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mon'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Wed'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Thu'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fri'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sat'</span>)</span>
<span id="cb5-21">      )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Cool! Using <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D"> (here, the frequency of total posts on each day) as an offset acts as a sort of target towards which to regularize.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-09-24-l1/</guid>
  <pubDate>Sun, 24 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Right In Ways You Don’t Care About</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-11-right/</link>
  <description><![CDATA[ 





<p>I’ve typically <a href="https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/">been long on the value of data scientists</a> but I think I’m starting to lose my optimism.</p>
<p>I was fucking around in git late one night and ran into merge conflicts. The first step when you get a merge conflict is to ask yourself “jesus christ, how did I keep this job?” which reminded me on <a href="https://twitter.com/vboykis/status/1681050831850811401">this tweet</a> from Vicky Boykis. Long story short, its a screen grab from a HN comment section in which some user laments how engineering gets instant errors while things like data science see errors pass silently.</p>
<p>Tune hyperparameters on the test set? Everyone else does it.</p>
<p>Run experiments “until significance”? Have a promotion.</p>
<p>Run a pre-post? If numbers are good, yay us! It numbers are bad, did you try data dreding until they look good?</p>
<p>Data Scientists are mentioned by name in David Graeber’s <em>Bullshit Jobs</em> and it is only now that I’ve begun to work (again) that I understand why. The irony is that because errors pass silently in data work, it is often difficult to assign blame or even to determine that someone should be blamed at all. You could be terrible at your job and keep it so long as you’re terrible in the right way. It makes me wonder why I put so much effort into being right in ways people don’t seem to care about. I should get an MBA or something.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-09-11-right/</guid>
  <pubDate>Mon, 11 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Difference in Difference Estimates Can Be Inaccurate When Adjusting For Detected Pre-Treatment Differences in Randomized Experiments</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-03-did-in-ab/</link>
  <description><![CDATA[ 





<p>Edits:</p>
<ul>
<li><p><span class="citation" data-cites="devonbancroft1">@devonbancroft1</span> mentions that in AB testing, users are highly correlated between periods. It would be useful to examine how that correlation changes outcomes. I’ve edited the simulation to allow for drawing correlated pre and post data.</p></li>
<li><p><span class="citation" data-cites="fiftycente1">@fiftycente1</span> mentions that bias is about expectation. That’s true, I’ve edited my post to explicitly distinguish between bias and accuracy.</p></li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>I’ve run into people randomizing units to treatment and control and then looking to see if there are pre-treatment differences with a hypothesis test. If there are, I’ve heard – at Zapier and <a href="https://stats.stackexchange.com/questions/625007/ab-testing-control-was-performing-0-5-better-than-experiment-set-before-the-in/625523#625523">cross validated</a> – that a difference in difference (DiD) should be performed. After all, there are baseline differences! We need to adjust for those.</p>
<p>To be clear – using DiD to analyze randomized experiments is fine. The resulting estimate of the ATE should be unbiased assuming the experiment was run without a hitch. You don’t need to do difference in difference because prior to treatment the two groups will have the same distribution of potential outcomes. Their pre-treatment differences are 0 <em>in expectation</em>. Any detection of a difference – again, assuming the experiment was run well – is sampling variability.</p>
<p>Running DiD because we found baseline differences is a form of deciding on analysis based on the observed data, and we all know that is a statistical faux pas. But how bad could it be? Are our estimates of the treatment effect biased? Are they precise? What do we lose when we let the data decide if we should run a DiD or a t-test?</p>
</section>
<section id="simulation" class="level2">
<h2 class="anchored" data-anchor-id="simulation">Simulation</h2>
<p>To find out, let’s simulate a very simple example. Let’s assume that I run an experiment and measure units before and after. The observations on each unit are iid and have standard normal distribution in the absence of the treatment. If <img src="https://latex.codecogs.com/png.latex?A"> is a binary indicator for treatment (1 for treatment, 0 else) then the data are</p>
<p><img src="https://latex.codecogs.com/png.latex?%20y_%7Bpre%7D%20%5Csim%20%5Cmbox%7BNormal%7D%5Cleft(0,%20%5Csigma%5E2%5Cright)%20%5C%3E,%20"> <img src="https://latex.codecogs.com/png.latex?%20y_%7Bpost%7D%20%5Csim%20%5Cmbox%7BNormal%7D%5Cleft(%5Ctau%20%5Ccdot%20A,%20%5Csigma%5E2%20%5Cright)%20%5C%3E.%20"></p>
<p>We will allow for the pre and post observations to be correlated with correlation <img src="https://latex.codecogs.com/png.latex?%5Crho">.</p>
<p>I’ll run 5, 000 simulations of a simple randomized experiment. Each time, I’ll sample <img src="https://latex.codecogs.com/png.latex?N"> units in each arm, enough to detect a treatment effect from a t-test with 80% power. I’ll then run a t-test via OLS and a DiD. I’ll record the pre-treatment difference in each group and if it was statistically significant at the 5% level. I’m also going to carry around the estimates from an ANCOVA since this seems to be the recommended approach for when we have pre-treatment information that is correlated with the outcome. For these simulations, I’ll set <img src="https://latex.codecogs.com/png.latex?%5Ctau=1"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma=1"> which means I need <img src="https://latex.codecogs.com/png.latex?N=17"> users per arm to achieve 80% power.</p>
<p>We’ll plot some treatment effect estimates and see what is happening when we choose to do DiD when the data suggest we do. Now importantly, I’m making very strong assumptions about the experiment being run. In particular, I’m making assumptions that all went well, there is no funny business with timing or randomization, etc. In terms of a medical trial, I got 34 people to all stand in a line, randomly gave each placebo or drug, watched them all take it at the same time, and recorded outcomes. The purpose of these simulation and blog post is to investigate statistical properties and not to wring about whatabouts.</p>
<p>In the code cell below is the code to run these simulations</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">simulate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ...){</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  </span>
<span id="cb1-4">  Sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(sigma, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rho, rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(sigma, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-5">  </span>
<span id="cb1-6">  A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N_per_arm)</span>
<span id="cb1-7">  Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tau<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N_per_arm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> Sigma)</span>
<span id="cb1-8">  </span>
<span id="cb1-9">  y_pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Y[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-10">  y_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Y[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb1-11">  </span>
<span id="cb1-12">  pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(A), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>y_pre, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt=</span>A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-13">  post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(A), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>y_post, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt=</span>A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(pre, post)</span>
<span id="cb1-16">      </span>
<span id="cb1-17">}</span>
<span id="cb1-18"></span>
<span id="cb1-19">do_analysis <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...){</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_data</span>(...)</span>
<span id="cb1-22">  </span>
<span id="cb1-23">  dwide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-24">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'post'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pre'</span>))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-25">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id_cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(i, trt), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> period, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> y)</span>
<span id="cb1-26">  </span>
<span id="cb1-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DiD </span></span>
<span id="cb1-28">  did <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> trt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>period, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb1-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># t-test, only on post data</span></span>
<span id="cb1-30">  tt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb1-31">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Ancova</span></span>
<span id="cb1-32">  ancova <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(post <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pre <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>dwide)</span>
<span id="cb1-33">  </span>
<span id="cb1-34">  tt_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(tt)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt'</span>]</span>
<span id="cb1-35">  did_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(did)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt:period'</span>]</span>
<span id="cb1-36">  ancova_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(ancova)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt'</span>]</span>
<span id="cb1-37">  </span>
<span id="cb1-38">  pre_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-39">  </span>
<span id="cb1-40">  pre_period_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(pre_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate)</span>
<span id="cb1-41">  detected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(pre_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre-Period Difference'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No Pre-Period Difference'</span>)</span>
<span id="cb1-42">  </span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-44">    tt_ate, </span>
<span id="cb1-45">    did_ate, </span>
<span id="cb1-46">    ancova_ate,</span>
<span id="cb1-47">    pre_period_diff, </span>
<span id="cb1-48">    detected</span>
<span id="cb1-49">  )</span>
<span id="cb1-50">}</span>
<span id="cb1-51"></span>
<span id="cb1-52"></span>
<span id="cb1-53">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="case-1-uncorrelated-pre-and-post-observations" class="level2">
<h2 class="anchored" data-anchor-id="case-1-uncorrelated-pre-and-post-observations">Case 1: Uncorrelated Pre and Post Observations</h2>
<p>Shown below are the ATEs from each analysis when the pre and post are uncorrelated. Nothing too surprising here, the ATEs are unbiased (the histograms are centered at <img src="https://latex.codecogs.com/png.latex?%5Ctau=1">). It seems that the t-test has lower sampling variance/higher precision, which means lower MSE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tt_ate, did_ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-3">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb2-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test ATE'</span>,</span>
<span id="cb2-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD ATE'</span></span>
<span id="cb2-7">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'histogram'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Let’s now plot the ATEs for each method against the pre-period differences. Because all observations are assumed independent, I’m going to expect that the ATEs for the t-test are uncorrelated with the pre-period difference. However, because the DiD uses pre-period information, I’m going to expect a correlation (I just don’t know how big).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb3-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb3-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb3-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb3-8">    )</span>
<span id="cb3-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb3-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"></span>
<span id="cb3-18">plot </span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Great, this makes sense. The ATE is for the t-test is uncorrelated with the pre-period difference, as expected. The ATE DiD is correlated with the pre-period difference, and that’s likely due to regression to the mean. Now, let’s stratify by cases when the pre-period difference is (erroneously) thought to be non-zero.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It isn’t unsurprising that the tails of each of these blobs is cut off. After all, the pre-period difference needs to be extreme enough to reject the null. Let’s first talk about that bottom right cell – the t test when there is a detected pre-period difference. Because there is no correlation between pre-period difference and the ATE, the ATEs are still unbiased. That’s great. What about DiD (bottom middle cell)?</p>
<p>Note that the correlation means that those blobs don’t have the same mean. In fact, if you run K-means on those blobs, you can very easily separate them and estimate the ATE and its very far from 1! Technically, this is unbiased because we have to average over each blob. So it isn’t that the estimates are biased from DiD, but they are <em>inaccurate</em>. Take a look at the MSE for each estimate (shown below). Using DiD when you detect a pre-treatment difference may be unbiased, but it has very high MSE as compared to the two other methods.</p>
<p>While those estimates are unbiased, the low precision/high MSE is a good argument against checking for pre-treatment differences and then deciding on analysis style. This would be like saying “the river is a foot deep” when in reality the river is an inch deep in most places, and a mile deep in others. While the estimates are unbiased, any one particular estimate is fairly far from the true ATE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb5-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb5-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb5-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb5-8">    )</span>
<span id="cb5-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(analysis, detected) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MSE =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((ate<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(analysis, MSE, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>detected)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge2</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="case-2-moderate-correlation-between-pre-and-post" class="level2">
<h2 class="anchored" data-anchor-id="case-2-moderate-correlation-between-pre-and-post">Case 2: Moderate Correlation Between Pre and Post</h2>
<p>Let’s now let pre and post correlation be non-zero, but still moderate in size. We’ll let <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.45"> which is still much smaller than most correlation coefficients I’ve seen in real AB tests at Zapier.</p>
<p>Making the same plot as we did before, we see that DiD still suffers from poor accuracy as measured by MSE, bow now the T-test is starting to demonstrate some positive correlation between pre-period difference and ATE. Its worth mentioning again that we would not really do anything different with the information that there was a pre-period difference when using the t-test. The estimate of the ATE would still be unbiased and have low MSE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span>
<span id="cb6-2"></span>
<span id="cb6-3">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb6-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb6-8">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb6-9">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb6-10">    )</span>
<span id="cb6-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray 45'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb6-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="case-3-strong-correlation-between-pre-and-post" class="level2">
<h2 class="anchored" data-anchor-id="case-3-strong-correlation-between-pre-and-post">Case 3: Strong Correlation Between Pre and Post</h2>
<p>In AB testing, it isn’t uncommon to see <img src="https://latex.codecogs.com/png.latex?%5Crho%3E0.9"> between pre and post outcomes. When we run experiments and seek to have an effect on existing user’s monthly payments, many users won’t change at all meaning they are typically paying the same amount this month as they were last. That results in very high <img src="https://latex.codecogs.com/png.latex?%5Crho">.</p>
<p>Let’s rerun the simulation, but this time specify that pre and post have a correlation of 0.95.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4">myblue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tt_ate, did_ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>myblue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb7-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test ATE'</span>,</span>
<span id="cb7-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD ATE'</span></span>
<span id="cb7-12">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'histogram'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I’m fairly surprised to see that the results almost completely switch. First, the DiD estimator becomes much more efficient (see the joint distribution of ATEs) which is cool. Second, now the estimates from DiD become unbiased <em>and</em> accurate which is a nice change. Ancova seems to do just as well as DiD in terms of precision and accuracy, which was not expected simply because I didn’t think DiD would work this well under these assumptions.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb8-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb8-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb8-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb8-8">    )</span>
<span id="cb8-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>myblue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb8-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Randomization creates two artificial groups who have the same distribution of potential outcomes. There is no need to correct for baseline differences in randomized groups a la DiD, and there is certainly no need to check for baseline differences after randomizing groups.</p>
<p>However, deciding to adjust for baseline differences with DiD can result in unbiased but inaccurate estimates of the treatment effect under some circumstances. From this post, those conditions seemed to be when pre and post treatment outcomes were uncorrelated. That can happen when the outcomes are very noisy or when outcomes are homogeneous across units. While unbiased, any one particular estimate from this procedure was very far away from the true ATE, as evidenced by the larger MSE.</p>
<p>However, when outcomes are correlated between pre and post (like they can be in AB tests), then the story flips. DiD becomes very efficient, nearly as efficient as Ancova, with good accuracy and unbiased estimates.</p>
<p>Generally it seems then that using DiD for a randomized experiment is fine. In cases where the outcomes are highly correlated, you could even check for baseline differences with out much harm. But it isn’t needed, and there are circumstances where deciding to use DiD because of detected baseline differences can hurt your estimates.</p>
<p>If you want unbiasedness and low variance/high precision, the results from this post (and advice elsewhere) seems to be to stick with Ancova.</p>


</section>

 ]]></description>
  <category>AB Testing</category>
  <category>Statistics</category>
  <category>Causal Inference</category>
  <guid>https://dpananos.github.io/posts/2023-09-03-did-in-ab/</guid>
  <pubDate>Sun, 03 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Did You Do Your Homework?</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/</link>
  <description><![CDATA[ 





<p><a href="https://twitter.com/quantian1/status/1673358773178585091">This tweet</a> made its way to my corner of the Bird Site. I’m a glutton for math homework punishment so I attempted it (and failed) but do not confuse my interest as legitimizing the tweet.</p>
<p>Frankly, I think asking questions found in Wooldridge is not a good litmus test of anything aside for your memory from undergrad. But that isn’t the point of this post. The point is to reply to <a href="https://ryxcommar.com/2023/06/26/should-you-ask-data-science-job-candidates-this-tricky-math-question/">Senior Powerpoint Engineer’s (SPE for short here, or should I call them @ryxcommar) blog post</a> which came as a response to the aforementioned tweet.</p>
<p>If I can summarize the post (which you should read), SPE makes the following points:</p>
<ul>
<li>The question should not be if you should ask this tricky math question to candidates, but rather you should ask yourself if you really need to hire a data scientist or some other role like a software engineer, analytics engineer, data analyst, ML engineer, etc.</li>
</ul>
<!-- -->
<ul>
<li><p>The term “data scientist” signals some sort of advanced knowledge in applied math/stats. Many bootcamps go about teaching modelling material as if that is most of the job (it isn’t) and even then most data scientists don’t actually understand one of the most foundational models well enough to even begin answering a homework question correctly. If they aren’t toiling and they don’t understand the theory, what are they really doing?</p></li>
<li><p>Additional anecdotes about how simple heuristics beat some data scientist’s logistic regression.</p></li>
</ul>
<p>The post is paired nicely with his <a href="https://twitter.com/ryxcommar/status/1672265739527417865">thread on why 2023 is a bad year to bootcamp your way to a data science job</a>, which hits on a some of the same points.</p>
<p>In brief, I agree with SPE and we’ve all heard it before. Data science is suffering from being a bullshit job, but clearly quantitative thinking is useful in business. What should be taught if not XGBoost API’s and linear algebra theory? What are we really looking for?</p>
<section id="value-proposition" class="level2">
<h2 class="anchored" data-anchor-id="value-proposition">Value Proposition</h2>
<p>My main contention here is the value proposition of a data scientist. If my summary is a fair, then SPE’s point is that data scientists are not in the trenches working with the data, instead they “twiddle with models in Jupyter”. But even then they don’t understand those models deeply enough (as evidenced by their inability to do homework questions). If they aren’t working with data and they can’t do science, what are they doing? What is their value? You probably don’t know, so think if you need a data scientist or some other position.</p>
<p>That feels reductive. Those can’t be the only two measures of a good data scientist, but granted that we need to answer “what do you do here”. I can only speak to my (limited) experience in tech, but many of the problems facing data scientists are not purely tech or math problems, so it doesn’t make sense to value data scientists on their ability to solve just those kinds of problems. In my experience, the majority of problems data scientists face are people problems.</p>
<p>Along the lines of people problems, the value proposition of a data scientist– in my humble opinion– is to get people to think about their problems scientifically. That is a lot harder than it sounds when the people you work with have not spent 4-10 years ostensibly<sup>1</sup> doing science. But it is also more valuable than just writing dbt models and dashboarding.</p>
<p>Here is an example from my work about getting people to think scientifically. Data analysts routinely made dashboards for the A/B tests we ran prior to my ownership of experimentation protocols. Many of the top of funnel metrics we measured were measured in terms of one another (e.g.&nbsp;Signup Rate = Signups per Visitor, Activation Rate = Activations per Signup, which is the ratio of Activation per Visitor and Signups per Visitor.) etc. Fine from a business perspective.</p>
<p>When it comes to inference, I don’t need to tell you that if you measure those two metrics as I’ve written them then anything that increases signup rate is going to decrease activation rate, so its going to look like everything is a stalemate. But I did have to share that with most everyone I talked to about experimentation, data analysts included. And it wasn’t just one person or team doing it, it was nearly the entire company. Measuring the right thing (and most importantly, knowing how to explain that to people because it isn’t as easy as mentioning conditioning on a post treatment variable) is like 20% math problem and 80% people problem due to all the stakeholder management that has to go into explanation why we are now changing the metrics, and how the numbers don’t match, no we can’t keep doing it like we’ve been doing it, what the source of truth is now, and on and on and on. It seems cheesy for me to say “look how my scientific thinking has changed the company for the better” but I think this is the type of work we should be looking for and training data scientists for. This is the answer to “what do you do here”, and what data scientists should be doing instead of screwing around with ChatGPT.</p>
<p>I think SPE would call this a “job perk” – thought leadership for internal decision making. That assumes you’re in a company that thinks scientifically and you’re free to do higher level stuff. We should all be so lucky. Thought leadership isn’t a perk, <strong>it is the job. You’re leading people to think scientifically</strong>. This is the disconnect I think SPE mentions. If you buy my rant, the title data scientist can imply an advanced understanding of applied math and not be expected to answer homework questions because remembering tricks from econometrics class isn’t used regularly in thinking scientifically. Candidates and interviewers aren’t being measured for/measuring the right thing (the ability to think scientifically and convince/teach others to follow suit) and here we are talking about if remembering <img src="https://latex.codecogs.com/png.latex?E%5B%5Chat%7B%5Cbeta%7D_1%5D%20=%20%5Cfrac%7B%5Coperatorname%7BCov%7D(X,%20Y)%7D%7B%5Coperatorname%7BVar%7D(X)%7D"> is a good barometer for being a data scientist or not.</p>
</section>
<section id="we-agree" class="level2">
<h2 class="anchored" data-anchor-id="we-agree">We Agree</h2>
<p>None of this undermines SPE’s points, it isn’t like bootcamps are teaching how to think scientifically. But it isn’t news that data science is over hyped, nor is it news that fresh grads aren’t well equipped for the job, nor is it news that correct linear algebra problem sets are not a good indicator for success on the job. I can’t rebut something we all agree is true, but I can ask for solutions, next steps, jeez anything than another “zero interest rate phenomenon” joke.</p>
<p>If I could amend SPE’s blog post, it would be as follows:</p>
<blockquote class="blockquote">
<p>But I don’t think “should you ask it?” is the right question. The real question here is: “Should you be hiring a data scientist? <strong>If so, are you willing to listen to what they have to say? Are you capable of recognizing scientific ability and probing to further test it?</strong>” And the answer to that is probably not. – (<em>Emphasis mine</em>).</p>
</blockquote>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I say “ostensibly” because I’m not sure what I did was “science” as much as it was survival.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/</guid>
  <pubDate>Mon, 26 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A Practical A/B Testing Brain Dump</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-05-14-ab-brain-dump/</link>
  <description><![CDATA[ 





<section id="what-is-this-post" class="level2">
<h2 class="anchored" data-anchor-id="what-is-this-post">What Is This Post?</h2>
<p>Over the past year or so, I’ve helped move Zapier towards doing better experiments and more of them. I wanted to document some of this for posterity; what I did, what worked, how we know it worked, and where I might want to go in the future. This is more of a story rather than a set of instructions.</p>
<p>My hope is that there is some sort of generalizable knowledge here. I don’t want to turn this into a set of instructions, but I do think there is something to learn (even if this has been written about before. I mean, I couldn’t find anything I needed, so here I am making it). As such, its going to be a <strong>long post</strong>. I might periodically update this post from time to time so that I can just put something out there initially.</p>
</section>
<section id="what-this-post-is-not" class="level2">
<h2 class="anchored" data-anchor-id="what-this-post-is-not">What This Post Is Not</h2>
<p>This is not a list of statistical tests to run (spoiler: its all regression anyway). Nor is this a technical post about feature flagging, persisting experiences across sessions, caching, or any other technical aspects of running online experiments.</p>
</section>
<section id="what-am-i-going-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="what-am-i-going-to-cover">What Am I Going To Cover</h2>
<p>Roughly, I want to go through the steps I took over the last year. Much of it was off the cuff and improvisation, but a lot of it was inspired by working with clinicians and contents of the book <strong>Trustworthy Online Controlled Experiments</strong>. Topics will include:</p>
<ul>
<li>Understanding where we are and where we came from</li>
<li>Determining the quickest way to improve the situation</li>
<li>Building credibility and trust</li>
<li>Scaling experimentation – even if it means buying rather than building</li>
<li>(Counter intuitive) signs we are moving in the right direction</li>
<li>Next Steps</li>
</ul>
<p><strong>You should know:</strong> This was not a one man effort. There are lots of people to thank for any success I’ve had. Guidance from leadership, all the people who let me touch their projects, and all the data scientists who tapped me for help or a consult.</p>
<hr>
</section>
<section id="empathy-understanding-where-we-are-and-where-we-came-from" class="level1">
<h1>Empathy: Understanding Where We Are and Where We Came From</h1>
<p>The first thing I did when I arrived at Zapier was shut up and listen. It would have been very easy for me to come in, see a few experiments, and then insist we do everything as Bayesians and use exotic methods to estimate quantities that didn’t actually matter but sounded important. There is a folk theorem I like that goes like</p>
<blockquote class="blockquote">
<p>“If you have a problem, someone smarter than you has already solved it”.</p>
</blockquote>
<p>A small corollary to that theorem is</p>
<blockquote class="blockquote">
<p>“If you have a possible solution, someone has already tried it and failed.”</p>
</blockquote>
<p>That failure is likely not because they just did it wrong. Don’t recreate stuff that doesn’t work. I set up a “listening tour” (basically a bunch of 1:1s) with anyone who was interested in talking to me or had something to say about experimentation. This was the single best thing I could have done. I learned a lot – which I will get to – but before that I want to talk about how to run these.</p>
<p>Your main job here is to empathize and be curious about what you’re hearing. Don’t solution, don’t look for a nail you can hit with your statistical hammer, just listen. I politely asked everyone if I could record the sessions so that I could come back and listen more intently later. This removed the burden of taking notes during the meeting, I could do that after. Instead, we were able to have a real connection. If you find yourself in the same position as I found myself, do the following: Shut up, listen, and empathize.</p>
<p>What did I learn? A few things:</p>
<ul>
<li><p>There was a culture of experimentation. People were running experiments and generating insights. However, the way experiments were being run was heterogeneous. There was no global process for ideating, hypothesizing, designing, implementing, analyzing, and reporting on an experiment. People were running experiments differently between teams, and in some cases were running them differently <em>within teams</em>. If the process for running experiments differs person to person, there is no consistency. That needs to be solved.</p></li>
<li><p>Experimentation was seen as a roadblock for a lot of people. It took time, engineering effort, and would often not result in a clear winner which was frustrating. Not only that, but it took data some time to actually analyze these experiments. Data was considered a bottleneck because we would have to make a JIRA ticket to analyze the data, and then once we did analyze it stakeholders just had more questions so we’d have to repeat the process.</p></li>
<li><p>Additionally, there was just no guidance on how to run experiments. I remember one conversation so viscerally because a stakeholder told me “If I wanted to run an experiment, I wouldn’t know where to start”. We needed some basic information on why we experiment, how we experiment, and even <em>when</em> to experiment. When we couldn’t run an experiment, we needed some guidance on what other forms of learning we could use and when those were appropriate.</p></li>
</ul>
<p>There were a few other pain points, but these were the biggest three in my opinion.</p>
<p>I don’t have much advice on empathizing except the following: You’re not going to solve someone’s problems with math. Do not go into these conversations looking for evidence that your sexy model is going to work. Instead, be curious, collect data, and try to see if problems you are hearing exist elsewhere. There is a whole art to this that I will not pretend to have mastered. In any case, <strong>do not go in thinking more math will save the day. It won’t</strong>.</p>
<p>After these interviews, I consolidated all my learning and presented them to other data scientists. The one thing I wish I added to my research was <em>why previous attempts to solve these problems failed</em>. There were at least two attempts to improve experimentation at Zapier and it would have been useful to get a more robust understanding of what they attempted to solve and how.</p>
<hr>
</section>
<section id="determining-the-quickest-way-to-improve-the-situation" class="level1">
<h1>Determining The Quickest Way To Improve The Situation</h1>
<p>At this point, I had a pretty good understanding of what people thought the problems with experimentation were. It was time for me to get some skin in the game and analyze a few experiments myself. After getting a few experiment reps in, the first thing I sought to introduce to improve the situation was an A/B Testing Brief Template.</p>
<p>My hope here was that this would be an evergreen place to learn about experiments being run. It includes all the information I would need to know about to help run an experiment. This includes, but is not limited to:</p>
<ul>
<li>Phase of development (are we planning, are we developing, are we running, have we finished, etc)</li>
<li>Experiment start and end dates</li>
<li>Variant names and links to Figma</li>
<li>Hypotheses, metrics, and assumptions, etc</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Here is the template brief I created. Its simple, and has a lot more than what is shown here, including some steps to estimate sample size.</figcaption>
<p><img src="https://cdn.zappy.app/a6022ad19406dfa7531506824ad4b395.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>It was a really simple document that tried to extract the most information with the least amount of pain. To my surprise, <em>people loved it</em>. I quickly saw teams adopt this template, and would even encourage other teams to use it too. This was the quickest way to improve the situation. It gave a small global process to think about what was important when planning an experiment. This helped pave the way to introducing more global processes and an eventual repository of experimentation information (more on that later maybe).</p>
<p>Of course, nothing is perfect. I was hoping teams would be able to self serve sample size requests with just a few simple steps. Some of these questions are easy to answer (like baseline performance) but others created a lot of questions. What <em>should</em> our MDE be? what <em>should</em> our significance level be? This section is rarely filled out by stakeholders and left to data scientists, which is too bad because it really should be something a stakeholder can do. I’ll talk about how this was solved later.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Sample size instructions</figcaption>
<p><img src="https://cdn.zappy.app/e3e465a29c32f1b889d0691b12686782.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Additionally, the quality and depth of these briefs varied team to team. Some teams were very verbose, offering links and tons of details. Others would kind of slap something in there, maybe a few bullet points at the most. It isn’t my job to say what is good and what is bad, but certainly more info made it feel like the hypotheses were better researched and supported. No word yet on if more complete briefs yielded more successful experiments.</p>
<section id="an-important-side-about-frequentism-vs-bayesianism" class="level3">
<h3 class="anchored" data-anchor-id="an-important-side-about-frequentism-vs-bayesianism">An Important Side About Frequentism vs Bayesianism</h3>
<p>You may have noticed the mention of sample size and significance level, implying a Frequentist and NHST framework being adopted here. I’m well aware of the problems with this framework, so why did I allow us to keep using this approach?</p>
<ul>
<li><p>First, keep in mind that 80% of A/B testing is not about what model you use. It is more about the stuff that comes prior to hitting <code>Run</code> on your R or python script. We needed to work on that 80%, and letting people use Frequentist models at least let them be familliar with the harder parts of AB testing. Keeping that familiarity and not introducing exotic models (again, math solution to a non-math problem) helped me build trust with those data scientists instead of having me be perceived as some egg-head completely detached from business needs. I’m not saying this would be the case for everyone, but I made the decision to leave some things the same as we fixed the more important pieces. P values were one of those things.</p></li>
<li><p>Not only that, but you need to remember that you are working with people on various different stages in their journey. You had some people like <a href="https://twitter.com/statwonk">Statwonk</a>, who really knows his stuff, and you had others who hadn’t taken stats in 10 years and didn’t understand that all statistical tests are forms of regression. Bayesian stats is hard, and once we were to move past Beta-Binomial models for conversion, I would have to hold many people’s hands as they fit and interpreted their Bayesian model. That doesn’t scale very well.</p></li>
<li><p>Not only that, but I’m no longer interested in teaching statistics to people. There are plenty of resources online that are leagues better than what I could put together, so why waste my breath? If you wanna learn Bayesian stats then go read McElreath or Gelman or Kruschke or whomever. Its just not something I’m interested in doing ever again.</p></li>
</ul>
<p>That being said, there is no reason to stay Frequentist. If we feel there is a real advantage to being Bayesian, we can and have used Bayesian models. These are especially useful in revenue experiments where we statistical significance is not our concern and we should instead be using decision theory. So let’s do what we know for now and re-evaluate when all the supporting processes are working as we intend them too. Don’t be so infelxible as to think “Bayes or bust”, that isn’t helpful and lacks empathy.</p>
</section>
</section>
<section id="an-experimentation-hub" class="level1">
<h1>An Experimentation Hub</h1>
<p>The AB testing Brief was a really good move. It saw quick and wide spread adoption and helped Zapier begin to think about planning experiments in the same way by making everyone answer the same questions. This helped a lot with the variance problem.</p>
<p>There was, however, a scalability problem. While I was very keen to consult on as many A/B tests as I could, I very quickly learned that I was not a scalable solution; I could not realistically consult on experiment ideation, design, quality control, monitoring, analysis, and reporting for every experiment we would run. As soon as I got up to about 3 or 4 experiments simultaneously, I started to get really bogged down. Not only that, but I became a victim of my own success. Teams would have a good experience with an experiment I helped run and then come back to me, which lead to another good experience, and soon enough I became their go to person for experimentation. My goal was not to give myself too much work, my goal was to improve experimentation across the org and this workflow was actively working against me.</p>
<p>I’ve learned that as you become more senior, your job is less writing code and more writing documentation<sup>1</sup>. I began writing documentation on experimentation with the help of my VP. Much of the content was mine, but the idea was his and he helped me identify where and what to write about. I didn’t try to re-write textbooks, and neither should you if you’re thinking of doing the same. Instead, my goal was to capture the most salient information so that people would be able to self serve as much as possible, and when I was required to consult I could do the most important work only I could do and then dip. Examples include:</p>
<ul>
<li>Here are the criteria you need in order to experiment. Here is the decision tree for if you should experiment. It isn’t perfect and that is OK.</li>
<li>Sample size? Nope, here is a calculator and what each of the fields mean. Let me know when you’ve got a number and I will check it.</li>
<li>Need to run a test of some sort? Here is the R function. Don’t know R? Here is the python function. Don’t code all that much? Here is a link to an online calculator.</li>
<li>Here are suggested checks you should do on your experiment data.</li>
</ul>
<p>You get the jist. This worked…OK. What I found is that this “just in time” education is extremely prone to edge cases and that means I just created different problems to solve initially (which was good, that is progress).</p>
<p><sup>2</sup>: For more on this, I would recommend reading “The Staff Engineer’s Path”.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>1↩︎</p></li>
<li id="fn2"><p>1↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <guid>https://dpananos.github.io/posts/2023-05-14-ab-brain-dump/</guid>
  <pubDate>Sun, 14 May 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Choosing the Optimal MDE for Experimentation</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-03-31-optimal-mde/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Planning experiments means deciding how long to run the experiment (by doing a sample size calculation). A big factor in this decision is agreeing on a minimal detectable effect or MDE. Smaller MDEs mean longer experiments and hence fewer of them in a given window of time. Larger MDEs mean shorter experiments, but they also mean there is a chance we could fail to reject smaller effects <sup>1</sup>. Clearly, there is a sweet spot for the MDE; not so large that we are passing over interventions which would improve a given metric, but not so small that we are wasting our time collecting samples.</p>
<p>This blog post is intended to demonstrate how data scientists can empirically estimate the “optimal” MDE for experimenting teams. Here, “optimal” refers to the MDE which optimizes the long run cumulative improvement to the metric (i.e.&nbsp;the MDE which is estimated to improve the metric the most in a given window of time) under some mild and some strong assumptions. I begin by assuming teams have a model of likely effect sizes for their interventions vis a vis a Bayesian model like I have done in my past post <a href="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/">Forecasting Experimental Lift Using Hierarchical Bayesian Modelling</a>.</p>
<p>I begin with an illustration of the larger idea, at a level I hope would be appropriate for a product manager. Then, I formally describe the procedure and implement it in R, making some illustrative assumptions about a hypothetical team running experiments. Lastly, I demonstrate how various assumptions can effect the estimate of the optimal MDE and estimate a linear model for the optimal MDE as a function of the assumptions.</p>
<p>Although imperfect, I believe this approach offers a superior approach to determining the MDE for experimenting teams, and also has the benefit of being re-estimable experiment over experiment thanks to the Bayesian modelling driving the approach.</p>
</section>
<section id="big-idea" class="level2">
<h2 class="anchored" data-anchor-id="big-idea">Big Idea</h2>
<p>Let’s consider how many experiments a team can run in a year. Teams usually have some upper limit for the number of experiments because they need time to tend to their other responsibilities. Let’s assume a team can run 24 experiments in a year (~2 experiments a month on average). While the team has a maximum number of experiments they can run, the number of experiments <em>they actually run</em> will depend on how the experiments are planned. For example, if the team has on average 10,000,000 unique visitors each year, and each experiment needs 1, 500, 000 users, then the team can run 6 experiments (you can’t run half an experiment so you have to round down to the nearest number). So the number of experiments that can be run for this team is the smaller of the ratio of unique visitors per year to total sample size per experiment and 24. The key insight here is that because the MDE determines the sample size per experiment (again, larger/smaller MDEs mean smaller/larger sample sizes), then the MDE implicitly determines the number of experiments we can.</p>
<p>Each change to the product has some true effect that is unknown to us. In fact, the whole reason we run an experiment is to estimate that effect. Because the MDE determines the sample size per experiment, it also determines the probability we detect the effect. Increase the MDE, and the probability we detect a given effect decreases (because the sample size for the experiment decreases). Conversely, decreasing the MDE increases the probability we detect an effect.</p>
<p>We need to choose an MDE so that we can run lots of experiments <em>and</em> have a good chance of detecting positive effects in those experiments. The problem is that we don’t know what kinds of effects our experiments are going to have, which is why we use an MDE. The MDE basically is a stand in for what we think the effect of the change is going to be <em>at its smallest</em>. If the effect of the change is bigger than the MDE, then we have a really good chance to detect the effect.</p>
<p>However, we actually can estimate what kinds of effects our changes will produce. It isn’t worth getting into, but we can estimate a distribution of likely effect sizes, meaning we can reasonably guess what kinds of effects we are going to see in future experiments. This means that we can use this distribution of plausible future effects to simulate future experiments. These simulations can then be used to determine the MDE which strikes the balance we need. A good way to determine which MDE is best is to consider the “cumulative impact” on the metric. Think of it this way; if we run lots of experiments and they all have a reasonable chance of detecting effects then the metric we’re seeking to improve is going to change in a big way. So our goal is to find the MDE which results in the largest improvement to our metric over a given window of time in which we can experiment. This MDE which results in the largest improvement is called the “optimal MDE”.</p>
<p>Let’s formalize the optimization problem using some math.</p>
</section>
<section id="mathematical-details" class="level2">
<h2 class="anchored" data-anchor-id="mathematical-details">Mathematical Details</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?N_%7Buuid%7D"> be the number of unique subjects available for experimentation in a given time frame, let <img src="https://latex.codecogs.com/png.latex?%5Cdelta%20%5Cin%20%5Cmathbb%7BR%7D_+"> be an arbitrary MDE, and let <img src="https://latex.codecogs.com/png.latex?K"> be the maximum number of experiments for a given team. Let <img src="https://latex.codecogs.com/png.latex?n_%7Bss%7D:%20%5Cmathbb%7BR%7D_+%20%5Cto%20%5Cmathbb%7BN%7D"> be a function which maps MDEs to sample sizes for experiments. The number of experiments which can be run in a given time frame is <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D(%5Cdelta)%20=%20%5Cmin%5Cleft(K,%20%20%5Clfloor%5Cfrac%7BN_%7Buuid%7D%7D%7Bn_%7Bss%7D(%5Cdelta)%7D%20%5Crfloor%20%5Cright)">. Here, I have included an explicit dependency of <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D"> on <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> to remind us that the MDE implicitly determines the number of experiments. I’ve made the assumption that experiments can be run back to back.</p>
<p>Let <img src="https://latex.codecogs.com/png.latex?%5Ctheta_k"> be a latent effect from an intervention, and let <img src="https://latex.codecogs.com/png.latex?%5Cpsi(%5Ctheta_k;%20%5Cdelta)"> be the statistical power to detect an effect of <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> when the experiment is designed with an MDE of <img src="https://latex.codecogs.com/png.latex?%5Cdelta">. I assume that: a) All interventions are independent of one another, and the effect of one intervention is not changed by the implementation of another, b) effects of interventions are additive (on the appropriate scale), and c) effects persist through time (there is now decay of an effect once implemented).</p>
<p>The objective function we seek to optimize is the expected cumulative improvement to the metric we are opting to experiment on. We get <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D"> draws from our population distribution of effects (because we are running that many experiments), and the expected cumulative improvement is the sum of the products of the effects and the probability we detect the effect</p>
<p><img src="https://latex.codecogs.com/png.latex?%20C(%5Cdelta)%20=%20%5Csum_%7Bk=1%7D%5E%7Bn_%7B%5Cexp%7D(%5Cdelta)%7D%20%5Ctheta_k%20%5Cpsi(%5Ctheta_k;%20%5Cdelta)%20%20"> Note here that the MDE <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> determines both the number of experiments run (<img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D">) <em>and</em> the probability those experiments detect an effect. The optimal MDE is then</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cdelta_%7B%5Cmbox%7Bopt%7D%7D%20=%20%5Cunderset%7B%5Cdelta%20%5Cin%20%5Cmathbb%7BR%7D_+%7D%7B%5Carg%5Cmax%7D%20%20%5CBig%5C%7B%20C(%5Cdelta)%20%5CBig%20%5C%7D"> While the <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> are latent, this quantity can still be optimized by using draws from a Bayesian model for experimental effects. See <a href="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/">this previous post of mine</a> for an example of what I mean.</p>
<p>In the next section, I demonstrate how to estimate <img src="https://latex.codecogs.com/png.latex?%5Cdelta_%7B%5Cmbox%7Bopt%7D%7D"> using simulation. To fill in some missing information (e.g.&nbsp;the maximum number of experiments run by the team), I explicitly write out some assumptions.</p>
</section>
<section id="additional-assumptions" class="level2">
<h2 class="anchored" data-anchor-id="additional-assumptions">Additional Assumptions</h2>
<p>Imagine a team who runs experiments. I make the following assumptions about the team:</p>
<ul>
<li>The team’s entire job is running experiments. Due to resourcing constraints, they can only run a finite number experiments per year. I assume the team can run 24 experiments a year (or 2 per month on average). The team can run experiments back to back.</li>
<li>The team works in a frequentist framework, and they always run 2 tailed tests because there is a chance they could hurt the product, and they would want to know that.</li>
<li>The main causal contrast is relative risk. In industry, we call this the “lift”.</li>
<li>The outcome is a binary outcome, and the baseline rate is 8%.</li>
<li>10,000,000 unique visitors to your website per year.</li>
<li>The team generates lift fairly reliably and these lifts sustain through time. There is no decay of the effect, no interaction between experiments, nor is there any seasonality. These are blatantly false, but they simplify enough for us to get traction.</li>
<li>The population level lift distribution is log normal, with parameters <img src="https://latex.codecogs.com/png.latex?%5Cmu=%5Clog(1.01)"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma=0.1"> on the log scale. This means the team increases the metric by approximately 1% on average.</li>
<li>The team is really only interested in positive effects (lift &gt; 1) so they will not implement anything with lift &lt; 1, and if the null fails to be rejected they will stick with the status quo.</li>
<li>The same MDE is used to plan all experiments.</li>
</ul>
<p>Under these assumptions, a procedure can be devised to optimize the cumulative improvement to the metric of interest.</p>
</section>
<section id="results-from-a-simulation-experiment" class="level2">
<h2 class="anchored" data-anchor-id="results-from-a-simulation-experiment">Results from a Simulation Experiment</h2>
<p>Shown in the code cell below is simulation of the process for finding the optimal MDE under the assumptions listed above. Rather than simulate every experiment (e.g.&nbsp;by drawing random numbers and performing a statistical test), we can draw a binomial random variable with probability of success equal to the statistical power of detecting the latent lift with the indicated MDE and hence sample size.</p>
<p>The optimal lift is somewhere between 5% and 6%. Explicit optimization methods could be used find the optima, but I think for the purposes of experimentation you just want to be in the right ballpark, so a plot is more than enough.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">one_sided_power <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(real_lift, n_per_group){</span>
<span id="cb1-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only interested in the case when the estimated lift is</span></span>
<span id="cb1-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Greater than one, which corresponds to a one sided test.</span></span>
<span id="cb1-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># However, you always run 2 tailed tests, so the significance level</span></span>
<span id="cb1-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># is half of what is typically is.</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pwr.2p.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ES.h</span>(real_lift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>baseline, baseline), </span>
<span id="cb1-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n_per_group,</span>
<span id="cb1-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>,</span>
<span id="cb1-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span></span>
<span id="cb1-10">              )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power</span>
<span id="cb1-11">}</span>
<span id="cb1-12"></span>
<span id="cb1-13">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(mde, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">baseline=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_uuids=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latent_lift =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>){</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw lifts for experiments from this distribution</span></span>
<span id="cb1-16">  lift_dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>\(n) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(n, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(latent_lift), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Given the MDE, here is how many users you need per group in each experiment.</span></span>
<span id="cb1-19">  n_per_group <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pwr.2p.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ES.h</span>(mde<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>baseline, baseline), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here is how many experiments you could run per year</span></span>
<span id="cb1-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Why the factor of 2?  Because the computation above is the szie of each group.</span></span>
<span id="cb1-23">  n_experiments_per_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(n_uuids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)))</span>
<span id="cb1-24">  </span>
<span id="cb1-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here is a grid of experiments.  Simulate </span></span>
<span id="cb1-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Running these experiments 1000 times</span></span>
<span id="cb1-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># each experiment has n_per_group users in each group</span></span>
<span id="cb1-28">  simulations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(</span>
<span id="cb1-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, </span>
<span id="cb1-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">experiment =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_experiments_per_year,</span>
<span id="cb1-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group</span>
<span id="cb1-32">  )</span>
<span id="cb1-33">  </span>
<span id="cb1-34">  simulations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-36">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># draw a real lift for each experiment from your lift distribution</span></span>
<span id="cb1-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">real_lift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lift_dist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()),</span>
<span id="cb1-38">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the power to detect that lift given the sample size you have</span></span>
<span id="cb1-39">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual_power =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2_dbl</span>(real_lift, n_per_group, one_sided_power),</span>
<span id="cb1-40">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate detecting the lift</span></span>
<span id="cb1-41">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">detect =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.logical</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, actual_power)),</span>
<span id="cb1-42">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Did you implement the result or not?</span></span>
<span id="cb1-43">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you didn't, this is equivalent to a lift of 1</span></span>
<span id="cb1-44">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and won't change the product.</span></span>
<span id="cb1-45">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(detect, real_lift, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-46">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#finally, take the product, grouping among simulations.</span></span>
<span id="cb1-49">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prod</span>(result)) </span>
<span id="cb1-50">  </span>
<span id="cb1-51">}</span>
<span id="cb1-52"></span>
<span id="cb1-53"></span>
<span id="cb1-54">mdes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mde =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-55">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mde_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(mde)))</span>
<span id="cb1-56"></span>
<span id="cb1-57">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(mdes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mde, f, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mde_id'</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-58">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(mdes)</span>
<span id="cb1-59"></span>
<span id="cb1-60"></span>
<span id="cb1-61">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mde, lift)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_se</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> \(x) scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(x<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> \(x) scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(x<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDE'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cumulative Improvement Over all Experiments'</span>,</span>
<span id="cb1-67">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Swing for the Fences'</span>,</span>
<span id="cb1-68">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The optimal MDE is not the expected lift the team generates'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="how-do-the-various-parts-of-the-problem-change-the-objective-function" class="level2">
<h2 class="anchored" data-anchor-id="how-do-the-various-parts-of-the-problem-change-the-objective-function">How Do The Various Parts of The Problem Change The Objective Function?</h2>
<p>Changing the baseline of the metric moves the optima, with larger MDEs being considered optimal for smaller baselines.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>As the number of unique visitors to the website increases, the optimal MDE decreases, but only slightly.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>As the expectation of the latent lift increases, the optima does not move but the expected cumulative improvement to the metric increases. This is unsurprising.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The “M” in MDE is really misleading. A better term would be Smallest Effect Size of Interest, because we <em>can</em> detect smaller effects than the MDE, albeit with lower probability.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <guid>https://dpananos.github.io/posts/2023-03-31-optimal-mde/</guid>
  <pubDate>Fri, 31 Mar 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Causal Risk Ratios in AB Tests with One Sided Non-Compliance</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/</link>
  <description><![CDATA[ 





<p>Sometimes we run AB tests where engaging with the treatment (and hence being treated) is optional. Since assignment to treatment is random, we can use the randomization as an instrumental variable (assuming there is a strong correlation between the instrument and the treatment, and that there are no backdoor paths between randomization and the final outcome).</p>
<p>There are a few libraries to do estimate the LATE from an instrumental variable. However, none of them report a causal risk ratio, which is usually our choice of causal contrast for better or worse.</p>
<p>In this post, I’m putting together some much appreciated advice from <a href="https://twitter.com/guilhermejd1/status/1624196853947416576"><span class="citation" data-cites="guilhermejd1">@guilhermejd1</span></a> and <a href="https://stats.stackexchange.com/a/605042/111259">dimitry on cross validated</a> on how to estimate a causal risk ratio in a randomized experiment with one sided non-compliance. I’ll first demonstrate how to do this with a simulation where we will actually have potential outcomes with which to compare. Then, I’ll apply this approach to a real experiment I helped run at Zapier.</p>
<section id="simulation" class="level2">
<h2 class="anchored" data-anchor-id="simulation">Simulation</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?A"> be a binary indicator for assignment to treatment (1) or control (0). Let <img src="https://latex.codecogs.com/png.latex?d_j%5Ea"> be the potential outcome for engaging with the treatment under treatment <img src="https://latex.codecogs.com/png.latex?A=a"> for user <img src="https://latex.codecogs.com/png.latex?j">. Due to construction of the experiment, <img src="https://latex.codecogs.com/png.latex?d_j%5E0%20=%200%20%20%5Cforall%20j"> because users in control can not engage in the treatment by design. Dimitry writes</p>
<blockquote class="blockquote">
<p>“This is different than the typical experiment in labor economics, where people can take up job training somewhere else even if they are in the control group”.</p>
</blockquote>
<p>This means that we have two types of users in treatment group: <img src="https://latex.codecogs.com/png.latex?d_j%5E1%20=%201"> is a “complier” and <img src="https://latex.codecogs.com/png.latex?d_j%5E1%20=%200"> is a “never taker”. If our outcome is <img src="https://latex.codecogs.com/png.latex?y">, then LATE is the ATE for compliers and is also the ATT.</p>
<p>Let’s set up a simulation. Here are some details:</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?A"> is decided by a coinflip (i.e.&nbsp;bernoulli with probability of success 0.5)</li>
<li>There is an unmeasured confounder <img src="https://latex.codecogs.com/png.latex?w">, which is also distributed in the population via a coinflip.</li>
<li>The confounder and the treatment effect the probability of engaging with the treatment (being a complier). <img src="https://latex.codecogs.com/png.latex?P%5Cleft(d_j%5E1%20=%201%20%5Cmid%20A=1,%20w%5Cright)%20=%200.4%20-%200.2w">. Because of the one sided compliance, <img src="https://latex.codecogs.com/png.latex?P(d_j%5E0=1)%20=%200">.</li>
<li>Probability of the outcome is <img src="https://latex.codecogs.com/png.latex?P%5Cleft(%20y%5Ea_j=1%20%5Cmid%20d%5E%7Ba%7D_j,%20w%20%5Cright)%20=%200.1%20+%200.5w%20+%200.1d_j%5E%7Ba%7D">. So the instrument only effects the outcome through compliance.</li>
</ul>
<p>Let’s simuilate this in R</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-3">my_blue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()) </span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_geom_defaults</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>,   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> my_blue, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-2">N<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lots of precision</span></span>
<span id="cb2-3">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-4">w <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Potential outcomes</span></span>
<span id="cb2-7">d_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-8">d_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A)</span>
<span id="cb2-9">y_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w)</span>
<span id="cb2-10">y_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_1)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and now the observed data via switching equation</span></span>
<span id="cb2-13">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y_0</span>
<span id="cb2-14">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_0</span>
<span id="cb2-15">complier <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</div>
<p>From our setup, <img src="https://latex.codecogs.com/png.latex?LATE%20=%200.1">. Let’s compute that from our potential outcomes and estimate it using <img src="https://latex.codecogs.com/png.latex?A"> as an instrument.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sample_late <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_1[d_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_0[d_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb3-2">est_late <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(y, A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(d, A)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-striped" style="margin-left: auto; margin-right: auto;">
<thead>
<tr>
<th style="text-align:right;">
True LATE
</th>
<th style="text-align:right;">
Sample LATE
</th>
<th style="text-align:right;">
IV Estimate of LATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right;">
0.1
</td>
<td style="text-align:right;">
0.101
</td>
<td style="text-align:right;">
0.103
</td>
</tr>
</tbody>
</table>
<p>True LATE, sample LATE, and estimated LATE. All 3 agree to within 3 decimal places and any differences are just sampling variability.</p>
</div>
</div>
</section>
<section id="estimating-the-causal-risk-ratio" class="level2">
<h2 class="anchored" data-anchor-id="estimating-the-causal-risk-ratio">Estimating The Causal Risk Ratio</h2>
<p>In order to compute the causal risk ratio we need two quantities:</p>
<ul>
<li>An estimate of <img src="https://latex.codecogs.com/png.latex?E%5By%5E1_j%20%5Cmid%20d%5E1%5D">, and</li>
<li>An estimate of <img src="https://latex.codecogs.com/png.latex?E%5By%5E0_j%20%5Cmid%20d%5E1%5D">.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?E%5By%5E1_j%20%5Cmid%20d%5E1%5D"> is easy to estimate; just compute the average outcome of those users in treatment who engaged with the treatment. Now because <img src="https://latex.codecogs.com/png.latex?LATE%20=%20E%5By%5E1_j%20%5Cmid%20d%5E1%5D%20-%20E%5By%5E0_j%20%5Cmid%20d%5E1%5D">, the second estimate we need is obtained from some algebra.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estimate from the data</span></span>
<span id="cb4-2">E_y1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y[d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb4-3">E_y0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> E_y1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> est_late <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use the estimate, not the truth</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">E_y1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>E_y0</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.389267</code></pre>
</div>
</div>
<p>Let’s compare this to the true estimate of the causal risk ratio using potential outcomes</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_1[complier])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_0[complier])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.381259</code></pre>
</div>
</div>
<p>Which is pretty damn close.</p>
</section>
<section id="a-real-example" class="level1">
<h1>A Real Example</h1>
<p>We ran an experiment where users could optionally watch a video. The video was intended to drive some other metric <img src="https://latex.codecogs.com/png.latex?y">. Here are the results from the experiment.</p>
<div class="cell">
<div class="cell-output-display">
<div id="zvewtafbqe" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#zvewtafbqe .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zvewtafbqe .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zvewtafbqe .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zvewtafbqe .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zvewtafbqe .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zvewtafbqe .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zvewtafbqe .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zvewtafbqe .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zvewtafbqe .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zvewtafbqe .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zvewtafbqe .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zvewtafbqe .gt_from_md > :first-child {
  margin-top: 0;
}

#zvewtafbqe .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zvewtafbqe .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zvewtafbqe .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zvewtafbqe .gt_row_group_first td {
  border-top-width: 2px;
}

#zvewtafbqe .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zvewtafbqe .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zvewtafbqe .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zvewtafbqe .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zvewtafbqe .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_left {
  text-align: left;
}

#zvewtafbqe .gt_center {
  text-align: center;
}

#zvewtafbqe .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zvewtafbqe .gt_font_normal {
  font-weight: normal;
}

#zvewtafbqe .gt_font_bold {
  font-weight: bold;
}

#zvewtafbqe .gt_font_italic {
  font-style: italic;
}

#zvewtafbqe .gt_super {
  font-size: 65%;
}

#zvewtafbqe .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#zvewtafbqe .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zvewtafbqe .gt_indent_1 {
  text-indent: 5px;
}

#zvewtafbqe .gt_indent_2 {
  text-indent: 10px;
}

#zvewtafbqe .gt_indent_3 {
  text-indent: 15px;
}

#zvewtafbqe .gt_indent_4 {
  text-indent: 20px;
}

#zvewtafbqe .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th id="<strong>Characteristic</strong>" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"><strong>Characteristic</strong></th>
<th id="<strong>Overall</strong>, N = 10,119<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Overall</strong>, N = 10,119<sup>1</sup></th>
<th id="<strong>Complied</strong>, N = 219<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Complied</strong>, N = 219<sup>1</sup></th>
<th id="<strong>Never Taker</strong>, N = 9,900<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Never Taker</strong>, N = 9,900<sup>1</sup></th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="label">Y</td>
<td class="gt_row gt_center" headers="stat_0"></td>
<td class="gt_row gt_center" headers="stat_1"></td>
<td class="gt_row gt_center" headers="stat_2"></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;0</td>
<td class="gt_row gt_center" headers="stat_0">5,932.0 (58.6%)</td>
<td class="gt_row gt_center" headers="stat_1">145.0 (66.2%)</td>
<td class="gt_row gt_center" headers="stat_2">5,787.0 (58.5%)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;1</td>
<td class="gt_row gt_center" headers="stat_0">4,187.0 (41.4%)</td>
<td class="gt_row gt_center" headers="stat_1">74.0 (33.8%)</td>
<td class="gt_row gt_center" headers="stat_2">4,113.0 (41.5%)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">Treatment</td>
<td class="gt_row gt_center" headers="stat_0"></td>
<td class="gt_row gt_center" headers="stat_1"></td>
<td class="gt_row gt_center" headers="stat_2"></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;Control</td>
<td class="gt_row gt_center" headers="stat_0">5,083.0 (50.2%)</td>
<td class="gt_row gt_center" headers="stat_1">0.0 (0.0%)</td>
<td class="gt_row gt_center" headers="stat_2">5,083.0 (51.3%)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;Treatment</td>
<td class="gt_row gt_center" headers="stat_0">5,036.0 (49.8%)</td>
<td class="gt_row gt_center" headers="stat_1">219.0 (100.0%)</td>
<td class="gt_row gt_center" headers="stat_2">4,817.0 (48.7%)</td>
</tr>
</tbody><tfoot class="gt_footnotes">
<tr class="odd">
<td colspan="4" class="gt_footnote"><sup>1</sup> n (%)</td>
</tr>
</tfoot>

</table>

</div>
</div>
</div>
<p>We can see that 74 of the 219 compliers actually had the outcome. This means we can estimate <img src="https://latex.codecogs.com/png.latex?E%5By%5E1%5Cmid%20d%5E1%5D%20%5Capprox%2074/219%20%5Capprox%2033.8%5C%25">. Using <code>ivreg</code>, the LATE is estimated to be 0.256, so the lift is estimated to be <img src="https://latex.codecogs.com/png.latex?0.338/(0.388-0.256)%20%5Capprox%202.56">. But there is still a problem.</p>
<section id="oh-shit-i-forgot-a-bound" class="level2">
<h2 class="anchored" data-anchor-id="oh-shit-i-forgot-a-bound">Oh Shit, I Forgot a Bound</h2>
<p>Note that there is no bound on the LATE because it is estimated via OLS (sure, there are realistic bounds on how big this can be, but OLS isn’t enforcing those). In particular, what if <img src="https://latex.codecogs.com/png.latex?LATE%20=%20E%5By%5E1%20%5Cmid%20d%5E1%5D">? Then the denominator of the causal risk ratio would be 0. That’s…bad.</p>
<p>More over, what if <img src="https://latex.codecogs.com/png.latex?LATE%20%5Capprox%20E%5By%5E1%20%5Cmid%20d%5E1%5D"> so that the denominator was really small? Then the causal risk ratio would basically blow up (that’s a technical term for “embiggen”).</p>
<p>The only reason I bring this up is because it happens in this example. Let’s bootstrap the estimated causal risk ratio (what we call “lift”) and look at the distribuion of bootstrap replicates.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>LMAO look at that tail! The long tail us due to the problems I’ve highlighted. In fact, we can highlight the “Oh shit zone” on a plot of the bootstraps (below in the figure below). The red line is where the tail behavior comes from; if you have a bootstrap replicate on that line, you should be saying “oh shit”.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In fact, there are some estimates from the bootstrap which yield <img src="https://latex.codecogs.com/png.latex?E%5By%5E0%5Cmid%20d%5E1%5D%3C0"> so… what was the point if this?</p>
</section>
<section id="what-was-the-point-of-this-post" class="level2">
<h2 class="anchored" data-anchor-id="what-was-the-point-of-this-post">What Was The Point Of This Post</h2>
<p>Ok, so estimating the causal risk ratio in a randomized experiment with one sided non-compliance is technically possible, but the math can get…weird. In particular, bootstrapping the standard errors (which is probably the most sensible way of estimating the standard errors unless you’re a glutton for delta method punishment) shows that we can get non-nonsensical bootstrapped estimates of the counterfacutal average outcome for compliers.</p>
<p>Honestly…I’m not sure where to go from here. Point estimates are possible but incomplete. Bootstrapping is a sanest way to get standard errors, but have no way of ensuring the estimates are bounded appropriately. All is not lost, its nice to know this sort of thing can happen. Maybe the most sensible thing to say here is “do not ask for causal risk ratios for these types of experiments” and that is worth its weight in gold.</p>


</section>
</section>

 ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <category>Causal Inference</category>
  <guid>https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/</guid>
  <pubDate>Sat, 11 Feb 2023 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
