<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Demetri Pananos Ph.D</title>
<link>https://dpananos.github.io/</link>
<atom:link href="https://dpananos.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Thu, 08 Feb 2024 05:00:00 GMT</lastBuildDate>
<item>
  <title>Peeking Sets You Up For Dissapointment</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-02-08-peek/</link>
  <description><![CDATA[ 





<p>Peeking (looking for significance in an AB test before the experiment has enough samples to reach desired power) is a “no no”. Rationales for not peeking typically mention inflated type 1 error rate.</p>
<p>Unless you’re just randomizing into two groups and not changing anything, the null is unlikely to be true. So inflated type one error rate is really not the primary concern. Rather, if we peek then we are setting ourselves up for disappointment. Detected effects from peeking will typically not generalize, and we will be overstating out impact. The reason why is <a href="https://dpananos.github.io/posts/2024-01-22-curse/">fairly clear when considering the Winner’s Curse</a>.</p>
<p>The long and the short of it is as follows:</p>
<ul>
<li>When you peak, your tests are under powered.</li>
<li>Statistically significant results from under powered tests generally over estimate the truth (see my post on the Winner’s curse for why).</li>
<li>So when you detect an effect from peeking, you are very likely over estimating your impact. When you roll out the change globally, you’re probably not going to see the impact you expected. This can lead to disappointment (and a lot of questions from everyone when they don’t see changes to the numbers on a dashboard).</li>
</ul>
<p>As a concrete example, say you design an experiment to detect a 3% lift in a binary outcome, and say your intervention truly does improve the outcome by 3%. The baseline is 10%, and you design your experiment to have 80% power with a 5% false positive rate. You’re going to need a total of 318,132 users in your experiment…which sounds like a lot. What if we instead checked for statistical significance each time the groups hit a multiple of 20, 000. Depending on how fast we can accrue users into the experiment, this could save time…right?</p>
<p>Shown below is a line plot of the relative error between what you would expect to detect at each peek and the true lift. The plot speaks for itself; conditional on finding an effect early, you’re likely over estimating the truth.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>), N)</span>
<span id="cb1-2">pwr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(n, \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.prop.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span>x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p1=</span>pc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p2=</span>pt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power)</span>
<span id="cb1-3">log_rr_mean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pc)</span>
<span id="cb1-4">log_rr_var <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pt)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(pt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>pc)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(pc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n)</span>
<span id="cb1-5">log_rr_sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(log_rr_var)</span>
<span id="cb1-6"></span>
<span id="cb1-7">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> log_rr_mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_sd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(pwr)</span>
<span id="cb1-8"></span>
<span id="cb1-9"></span>
<span id="cb1-10"></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expectation from truncated normal</span></span>
<span id="cb1-13">trunc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> log_rr_mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_rr_sd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>((z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_sd) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>((z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_sd))</span>
<span id="cb1-14">err <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>( log_rr_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>trunc)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>log_rr_mean</span>
<span id="cb1-15"></span>
<span id="cb1-16">sims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(n, \(nn) {</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  </span>
<span id="cb1-19">  r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, {</span>
<span id="cb1-20">    </span>
<span id="cb1-21">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, nn, pc)</span>
<span id="cb1-22">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, nn, pt)</span>
<span id="cb1-23">  </span>
<span id="cb1-24">  test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prop.test</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(y, x), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(nn, nn))</span>
<span id="cb1-25">  </span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb1-27">  })</span>
<span id="cb1-28">  </span>
<span id="cb1-29">  (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span>T) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_rr_mean) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> log_rr_mean</span>
<span id="cb1-30">  </span>
<span id="cb1-31">  </span>
<span id="cb1-32">})</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-02-08-peek/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In the best case scenario, where you end the experiment on the first peek, you’re going to vastly over estimate the impact you had (almost by a factor of 2.3x!). The worst part is that these errors compound, so if you peek on every experiment you’re going to <em>grossly</em> over estimate the total impact you had. Maybe something to talk to your PMs about.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-02-08-peek/</guid>
  <pubDate>Thu, 08 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>You Just Said Something Wrong About Logistic Regression</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-02-06-logit/</link>
  <description><![CDATA[ 





<p>Congratulations, you just said something wrong about logistic regression. That’s OK, logistic regression is hard and we all have to learn/re-learn some things from time to time.</p>
<p>This is a living blog post intended to address some common misconceptions or flat out wrong statements I’ve seen people make about logistic regression.</p>
<section id="the-coefficients-of-logistic-regression-are-interpreted-as-youre-x-times-more-likely-to-see-y-given-factor-z." class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="the-coefficients-of-logistic-regression-are-interpreted-as-youre-x-times-more-likely-to-see-y-given-factor-z."><span class="header-section-number">1</span> The Coefficients of Logistic Regression are Interpreted as “You’re X Times More Likely to See Y Given Factor Z”.</h2>
<p>Wrong! The (exponentiated) coefficients of logistic regression are interpreted as “the odds you see Y given Factor Z are X times larger”.</p>
<p>Phrases like “X times <em>more likely</em>” allude to the the probability of the event. If the probability of getting some event is 10%, and the probability of getting some other event is 20%, then you are 2 times more likely to get the latter event than the former.</p>
<p>This kind of comparison between two probabilities is called “the relative risk” (or risk ratio, or lift, it really depends on where you work). The coefficients of a logistic regression are <em>not</em> risk ratios, nor are they log risk ratios; they are log odds ratios.</p>
<p>Now, it is actually fine to make this mistake under a few conditions. Namely, when a) the odds ratio is sufficiently small, and/or b) the baseline risk is sufficiently small. You can see this on the plot below which plots the odds ratios and corresponds risk ratios for various baseline risks. On the whole though, you shouldn’t interpret any output from logistic regression as a risk ratio unless you explicitly go out of our way to estimate that quantity.</p>
<div id="bd57bd8e" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.axes_grid1.inset_locator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> inset_axes</span>
<span id="cb1-5"></span>
<span id="cb1-6">p1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.20</span>])</span>
<span id="cb1-7"></span>
<span id="cb1-8">rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)</span>
<span id="cb1-11">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb1-12">ax.set_xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-13">ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set light gray background</span></span>
<span id="cb1-16">ax.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#f0f0f0'</span>)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set white grid lines</span></span>
<span id="cb1-19">ax.grid(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21">ax.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k--'</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'magma'</span>)</span>
<span id="cb1-24">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(p1)))</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(p1):</span>
<span id="cb1-27">    p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p</span>
<span id="cb1-28">    odr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p)</span>
<span id="cb1-29">    ax.plot(rr, odr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i])</span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move legend outside the plot axis to the right</span></span>
<span id="cb1-32">ax.legend(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Baseline risk"</span>, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center left'</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set y ticks to [1, 2, 3, 4, 5]</span></span>
<span id="cb1-35">ax.set_yticks([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb1-36">ax.set_xticks([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb1-37">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Relative Risk'</span>)</span>
<span id="cb1-38">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Odds Ratio'</span>)</span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add zoom inset region axis on the bottom center</span></span>
<span id="cb1-41">axins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.inset_axes(</span>
<span id="cb1-42">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusted position</span></span>
<span id="cb1-43">    xlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), ylim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), xticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>], yticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>])</span>
<span id="cb1-44">    </span>
<span id="cb1-45">axins.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k--'</span>)</span>
<span id="cb1-46">axins.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#f0f0f0'</span>)</span>
<span id="cb1-47">axins.grid(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(p1):</span>
<span id="cb1-50">    p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p</span>
<span id="cb1-51">    odr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p)</span>
<span id="cb1-52">    axins.plot(rr, odr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i])</span>
<span id="cb1-53"></span>
<span id="cb1-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use ax.indicate_inset_zoom to draw a rectangle around the zoomed-in region</span></span>
<span id="cb1-55">ax.indicate_inset_zoom(axins, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb1-56"></span>
<span id="cb1-57">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>How the relative risk and odds ratio differ for various baseline risks. For each basline risk, we can compute the associated probabiltity given the relative risk. Given that probability, we can also compute the odds ratio.</figcaption>
<p><img src="https://dpananos.github.io/posts/2024-02-06-logit/index_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-02-06-logit/</guid>
  <pubDate>Tue, 06 Feb 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The Winner’s Curse Is Easy To Understand From This Picture</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-01-22-curse/</link>
  <description><![CDATA[ 





<p>Take a look at the photo below, and it i should be easy to understand why The Winner’s Curse (the general tendency for detected effects to be an over estimate of the truth) is a thing.</p>
<p>The plot shows our typical setup for a hypothesis test. In black is the sampling distribution of the test statistic for a difference in means under the null, and in blue is the statistic’s sampling distribution under the alternative. The shaded blue region represents the statistical power, and those effect sizes in the shaded region would be considered “statistically significant”.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_f57febe84b86407f210dc36b318d860c">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-2">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Difference in means'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yaxt=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb1-10">)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-22-curse/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The shaded blue region defines a lower truncated normal distribution. Were the alternative hypothesis true, and were we to run many experiments to estimate the difference in means, our detected effects would be samples from this distribution. Hence, using those samples to estimate the mean of the alternative distribution would result in a biased estimate of the mean.</p>
<p>The expectation for a lower truncated normal distribution truncated at <img src="https://latex.codecogs.com/png.latex?x=a"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmu+%5Csigma%20%20%5Cdfrac%7B%5Cvarphi%5Cleft(%20%5Cdfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%20%5Cright)%7D%7B1%20-%20%5CPhi%5Cleft(%5Cdfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%5Cright)%7D%20%20%20%5C%3E."></p>
<p>Here <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma"> are the mean and standard deviation of the distribution under the alternative, <img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> is the standard normal density, <img src="https://latex.codecogs.com/png.latex?%5CPhi"> is the standard normal cumulative distribution. So our estimate of the mean would be biased upwards by <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%20%5Cfrac%7B%5Cvarphi%5Cleft(%20%5Cfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%20%5Cright)%7D%7B1%20-%20%5CPhi%5Cleft(%5Cfrac%7Ba-%5Cmu%7D%7B%5Csigma%7D%5Cright)%7D">. That can be small or large depending on <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma">.</p>
<p>Without doing any differentiation to understand where this bias is largest, it should be intutituve from the picture that the bias is small/large when statistical power is large/small.</p>
<p>Hence, estimates from underpowered studies should be met with &lt;fry_squint.jpg&gt;.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2024-01-22-curse/</guid>
  <pubDate>Sat, 20 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Survival Analysis With Logistic Regression</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2024-01-20-logistic-survival/</link>
  <description><![CDATA[ 





<p><a href="https://stats.stackexchange.com/questions/636963/logistic-regression-varying-exposure-variable/637018#637018">This</a> question came up on cross validated. In the course of responding to my answer, OP asks “why can’t I adjust for exposure length in a logistic regression” which kind of got me scratching my head. Seems like it <em>could</em> be done.</p>
<p>I brought the question to twitter, and Dr.&nbsp;Ellie Murray <a href="https://twitter.com/EpiEllie/status/1747987418152612085">responded</a> reminding me that time to death and death are different outcomes and should be treated differently. A logistic regression could be done, depending on what you’re trying to model.</p>
<p>Finally, Frank Harrell <a href="https://twitter.com/f2harrell/status/1748327687066652908">responded</a> to Dr.&nbsp;Murray, with a link to a paper by Brad Efron (because of course Efron wrote something on this) which showed how this can be done quite elegantly.</p>
<p>Let’s see how we can use logistic regression for survival analysis.</p>
<section id="the-gist" class="level2">
<h2 class="anchored" data-anchor-id="the-gist">The Gist</h2>
<p>Recall that the Kaplan-Meir product limit estimator looks like</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cwidehat%7BS%7D_%7BKM%7D%20(t)%20=%20%5Cprod_%7Bi:%20t_i%20%5Cleq%20t%7D%20%5Cleft(1-%5Cdfrac%7Bd_i%7D%7Bn_i%7D%20%5Cright)%20%5C%3E.%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?d_i"> is the number of subjects who experience the outcome at time <img src="https://latex.codecogs.com/png.latex?t_i">, and <img src="https://latex.codecogs.com/png.latex?n_i"> is the number of individuals known to have survived up to time <img src="https://latex.codecogs.com/png.latex?t_i">. In essence, the product limit estimator is a product of a sequence of probabilities. What else do we use to model probabilities? Logistic regression.</p>
<p>Efron writes that the main assumption for using logistic regression to model these probabilities is that the number of events <img src="https://latex.codecogs.com/png.latex?d_i"> is binomial given <img src="https://latex.codecogs.com/png.latex?n_i"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20d_i%20%5Cmid%20n_i%20%5Csim%20%5Coperatorname%7BBinomial%7D(h_i;%20n_i)%20%5C%3E.%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?h_i"> is the discrete hazard rate (i.e.&nbsp;the probability the subject experiences the outcome during the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> interval given the subject has survived until the beginning of the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> interval).</p>
<p>The main problem is that the hazard may not be linear in the exposure time. Efron uses splines to allow <img src="https://latex.codecogs.com/png.latex?h_i"> to be flexible in exposure time, and then computes the estimated survival function using</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Ctilde%7BS%7D(t)%20=%20%20%5Cprod_%7Bi:%20t_i%20%5Cleq%20t%7D%20%5Cleft(1-h_i%5Cright)"></p>
<p>As an algorithm, the steps might look like:</p>
<ul>
<li>Structure your data so that you have number at risk, number of events, and number of censoring events as columns</li>
<li>Fit a logistic regression on the event/at risk columns (in R this is done by making <code>cbind(y, n-y)</code> the outcome in the <code>glm</code> call). Ensure the time variable is modeled flexibly (either with splines or something more exotic).</li>
<li>Predict the risk of death (i.e.&nbsp;the discrete hazard) from the logistic regression on the observed event times.</li>
<li>Take the cumulative product of one minus the discrete hazards. These are the survival function estimates.</li>
</ul>
</section>
<section id="replicating-efrons-example" class="level2">
<h2 class="anchored" data-anchor-id="replicating-efrons-example">Replicating Efron’s Example</h2>
<p>Efron motivates this approach using survival data from a Head-and-Neck cancer study conducted by the Northern California Oncology Group. I’ve extracted this data to replicate the method.</p>
<p>First, let’s show the Kaplan-Meir estimates</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(survival)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(splines)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"make_data.R"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7">sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'survival'</span>)</span>
<span id="cb1-8">sfit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survfit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(month, event) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strata</span>(arm), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>sd, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weights =</span> wt)</span>
<span id="cb1-9"></span>
<span id="cb1-10">sfit_tidy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(sfit) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(strata, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixed</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'strata(arm)='</span>)))</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14">base_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sfit_tidy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>strata, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span>strata)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Month'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Survival Probability'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Kaplan-Meier Estimated Survival Curves for Head-and-Neck Cancer Study'</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23">base_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_step</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The intial model presented expands time in the following basis functions</p>
<p><img src="https://latex.codecogs.com/png.latex?%20x_i%20=%20(1,%20t_i,%20(t_i-11)_-%5E%7B2%7D,%20(t_i-11)_-%5E%7B3%7D)%20"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?t_i"> is the the midpoint between months. This is equivalent to estimating the risk of the outcome between the start of month <img src="https://latex.codecogs.com/png.latex?i"> and the start of month <img src="https://latex.codecogs.com/png.latex?i+1">. The function <img src="https://latex.codecogs.com/png.latex?(%20z%20)_-%20=%20%5Cmin(z,%200)">. This particular expansion allows <img src="https://latex.codecogs.com/png.latex?t_i"> to vary as a cubic function before <img src="https://latex.codecogs.com/png.latex?t_i=11">, and then as a linear function thereafter.</p>
<p>After fitting the model with an interaction by arm (so that the hazards can differ by arm), we can plot the hazards readily <sup>1</sup>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logistic'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tm =</span> month <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, </span>
<span id="cb2-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">txt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(arm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>))</span>
<span id="cb2-4"></span>
<span id="cb2-5"></span>
<span id="cb2-6">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, d) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>((x), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(s, n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>s) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> arm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (tm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(tm<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(tm<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb2-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d, </span>
<span id="cb2-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>())</span>
<span id="cb2-11"></span>
<span id="cb2-12">preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se.fit=</span>T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit),</span>
<span id="cb2-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.low =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>se.fit),</span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p.high =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>se.fit)</span>
<span id="cb2-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(arm) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(arm, month) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p),</span>
<span id="cb2-22">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S.low =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.low),</span>
<span id="cb2-23">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S.high =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumprod</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p.high))</span>
<span id="cb2-24"></span>
<span id="cb2-25"></span>
<span id="cb2-26">preds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tm, p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>arm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Month'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hazard'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Arm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hazard (Risk Estimate From Logistic Regression)'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>And we can also plot the estimated survival function against the Kaplan Meier to compare.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">base_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>preds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(month, S, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>arm), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Kaplan-Meier as Compared to Logistic Regression'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2024-01-20-logistic-survival/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="final-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="final-thoughts">Final Thoughts</h2>
<p>Why would we want to parametrically model the hazard when Kaplan-Meir <em>can’t</em> misspecify the hazard? What do we gain from this? In a word: <em>efficiency</em> , at least according to Efron. Additionally, if we are willing to make assumptions about how the hazard evolves into the future (e.g.&nbsp;linearly) then we can use this approach to forecast survival beyond the last observed timepoint.</p>
<p>In his paper, Efron has some notes on computing standard errors for this estimator. Its fairly dense, and I haven’t included confidence intervals here lest I naively compute them. That’s a topic for a future blog post.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I Just can’t get the hazard’s to look the same as Figure 2. Might be an error copying over the data.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2024-01-20-logistic-survival/</guid>
  <pubDate>Sat, 20 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The Generalized Gamma Distribution For Parametric Survival</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-12-02-gen-gamma/</link>
  <description><![CDATA[ 





<p>A couple weeks back, I posted a little something something on <a href="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/">the Shifted Beta Geometric distribution</a>. That distribution is used in estimating churn in contractual settings (think Netflix, or any other service whereby you renew your service monthly). Its a nice model, but I want something more flexible.</p>
<p>I’ve been aware of the generalized gamma distribution through Jordan Nafa (who likely uses it for some very interesting decision theory applications). Briefly, if <img src="https://latex.codecogs.com/png.latex?T"> is the event time, then let <img src="https://latex.codecogs.com/png.latex?Y=%5Clog(T)">, and <img src="https://latex.codecogs.com/png.latex?Z%20=%20(Y-%5Cmu)/%5Csigma">. Then <img src="https://latex.codecogs.com/png.latex?Z"> has the following density</p>
<p><img src="https://latex.codecogs.com/png.latex?%20f(z%20;%20k)=%5Cfrac%7Bk%5E%7Bk-1%20/%202%7D%7D%7B%5CGamma(k)%7D%20%5Cexp%20%5Cleft(k%5E%7B1%20/%202%7D%20z-k%20e%5E%7Bk%5E%7B-1%20/%202%7D%20z%7D%5Cright)"></p>
<p>and <img src="https://latex.codecogs.com/png.latex?T%20=%20%5Cexp(Y)"> is distributed according to the generalized gamma distribution . Here, <img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%5Clt%20z%20%5Clt%20%5Cinfty">, <img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%5Clt%20%5Cmu%20%5Clt%20%5Cinfty">, and <img src="https://latex.codecogs.com/png.latex?%5Csigma,%20k%3E0">. For more on the generalized gamma, especially for use in survival analysis, see <em>Statistical Models and Methods for Lifetime Data</em> by Jerry Lawless (1982).</p>
<p>The nice thing about the generalized gamma is that the exponential, gamma, and weibull distributions – all common parmetric survival likelihoods – are special cases (and the log normal is a limiting distribution) <sup>1</sup>.<br>
That is especially nice for me. I’m working on some life time value modelling and it would be great if I didn’t have to try several models. Instead I can just use the generalized gamma and hope it fits well enough if the data are best approximated via one of the aforementioned survival functions.</p>
<p>In this post, I want to implement some survival analyses using the generalized gamma. Let’s get started.</p>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>We’ll need some data. Rather than simulate it myself, I’ll use the <code>veteran</code> data from <code>{survival}</code>. The survival function is roughly exponential, which is good because we know the generalized gamma can fit it in principle. There is a <code>trt</code> indicator in these data, so we’ll fit one survival curve to each strata. Shown below are the Kaplan-Meir non-parametric estimates for these data. Rather than plot the survival curve <img src="https://latex.codecogs.com/png.latex?S(t)">, I choose to plot <img src="https://latex.codecogs.com/png.latex?1-S(t)"> because my brain groks the plot easier as “the proportion of individuals in a cohort who would have experienced the outcome by time <img src="https://latex.codecogs.com/png.latex?t">”. The log of this quantity is the cumulative hazard, but I don’t know if <img src="https://latex.codecogs.com/png.latex?1-S(t)"> has a proper name. I mean … it is technically an estimate of the CDF of the event time distribution.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Non-parametric estimate of <img src="https://latex.codecogs.com/png.latex?1%20-%20S(t%7Ctrt)"> for each <code>trt</code> strata in the veteran dataset. The curves look roughly exponential meaning the generalized gamma should provide a good fit.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Stan does not have an implementation for the generalized gamma, so we’ll have to write that ourselves in the <code>functions</code> block.</p>
</section>
<section id="lpdf-_lcdf-and-_lccdf-implementations-in-stan" class="level2">
<h2 class="anchored" data-anchor-id="lpdf-_lcdf-and-_lccdf-implementations-in-stan"><code>_lpdf</code>, <code>_lcdf</code>, and <code>_lccdf</code> Implementations in Stan</h2>
<p>To do parametric survival analysis in Stan, we need three functions:</p>
<ul>
<li>The log probability density as <code>generalized_gamma_lpdf</code> so we can increment the log posterior density when we observe an outcome,</li>
<li>The log complementary CDF as <code>generalized_gamma_lccdf</code> so we can increment the log posterior density when we observe a censoring event, and</li>
<li>The log CDF as <code>generalized_gamma_lcdf</code> so we can implement the <code>_lccdf</code>.</li>
</ul>
<p>The first and third functions are implemented already by Krzysztof Sakrejda in <a href="https://github.com/sakrejda/tooling/blob/master/models/stan-lang/functions/generalized-gamma.stan.part">this repo</a>. The <code>_lpdf</code> and <code>_lcdf</code> are given, so now we just need the complementary cdf function <code>_lccdf</code>. Since Stan works on the log probability scale, we need to return the the log of the complementary cdf. Since we have the log cdf we could just do</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb1-1"></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb1-4"> </span>
<span id="cb1-5"> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - exp(generalized_gamma_lcdf(x | k, mu sigma)));</span>
<span id="cb1-6"> </span>
<span id="cb1-7">}</span></code></pre></div>
</div>
</div>
<p>Stan has a nicer function to do this called <code>log_diff_exp</code> which can be used to take differences in exponential space and then take the log of the result.</p>
<p>Additionally, we can create a random number generator for the generalized gamma distribution by noting that <code>flexsurv</code>’s implementation of the generalized gamma is equivalent to ours if we let <img src="https://latex.codecogs.com/png.latex?Q=1/%5Csqrt%7Bk%7D">. Our <code>functions</code> block then looks like</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span> {</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-6">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-7">    d = (k - .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) * log(k) - log(sigma) - lgamma(k) + (sqrt(k) * w - k * exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> / sqrt(k) * w)) - log(x);</span>
<span id="cb2-8">    </span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-10">  }</span>
<span id="cb2-11">  </span>
<span id="cb2-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_cdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-15">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-16">    d = gamma_p(k, k * exp(w / sqrt(k)));</span>
<span id="cb2-17">    </span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-19">  }</span>
<span id="cb2-20">  </span>
<span id="cb2-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lcdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w;</span>
<span id="cb2-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> d;</span>
<span id="cb2-24">    w = (log(x) - mu) / sigma;</span>
<span id="cb2-25">    d = log(gamma_p(k, k * exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> / sqrt(k) * w)));</span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d;</span>
<span id="cb2-27">  }</span>
<span id="cb2-28">  </span>
<span id="cb2-29">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> log_diff_exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, generalized_gamma_lcdf(x | k, mu, sigma));</span>
<span id="cb2-31">  }</span>
<span id="cb2-32">  </span>
<span id="cb2-33">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> generalized_gamma_rng(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> k, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma) {</span>
<span id="cb2-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> Q = <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> / sqrt(k);</span>
<span id="cb2-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> gamma = gamma_rng(Q^-<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb2-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> w = log(Q^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * gamma) / Q;</span>
<span id="cb2-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> exp(mu + sigma * w);</span>
<span id="cb2-38">  }</span>
<span id="cb2-39">  </span></code></pre></div>
</div>
</div>
</section>
<section id="fitting-the-model" class="level2">
<h2 class="anchored" data-anchor-id="fitting-the-model">Fitting The Model</h2>
<p>The model fits fairly quickly (4 chains in parallel takes &lt;2 seconds on my M1 Pro macbook pro). We can easily plot the survival curve against the Kaplan-Meir estimate to compare, however a better comparison would be to draw samples from the event time distribution and compute the ecdf of those samples. That plot is shown below, and is equivalent to a posterior predictive check in the case where there is no censoring. You can see that the KM estimates look similar to the ecdfs, which is good enough for me.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 chains, at most 10 in parallel...

Chain 1 finished in 1.9 seconds.
Chain 2 finished in 1.9 seconds.
Chain 3 finished in 1.9 seconds.
Chain 4 finished in 1.9 seconds.

All 4 chains finished successfully.
Mean chain execution time: 1.9 seconds.
Total execution time: 2.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Kaplan-Meir estimates (black) with posterior survival functions.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Kaplan-Meir estimates (black) with estimated ECDFs computed from draws of the posterior distribution. Each colored line corresponds to one sample of event times from the posterior distribution, conditional on <img src="https://latex.codecogs.com/png.latex?%5Cmu">, <img src="https://latex.codecogs.com/png.latex?%5Csigma">, and <img src="https://latex.codecogs.com/png.latex?k">.</figcaption>
<p><img src="https://dpananos.github.io/posts/2023-12-02-gen-gamma/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Left as an exercise to the reader.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2023-12-02-gen-gamma/</guid>
  <pubDate>Sat, 02 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Brain Teaser About Frequentist Statistics</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-12-01-ron/</link>
  <description><![CDATA[ 





<p>Ron Kohavi is somewhat of a prominent figure in the A/B testing community. Armed with having coauthored “Trustworthy Online Controlled Experiments”, experience at places like AirBNB and Microsoft, and what seems to be a $20/month subscription to ChatGPT, he will often post these kinds of questions on LinkedIn.</p>
<p>The post below really caught my attention (probably because of the AI generated accompanying picture, a fad everyone seems to be doing for some reason).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/linkedin.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>This should be fairly simple to reason through. Below is a plot depicting the concept of statistical power. The black curve is the sampling distribution under the null, the blue curve is the sampling distribution under the alternative implied by the minimal detectable effect (MDE). The area under the blue curve is the statsitical power (its the probability we observe a test statistic greater than the critical value).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-4">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span>F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb1-12">)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topleft'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[A])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>According to Ron, we run our experiment and observe the our (MDE) exactly. In our picture, that means we observe the mean of the sampling distribution under the alternative, so we just need to find how far out the MDE is with respect to the null distribution.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb2-4">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span>F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xs, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(xs)),</span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(xs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xs))),</span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> F</span>
<span id="cb2-12">)</span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topleft'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(H[A])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-12-01-ron/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Let’s do a little bit of math. Assuming the sampling distribution under the null is standard normal, the critical value would be <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D">. The critical value under the alternative would then be <img src="https://latex.codecogs.com/png.latex?%5Cmu_1%20+%20z_%7B1-%5Cbeta%7D%5Csigma_1">. Plugging in some numbers, this means the mean under the alternative should have a z-zcore of <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D%20-%20%5Csigma_1z_%7B1-%5Cbeta%7D">. Now, we just need to evaluate <img src="https://latex.codecogs.com/png.latex?1%20-%20%5Cmathbf%7B%5CPhi%7D(%5Cmu_0%20+%20%5Csigma_0z_%7B1-%5Calpha%7D%20-%20%5Csigma_1z_%7B1-%5Cbeta%7D)">.</p>
<p>Assume that these distributions are standardized so that <img src="https://latex.codecogs.com/png.latex?%5Cmu_0%20=%200"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma_0%20=%20%5Csigma_1=1">. This results in a p-value of</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower.tail =</span> F)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.00255513</code></pre>
</div>
</div>
<p>and I bet because I’ve only focused on one tail I should multiply by 2, so a p value of ~ 0.005, <a href="https://www.linkedin.com/posts/ronnyk_test-your-intuition-on-p-values-you-design-activity-7136272639823663104-H7u8">which seems to be correct</a>.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-12-01-ron/</guid>
  <pubDate>Fri, 01 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Estimating the Shifted Beta Geometric Model in Stan</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/</link>
  <description><![CDATA[ 





<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</details>
</div>
<p>The shifted beta geometric model (sBG) is a model that is used to forecast retention/survival of users in contractual settings (think netflix, disney plus, tinder gold, etc). The model is quite simple and posits:</p>
<ul>
<li>At the end of each period, a customer flips a coin: “heads” she cancels he contract, “tails” she renews it.</li>
<li>For each individual, the probability of a coin coming up “heads” does not change over time</li>
<li>The probabiliuty of heads varies across customers. Fader and Hardie motivate the model in their paper <em>How to Project Customer Retention</em> and even provide a way to fit the model in excel. Neat!</li>
</ul>
<p>Excel isn’t a great tool for fitting models, so Let’s write this in Stan.</p>
<section id="sbg-in-stan" class="level2">
<h2 class="anchored" data-anchor-id="sbg-in-stan">sBG in Stan</h2>
<p>The two things we need are the probability density function and the survival function. Fader and Hardie provide these in their paper. Mathematically, the probability density and survival function are</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(T=t%20%5Cmid%20%5Calpha,%20%5Cbeta)%20=%20%5Cdfrac%7BB(%5Calpha+1,%20%5Cbeta+t-1)%7D%7BB(%5Calpha,%20%5Cbeta)%7D%20%5C%3E,"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20S(T=t%20%5Cmid%20%5Calpha,%20%5Cbeta)%20=%20%5Cdfrac%7BB(%5Calpha,%20%5Cbeta+t)%7D%7BB(%5Calpha,%20%5Cbeta)%7D%20%5C%3E.%20"> Here, <img src="https://latex.codecogs.com/png.latex?B(%5Calpha,%20%5Cbeta)"> is the beta function <em>and not the beta distribution</em> (I made that mistake early). Stan operates on the log scale, and so we’ll have to take the log of these. Stan has a log beta function called <code>lbeta</code> so we’ll use that in our functions for the density and survival function.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span>{</span>
<span id="cb2-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb2-3">    </span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, beta+time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>) - lbeta(alpha, beta);</span>
<span id="cb2-5">  }</span>
<span id="cb2-6">  </span>
<span id="cb2-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb2-8">    </span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha, beta + time) - lbeta(alpha, beta);</span>
<span id="cb2-10">  }</span>
<span id="cb2-11">  </span>
<span id="cb2-12">}</span></code></pre></div>
</div>
</div>
<p>The data we need to fit the model include:</p>
<ul>
<li>How many customers were lost at each time period,</li>
<li>The times at which customers were lost, and</li>
<li>The total number of customers under observation</li>
</ul>
<p>We’ll also include an array of times at which to estimate the survival curve</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">data</span>{</span>
<span id="cb3-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fitting the model</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> N;</span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_total;</span>
<span id="cb3-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lost;</span>
<span id="cb3-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time;</span>
<span id="cb3-7">  </span>
<span id="cb3-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Making Predictions</span></span>
<span id="cb3-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> N_pred;</span>
<span id="cb3-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_pred] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> pred_times;</span>
<span id="cb3-11">}</span></code></pre></div>
</div>
</div>
<p>Later, we’ll need the last time point we observed customers who haven’t churned. This is the truncation time</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed data</span>{</span>
<span id="cb4-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> truncation_time = max(time);</span>
<span id="cb4-3">}</span></code></pre></div>
</div>
</div>
<p>All that is left to do is specify parameters, write the model block, and generate predictions for our survival curve. The likelihood computations are shown in the paper I referenced, so I’ll let you read that if you’re interested</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">parameters</span>{</span>
<span id="cb5-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; alpha;</span>
<span id="cb5-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; beta;</span>
<span id="cb5-4">}</span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">model</span>{</span>
<span id="cb5-6">  alpha ~ cauchy(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-7">  beta ~ cauchy(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-8">  </span>
<span id="cb5-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N){</span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha, beta);</span>
<span id="cb5-11">  }</span>
<span id="cb5-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> (n_total - sum(lost)) * sbg_lccdf(truncation_time| alpha, beta);</span>
<span id="cb5-13">}</span>
<span id="cb5-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb5-15">  </span>
<span id="cb5-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_pred] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> expected_surviving;</span>
<span id="cb5-17">  </span>
<span id="cb5-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N_pred){</span>
<span id="cb5-19">    expected_surviving[i] = exp(sbg_lccdf(pred_times[i]| alpha, beta));</span>
<span id="cb5-20">  }</span>
<span id="cb5-21">  </span>
<span id="cb5-22">}</span></code></pre></div>
</div>
</div>
</section>
<section id="fitting-the-model" class="level1">
<h1>Fitting the Model</h1>
<p>Fader and Hardie provide an example in their appendix for fitting the model. We’ll use that data to check our fit. Let’s take a look at that data now</p>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb6-4"></span>
<span id="cb6-5">stan_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">active =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">863</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">743</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">653</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">593</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">551</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">517</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">491</span>),</span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">126</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span> ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>),</span>
<span id="cb6-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb6-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb6-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb6-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_pred =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb6-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_times =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb6-13">)</span>
<span id="cb6-14"></span>
<span id="cb6-15"></span>
<span id="cb6-16">surv_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">active=</span>stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>active) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-17">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, active)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-18">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-19">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-20">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-21">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Customers Surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-22">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-23">              see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-24">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb6-25">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>())</span>
<span id="cb6-26"></span>
<span id="cb6-27">surv_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>Now, let’s compare with the fit</p>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sbg.stan'</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(stan_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.0 seconds.
Chain 2 finished in 0.0 seconds.
Chain 3 finished in 0.0 seconds.
Chain 4 finished in 0.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.0 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">pred_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_times=</span>stan_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred_times, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(pred_times))</span>
<span id="cb9-2">fit_predict <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(expected_surviving[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expected_surviving =</span> expected_surviving <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_qi</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(pred_times)</span>
<span id="cb9-7"></span>
<span id="cb9-8"></span>
<span id="cb9-9"></span>
<span id="cb9-10">surv_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>fit_predict, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pred_times, expected_surviving), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>fit_predict, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pred_times, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> .lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span>.upper), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>Nice, not a bad fit.</p>
<p>Model extensions seem fairly straight forward. You could maybe model alpha and beta much in the same way you do for a beta regression.</p>
</section>
<section id="regression" class="level1">
<h1>Regression</h1>
<p>In that same paper are two examples of survival curves; one for “high end” customers and another for “regular” customers. It should be fairly straight forward to write this as a regression model. If you’ve written a beta regression before, you can do this fairly readily.</p>
<p>Now, be warned: My approach is pretty hacky, but its just meant to illustrate a point. Here is the regression model in full</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">functions</span>{</span>
<span id="cb10-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lpdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb10-3">    </span>
<span id="cb10-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, beta+time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>) - lbeta(alpha, beta);</span>
<span id="cb10-5">  }</span>
<span id="cb10-6">  </span>
<span id="cb10-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sbg_lccdf(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> beta){</span>
<span id="cb10-8">    </span>
<span id="cb10-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> lbeta(alpha, beta + time) - lbeta(alpha, beta);</span>
<span id="cb10-10">  }</span>
<span id="cb10-11">  </span>
<span id="cb10-12">}</span>
<span id="cb10-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">data</span>{</span>
<span id="cb10-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Observations</span></span>
<span id="cb10-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb10-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Predictors (2 in this case)</span></span>
<span id="cb10-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p;</span>
<span id="cb10-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> time;</span>
<span id="cb10-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Design matrix</span></span>
<span id="cb10-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[n, p] X;</span>
<span id="cb10-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lost;</span>
<span id="cb10-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// These are the hacky bits.  I just don't want to work hard to </span></span>
<span id="cb10-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute these in stan, so I do them in R.</span></span>
<span id="cb10-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sum_lost;</span>
<span id="cb10-25">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_total;</span>
<span id="cb10-26">}</span>
<span id="cb10-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed data</span>{</span>
<span id="cb10-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> truncation_time = max(time);</span>
<span id="cb10-29">}</span>
<span id="cb10-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">parameters</span>{</span>
<span id="cb10-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[p] zeta;</span>
<span id="cb10-32">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[p] gamma;</span>
<span id="cb10-33">}</span>
<span id="cb10-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">transformed parameters</span>{</span>
<span id="cb10-35">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt;[n] mu = inv_logit(X * zeta);</span>
<span id="cb10-36">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt;[n] kappa = exp(X * gamma);</span>
<span id="cb10-37">  </span>
<span id="cb10-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Kind of like beta regression.</span></span>
<span id="cb10-39">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] alpha = mu./kappa;</span>
<span id="cb10-40">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] beta = (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>-mu)./kappa;</span>
<span id="cb10-41">}</span>
<span id="cb10-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">model</span>{</span>
<span id="cb10-43">  zeta ~ student_t(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb10-44">  gamma ~ student_t(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb10-45">  </span>
<span id="cb10-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb10-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (time[i] == truncation_time){</span>
<span id="cb10-48">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha[i], beta[i]);</span>
<span id="cb10-49">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> (n_total[i] - sum_lost[i]) * sbg_lccdf(truncation_time| alpha[i], beta[i]);</span>
<span id="cb10-50">    }</span>
<span id="cb10-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>{</span>
<span id="cb10-52">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">target +=</span> lost[i] * sbg_lpdf(time[i]| alpha[i], beta[i]);</span>
<span id="cb10-53">    }</span>
<span id="cb10-54">  }</span>
<span id="cb10-55">}</span>
<span id="cb10-56"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb10-57">   <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> expected_surviving;</span>
<span id="cb10-58">  </span>
<span id="cb10-59">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb10-60">    expected_surviving[i] = exp(sbg_lccdf(time[i]| alpha[i], beta[i]));</span>
<span id="cb10-61">  }</span>
<span id="cb10-62">}</span></code></pre></div>
</div>
</div>
<div class="cell" data-fig.asp="0.6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sorry for the spaghetti</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">regular_surv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">631</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">382</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">326</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">289</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">262</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">241</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">223</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">207</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">194</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>)</span>
<span id="cb11-4">highend_surv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">869</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">743</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">653</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">593</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">551</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">517</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">491</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">445</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">427</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">409</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">394</span>)</span>
<span id="cb11-5"></span>
<span id="cb11-6">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb11-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Regular =</span> regular_surv,</span>
<span id="cb11-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">High End</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> highend_surv,</span>
<span id="cb11-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(regular_surv)</span>
<span id="cb11-10">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(Regular<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">High End</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, </span>
<span id="cb11-12">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'customer'</span>, </span>
<span id="cb11-13">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(customer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(customer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high_end =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(customer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'High End'</span>),</span>
<span id="cb11-17">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>surviving, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(surviving, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> surviving),</span>
<span id="cb11-18">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb11-19">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sum_lost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(lost)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-20">  ungroup <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(time))</span>
<span id="cb11-22">  </span>
<span id="cb11-23">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>high_end, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb11-24"></span>
<span id="cb11-25">stan_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(X),</span>
<span id="cb11-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(X),</span>
<span id="cb11-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X=</span>X,</span>
<span id="cb11-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_total=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n_total,</span>
<span id="cb11-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lost=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lost,</span>
<span id="cb11-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time=</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb11-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sum_lost =</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sum_lost</span>
<span id="cb11-33">)</span>
<span id="cb11-34"></span>
<span id="cb11-35">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sbg_regression.stan'</span>)</span>
<span id="cb11-36"></span>
<span id="cb11-37">chains <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>()</span>
<span id="cb11-38">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(stan_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> chains, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 chains, at most 10 in parallel...

Chain 1 finished in 0.2 seconds.
Chain 2 finished in 0.2 seconds.
Chain 3 finished in 0.2 seconds.
Chain 4 finished in 0.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 0.3 seconds.</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(expected_surviving[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  mean_qi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>customer)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>expected_surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>customer)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>expected_surviving, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>customer), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-9">  see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Customers Surviving'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-13">  see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_modern</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb13-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set1'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>Fader, Peter S., and Bruce GS Hardie. “How to project customer retention.” Journal of Interactive Marketing 21.1 (2007): 76-90.</p>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-11-02-shifted-beta-geometric/</guid>
  <pubDate>Mon, 20 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Regularization of Noisy Multinomial Counts</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-24-l1/</link>
  <description><![CDATA[ 





<p>I’m reading <a href="https://hastie.su.domains/StatLearnSparsity/"><em>Statistical Learning with Sparsity</em></a>. Its like Elements of Statistical Learning, but just for the LASSO. In chapter 3, there is this interesting example of using the LASSO to estimate rates for noisy multinomial processes. Here is the setup from the book</p>
<blockquote class="blockquote">
<p>Suppose we have a sample of <img src="https://latex.codecogs.com/png.latex?N"> counts <img src="https://latex.codecogs.com/png.latex?%5C%7B%20y_k%20%5C%7D_%7Bk-=1%7D%5EN"> from an <img src="https://latex.codecogs.com/png.latex?N">-cell multinomial distribution, and let <img src="https://latex.codecogs.com/png.latex?r_k%20=%20y_k%20/%20%5Csum_%7B%5Cell=1%7D%5EN%20y_%7B%5Cell%7D"> be the corresponding vector of proportions. For example, in large-scale web applications, these counts might represent the number of people in each country in teh YSA that visited a particular website during a given week. This vector could be sparse depending on the specifics, so there is desire to regularize toward a broader, more stable distribution <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D%20=%20%5C%7B%20u_k%20%5C%7D_%7Bk=1%7D%5EN"> (for example, the same demographic, except measured over years)</p>
</blockquote>
<p>In short, you’ve got some vector of probabilities from a multinomial process, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D">. These probabilities are noisy, and instead of regularizing them to be uniform, you want to regularize them towards some other, more stable, distribution <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D">. The result is other distribution, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bq%7D">, and you constrain yourself so that the max approximation error between <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bq%7D"> is less than some tolerance, <img src="https://latex.codecogs.com/png.latex?%5CVert%20%5Cmathbf%7Br%7D%20-%20%5Cmathbf%7Bq%7D%20%5CVert%20_%5Cinfty%20%3C%20%5Cdelta">. The authors then go on to show that minimizing the KL-divergence for discrete distributions, subject to this constraint, is equivalent to the LASSO with a poisson likelihood. Only added trick is that you use <img src="https://latex.codecogs.com/png.latex?%5Clog(%5Cmathbf%7Bu%7D)"> as an offset in the model call. For more detail, see chapter 3 of the book.</p>
<p>The authors kind of give a half hearted attempt at an application of such a procedure, so I tried to come up with one myself. In a <a href="https://dpananos.github.io/posts/2022-08-16-pca/">previous blog post</a>, we used looked at what kind of experts exist on statsexchange. We can use the data explorer I used for that post to look at two frequencies:</p>
<ul>
<li>Frequencies of total posts over a typical week in the year 2022, and</li>
<li>Frequencies of posts tagged “regularization” posts over a typical week in the year 2022.</li>
</ul>
<p>There are considerably more non-regularization posts than there are regularization posts, so while we should expect the frequencies to be similar there is probably some noise. Let’s use the query (below) to get our data and make a plot of those frequencies.</p>
<details>
<summary>
Click to see SQL Query
</summary>
<p>
</p><pre><code>select
cast(A.CreationDate as date) as creation_date,
count(distinct A.id) as num_posts,
count(distinct case when lower(TargetTagName) = 'regularization' then A.id end) as reg_posts
from Posts A
left join PostTags as B on A.Id = B.PostId
left join TagSynonyms as C on B.TagId = C.Id
where A.PostTypeId = 1 and A.CreationDate between '2022-01-01' and '2022-12-31'
group by cast(A.CreationDate as date)
order by cast(A.CreationDate as date)
</code></pre>
<p></p>
</details>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glmnet)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%+replace%</span></span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.61</span>,</span>
<span id="cb2-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span></span>
<span id="cb2-11">    )</span>
<span id="cb2-12">  )</span>
<span id="cb2-13"></span>
<span id="cb2-14"></span>
<span id="cb2-15">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'QueryResults.csv'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-16">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(</span>
<span id="cb2-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'post'</span>)),</span>
<span id="cb2-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.funs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> \(x) x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(x))</span>
<span id="cb2-19">     )</span>
<span id="cb2-20"></span>
<span id="cb2-21">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>oday <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Day, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ordered=</span>T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sunday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Monday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tuesday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Wednesday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Thursday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Friday'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saturday'</span>))</span>
<span id="cb2-22"></span>
<span id="cb2-23">d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(oday) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(oday, num_posts, reg_posts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>(</span>
<span id="cb2-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day of Week'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total Post Count'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Post Count'</span>)</span>
<span id="cb2-28">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bootstrap_options =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'striped'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-striped table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Day of Week</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Total Post Count</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Regularization Post Count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Sunday</td>
<td style="text-align: right;">1699</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="even">
<td style="text-align: left;">Monday</td>
<td style="text-align: right;">2494</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tuesday</td>
<td style="text-align: right;">2759</td>
<td style="text-align: right;">24</td>
</tr>
<tr class="even">
<td style="text-align: left;">Wednesday</td>
<td style="text-align: right;">2805</td>
<td style="text-align: right;">26</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Thursday</td>
<td style="text-align: right;">2689</td>
<td style="text-align: right;">32</td>
</tr>
<tr class="even">
<td style="text-align: left;">Friday</td>
<td style="text-align: right;">2500</td>
<td style="text-align: right;">27</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Saturday</td>
<td style="text-align: right;">1703</td>
<td style="text-align: right;">10</td>
</tr>
</tbody>
</table>


</div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">base_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-4">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) </span>
<span id="cb3-7">            </span>
<span id="cb3-8">base_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Obviously, the smaller number of posts about regularization leads to larger noise in the multinomial estimates. You can very easily see that in the plot; Monday is not special, its very likely noise.</p>
<p>So here is where we can use LASSO to reign in some of that noise. We just need to specify how discordant we want our predicted frequencies to be from the observed frequencies, and fit a LASSO model with a penalty which achieves this desired tolerance.</p>
<p>So let’s say my predictions from the LASSO are the vector <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bp%7D"> and the observed frequencies for regularization posts are <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Br%7D">. Let’s say I want the largest error between the two to be no larger than 0.05. Shown below is some code for how to do that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up the regression problem</span></span>
<span id="cb4-2">u <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>num_posts_p</span>
<span id="cb4-3">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reg_posts_p</span>
<span id="cb4-4">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Day<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb4-5">max_error <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grid of penalties to search over</span></span>
<span id="cb4-8">lambda.grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span>)</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit the model and compute the difference between the largest error and our tolerance</span></span>
<span id="cb4-11">fit_lasso <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x){</span>
<span id="cb4-12">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>x)</span>
<span id="cb4-13">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)</span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_error)</span>
<span id="cb4-15">}</span>
<span id="cb4-16"></span>
<span id="cb4-17">errors<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(lambda.grid, fit_lasso)</span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the lambda which produces error closest to 0.03</span></span>
<span id="cb4-19">lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lambda.grid[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.min</span>(errors)]</span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions under this model</span></span>
<span id="cb4-21">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>lambda)</span>
<span id="cb4-22">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s0'</span>]</span>
<span id="cb4-23"></span>
<span id="cb4-24">new_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-25">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-27">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-28">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-29">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb4-31"></span>
<span id="cb4-32">new_plot</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This might be easier to see if we follow Tufte and show small multiples. You can see as the penalty increases, the green dots (predicted) go from the blue dots (observed frequencies of regularization related posts) to the pink dots (the frequencies of all plots).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">lam <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3">all_d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(lam, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>{</span>
<span id="cb5-4">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(X, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'poisson'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda=</span>.x)</span>
<span id="cb5-5">  d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newx=</span>X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newoffset=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(u), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'response'</span>)[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s0'</span>]</span>
<span id="cb5-6">  d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> .x</span>
<span id="cb5-7">  </span>
<span id="cb5-8">  d</span>
<span id="cb5-9">})</span>
<span id="cb5-10"></span>
<span id="cb5-11">all_d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, num_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, reg_posts_p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Regularization Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(oday, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted Posts'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>percent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-17">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Day'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Post Frequency'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>lambda, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> label_both) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(</span>
<span id="cb5-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mon'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Wed'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Thu'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fri'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sat'</span>)</span>
<span id="cb5-21">      )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-24-l1/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Cool! Using <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bu%7D"> (here, the frequency of total posts on each day) as an offset acts as a sort of target towards which to regularize.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-09-24-l1/</guid>
  <pubDate>Sun, 24 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Right In Ways You Don’t Care About</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-11-right/</link>
  <description><![CDATA[ 





<p>I’ve typically <a href="https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/">been long on the value of data scientists</a> but I think I’m starting to lose my optimism.</p>
<p>I was fucking around in git late one night and ran into merge conflicts. The first step when you get a merge conflict is to ask yourself “jesus christ, how did I keep this job?” which reminded me on <a href="https://twitter.com/vboykis/status/1681050831850811401">this tweet</a> from Vicky Boykis. Long story short, its a screen grab from a HN comment section in which some user laments how engineering gets instant errors while things like data science see errors pass silently.</p>
<p>Tune hyperparameters on the test set? Everyone else does it.</p>
<p>Run experiments “until significance”? Have a promotion.</p>
<p>Run a pre-post? If numbers are good, yay us! It numbers are bad, did you try data dreding until they look good?</p>
<p>Data Scientists are mentioned by name in David Graeber’s <em>Bullshit Jobs</em> and it is only now that I’ve begun to work (again) that I understand why. The irony is that because errors pass silently in data work, it is often difficult to assign blame or even to determine that someone should be blamed at all. You could be terrible at your job and keep it so long as you’re terrible in the right way. It makes me wonder why I put so much effort into being right in ways people don’t seem to care about. I should get an MBA or something.</p>



 ]]></description>
  <guid>https://dpananos.github.io/posts/2023-09-11-right/</guid>
  <pubDate>Mon, 11 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Difference in Difference Estimates Can Be Inaccurate When Adjusting For Detected Pre-Treatment Differences in Randomized Experiments</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-09-03-did-in-ab/</link>
  <description><![CDATA[ 





<p>Edits:</p>
<ul>
<li><p><span class="citation" data-cites="devonbancroft1">@devonbancroft1</span> mentions that in AB testing, users are highly correlated between periods. It would be useful to examine how that correlation changes outcomes. I’ve edited the simulation to allow for drawing correlated pre and post data.</p></li>
<li><p><span class="citation" data-cites="fiftycente1">@fiftycente1</span> mentions that bias is about expectation. That’s true, I’ve edited my post to explicitly distinguish between bias and accuracy.</p></li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>I’ve run into people randomizing units to treatment and control and then looking to see if there are pre-treatment differences with a hypothesis test. If there are, I’ve heard – at Zapier and <a href="https://stats.stackexchange.com/questions/625007/ab-testing-control-was-performing-0-5-better-than-experiment-set-before-the-in/625523#625523">cross validated</a> – that a difference in difference (DiD) should be performed. After all, there are baseline differences! We need to adjust for those.</p>
<p>To be clear – using DiD to analyze randomized experiments is fine. The resulting estimate of the ATE should be unbiased assuming the experiment was run without a hitch. You don’t need to do difference in difference because prior to treatment the two groups will have the same distribution of potential outcomes. Their pre-treatment differences are 0 <em>in expectation</em>. Any detection of a difference – again, assuming the experiment was run well – is sampling variability.</p>
<p>Running DiD because we found baseline differences is a form of deciding on analysis based on the observed data, and we all know that is a statistical faux pas. But how bad could it be? Are our estimates of the treatment effect biased? Are they precise? What do we lose when we let the data decide if we should run a DiD or a t-test?</p>
</section>
<section id="simulation" class="level2">
<h2 class="anchored" data-anchor-id="simulation">Simulation</h2>
<p>To find out, let’s simulate a very simple example. Let’s assume that I run an experiment and measure units before and after. The observations on each unit are iid and have standard normal distribution in the absence of the treatment. If <img src="https://latex.codecogs.com/png.latex?A"> is a binary indicator for treatment (1 for treatment, 0 else) then the data are</p>
<p><img src="https://latex.codecogs.com/png.latex?%20y_%7Bpre%7D%20%5Csim%20%5Cmbox%7BNormal%7D%5Cleft(0,%20%5Csigma%5E2%5Cright)%20%5C%3E,%20"> <img src="https://latex.codecogs.com/png.latex?%20y_%7Bpost%7D%20%5Csim%20%5Cmbox%7BNormal%7D%5Cleft(%5Ctau%20%5Ccdot%20A,%20%5Csigma%5E2%20%5Cright)%20%5C%3E.%20"></p>
<p>We will allow for the pre and post observations to be correlated with correlation <img src="https://latex.codecogs.com/png.latex?%5Crho">.</p>
<p>I’ll run 5, 000 simulations of a simple randomized experiment. Each time, I’ll sample <img src="https://latex.codecogs.com/png.latex?N"> units in each arm, enough to detect a treatment effect from a t-test with 80% power. I’ll then run a t-test via OLS and a DiD. I’ll record the pre-treatment difference in each group and if it was statistically significant at the 5% level. I’m also going to carry around the estimates from an ANCOVA since this seems to be the recommended approach for when we have pre-treatment information that is correlated with the outcome. For these simulations, I’ll set <img src="https://latex.codecogs.com/png.latex?%5Ctau=1"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma=1"> which means I need <img src="https://latex.codecogs.com/png.latex?N=17"> users per arm to achieve 80% power.</p>
<p>We’ll plot some treatment effect estimates and see what is happening when we choose to do DiD when the data suggest we do. Now importantly, I’m making very strong assumptions about the experiment being run. In particular, I’m making assumptions that all went well, there is no funny business with timing or randomization, etc. In terms of a medical trial, I got 34 people to all stand in a line, randomly gave each placebo or drug, watched them all take it at the same time, and recorded outcomes. The purpose of these simulation and blog post is to investigate statistical properties and not to wring about whatabouts.</p>
<p>In the code cell below is the code to run these simulations</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">simulate_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ...){</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  </span>
<span id="cb1-4">  Sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(sigma, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rho, rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(sigma, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-5">  </span>
<span id="cb1-6">  A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N_per_arm)</span>
<span id="cb1-7">  Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tau<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>N_per_arm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> Sigma)</span>
<span id="cb1-8">  </span>
<span id="cb1-9">  y_pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Y[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-10">  y_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Y[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb1-11">  </span>
<span id="cb1-12">  pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(A), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>y_pre, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt=</span>A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-13">  post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(A), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>y_post, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trt=</span>A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(pre, post)</span>
<span id="cb1-16">      </span>
<span id="cb1-17">}</span>
<span id="cb1-18"></span>
<span id="cb1-19">do_analysis <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...){</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_data</span>(...)</span>
<span id="cb1-22">  </span>
<span id="cb1-23">  dwide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-24">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">period =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'post'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pre'</span>))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-25">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id_cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(i, trt), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> period, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> y)</span>
<span id="cb1-26">  </span>
<span id="cb1-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DiD </span></span>
<span id="cb1-28">  did <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> trt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>period, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>d)</span>
<span id="cb1-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># t-test, only on post data</span></span>
<span id="cb1-30">  tt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb1-31">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Ancova</span></span>
<span id="cb1-32">  ancova <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(post <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pre <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>dwide)</span>
<span id="cb1-33">  </span>
<span id="cb1-34">  tt_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(tt)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt'</span>]</span>
<span id="cb1-35">  did_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(did)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt:period'</span>]</span>
<span id="cb1-36">  ancova_ate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(ancova)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt'</span>]</span>
<span id="cb1-37">  </span>
<span id="cb1-38">  pre_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>trt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-39">  </span>
<span id="cb1-40">  pre_period_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(pre_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>estimate)</span>
<span id="cb1-41">  detected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(pre_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre-Period Difference'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No Pre-Period Difference'</span>)</span>
<span id="cb1-42">  </span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-44">    tt_ate, </span>
<span id="cb1-45">    did_ate, </span>
<span id="cb1-46">    ancova_ate,</span>
<span id="cb1-47">    pre_period_diff, </span>
<span id="cb1-48">    detected</span>
<span id="cb1-49">  )</span>
<span id="cb1-50">}</span>
<span id="cb1-51"></span>
<span id="cb1-52"></span>
<span id="cb1-53">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="case-1-uncorrelated-pre-and-post-observations" class="level2">
<h2 class="anchored" data-anchor-id="case-1-uncorrelated-pre-and-post-observations">Case 1: Uncorrelated Pre and Post Observations</h2>
<p>Shown below are the ATEs from each analysis when the pre and post are uncorrelated. Nothing too surprising here, the ATEs are unbiased (the histograms are centered at <img src="https://latex.codecogs.com/png.latex?%5Ctau=1">). It seems that the t-test has lower sampling variance/higher precision, which means lower MSE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tt_ate, did_ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-3">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb2-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test ATE'</span>,</span>
<span id="cb2-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD ATE'</span></span>
<span id="cb2-7">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'histogram'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Let’s now plot the ATEs for each method against the pre-period differences. Because all observations are assumed independent, I’m going to expect that the ATEs for the t-test are uncorrelated with the pre-period difference. However, because the DiD uses pre-period information, I’m going to expect a correlation (I just don’t know how big).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb3-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb3-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb3-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb3-8">    )</span>
<span id="cb3-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb3-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"></span>
<span id="cb3-18">plot </span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Great, this makes sense. The ATE is for the t-test is uncorrelated with the pre-period difference, as expected. The ATE DiD is correlated with the pre-period difference, and that’s likely due to regression to the mean. Now, let’s stratify by cases when the pre-period difference is (erroneously) thought to be non-zero.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It isn’t unsurprising that the tails of each of these blobs is cut off. After all, the pre-period difference needs to be extreme enough to reject the null. Let’s first talk about that bottom right cell – the t test when there is a detected pre-period difference. Because there is no correlation between pre-period difference and the ATE, the ATEs are still unbiased. That’s great. What about DiD (bottom middle cell)?</p>
<p>Note that the correlation means that those blobs don’t have the same mean. In fact, if you run K-means on those blobs, you can very easily separate them and estimate the ATE and its very far from 1! Technically, this is unbiased because we have to average over each blob. So it isn’t that the estimates are biased from DiD, but they are <em>inaccurate</em>. Take a look at the MSE for each estimate (shown below). Using DiD when you detect a pre-treatment difference may be unbiased, but it has very high MSE as compared to the two other methods.</p>
<p>While those estimates are unbiased, the low precision/high MSE is a good argument against checking for pre-treatment differences and then deciding on analysis style. This would be like saying “the river is a foot deep” when in reality the river is an inch deep in most places, and a mile deep in others. While the estimates are unbiased, any one particular estimate is fairly far from the true ATE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb5-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb5-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb5-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb5-8">    )</span>
<span id="cb5-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(analysis, detected) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MSE =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((ate<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(analysis, MSE, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>detected)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge2</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="case-2-moderate-correlation-between-pre-and-post" class="level2">
<h2 class="anchored" data-anchor-id="case-2-moderate-correlation-between-pre-and-post">Case 2: Moderate Correlation Between Pre and Post</h2>
<p>Let’s now let pre and post correlation be non-zero, but still moderate in size. We’ll let <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.45"> which is still much smaller than most correlation coefficients I’ve seen in real AB tests at Zapier.</p>
<p>Making the same plot as we did before, we see that DiD still suffers from poor accuracy as measured by MSE, bow now the T-test is starting to demonstrate some positive correlation between pre-period difference and ATE. Its worth mentioning again that we would not really do anything different with the information that there was a pre-period difference when using the t-test. The estimate of the ATE would still be unbiased and have low MSE.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span>
<span id="cb6-2"></span>
<span id="cb6-3">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb6-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb6-8">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb6-9">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb6-10">    )</span>
<span id="cb6-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray 45'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb6-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="case-3-strong-correlation-between-pre-and-post" class="level2">
<h2 class="anchored" data-anchor-id="case-3-strong-correlation-between-pre-and-post">Case 3: Strong Correlation Between Pre and Post</h2>
<p>In AB testing, it isn’t uncommon to see <img src="https://latex.codecogs.com/png.latex?%5Crho%3E0.9"> between pre and post outcomes. When we run experiments and seek to have an effect on existing user’s monthly payments, many users won’t change at all meaning they are typically paying the same amount this month as they were last. That results in very high <img src="https://latex.codecogs.com/png.latex?%5Crho">.</p>
<p>Let’s rerun the simulation, but this time specify that pre and post have a correlation of 0.95.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do_analysis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_per_arm=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tau=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4">myblue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tt_ate, did_ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>myblue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb7-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test ATE'</span>,</span>
<span id="cb7-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD ATE'</span></span>
<span id="cb7-12">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggMarginal</span>(plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'histogram'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I’m fairly surprised to see that the results almost completely switch. First, the DiD estimator becomes much more efficient (see the joint distribution of ATEs) which is cool. Second, now the estimates from DiD become unbiased <em>and</em> accurate which is a nice change. Ancova seems to do just as well as DiD in terms of precision and accuracy, which was not expected simply because I didn’t think DiD would work this well under these assumptions.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(tt_ate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ancova_ate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analysis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb8-5">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tt_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T-test'</span>,</span>
<span id="cb8-6">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'did_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DiD'</span>,</span>
<span id="cb8-7">      analysis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ancova_ate'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ancova'</span></span>
<span id="cb8-8">    )</span>
<span id="cb8-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(pre_period_diff, ate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>myblue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>( <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pre period difference'</span>,</span>
<span id="cb8-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ATE'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(detected <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> analysis)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-09-03-did-in-ab/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Randomization creates two artificial groups who have the same distribution of potential outcomes. There is no need to correct for baseline differences in randomized groups a la DiD, and there is certainly no need to check for baseline differences after randomizing groups.</p>
<p>However, deciding to adjust for baseline differences with DiD can result in unbiased but inaccurate estimates of the treatment effect under some circumstances. From this post, those conditions seemed to be when pre and post treatment outcomes were uncorrelated. That can happen when the outcomes are very noisy or when outcomes are homogeneous across units. While unbiased, any one particular estimate from this procedure was very far away from the true ATE, as evidenced by the larger MSE.</p>
<p>However, when outcomes are correlated between pre and post (like they can be in AB tests), then the story flips. DiD becomes very efficient, nearly as efficient as Ancova, with good accuracy and unbiased estimates.</p>
<p>Generally it seems then that using DiD for a randomized experiment is fine. In cases where the outcomes are highly correlated, you could even check for baseline differences with out much harm. But it isn’t needed, and there are circumstances where deciding to use DiD because of detected baseline differences can hurt your estimates.</p>
<p>If you want unbiasedness and low variance/high precision, the results from this post (and advice elsewhere) seems to be to stick with Ancova.</p>


</section>

 ]]></description>
  <category>AB Testing</category>
  <category>Statistics</category>
  <category>Causal Inference</category>
  <guid>https://dpananos.github.io/posts/2023-09-03-did-in-ab/</guid>
  <pubDate>Sun, 03 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Did You Do Your Homework?</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/</link>
  <description><![CDATA[ 





<p><a href="https://twitter.com/quantian1/status/1673358773178585091">This tweet</a> made its way to my corner of the Bird Site. I’m a glutton for math homework punishment so I attempted it (and failed) but do not confuse my interest as legitimizing the tweet.</p>
<p>Frankly, I think asking questions found in Wooldridge is not a good litmus test of anything aside for your memory from undergrad. But that isn’t the point of this post. The point is to reply to <a href="https://ryxcommar.com/2023/06/26/should-you-ask-data-science-job-candidates-this-tricky-math-question/">Senior Powerpoint Engineer’s (SPE for short here, or should I call them @ryxcommar) blog post</a> which came as a response to the aforementioned tweet.</p>
<p>If I can summarize the post (which you should read), SPE makes the following points:</p>
<ul>
<li>The question should not be if you should ask this tricky math question to candidates, but rather you should ask yourself if you really need to hire a data scientist or some other role like a software engineer, analytics engineer, data analyst, ML engineer, etc.</li>
</ul>
<!-- -->
<ul>
<li><p>The term “data scientist” signals some sort of advanced knowledge in applied math/stats. Many bootcamps go about teaching modelling material as if that is most of the job (it isn’t) and even then most data scientists don’t actually understand one of the most foundational models well enough to even begin answering a homework question correctly. If they aren’t toiling and they don’t understand the theory, what are they really doing?</p></li>
<li><p>Additional anecdotes about how simple heuristics beat some data scientist’s logistic regression.</p></li>
</ul>
<p>The post is paired nicely with his <a href="https://twitter.com/ryxcommar/status/1672265739527417865">thread on why 2023 is a bad year to bootcamp your way to a data science job</a>, which hits on a some of the same points.</p>
<p>In brief, I agree with SPE and we’ve all heard it before. Data science is suffering from being a bullshit job, but clearly quantitative thinking is useful in business. What should be taught if not XGBoost API’s and linear algebra theory? What are we really looking for?</p>
<section id="value-proposition" class="level2">
<h2 class="anchored" data-anchor-id="value-proposition">Value Proposition</h2>
<p>My main contention here is the value proposition of a data scientist. If my summary is a fair, then SPE’s point is that data scientists are not in the trenches working with the data, instead they “twiddle with models in Jupyter”. But even then they don’t understand those models deeply enough (as evidenced by their inability to do homework questions). If they aren’t working with data and they can’t do science, what are they doing? What is their value? You probably don’t know, so think if you need a data scientist or some other position.</p>
<p>That feels reductive. Those can’t be the only two measures of a good data scientist, but granted that we need to answer “what do you do here”. I can only speak to my (limited) experience in tech, but many of the problems facing data scientists are not purely tech or math problems, so it doesn’t make sense to value data scientists on their ability to solve just those kinds of problems. In my experience, the majority of problems data scientists face are people problems.</p>
<p>Along the lines of people problems, the value proposition of a data scientist– in my humble opinion– is to get people to think about their problems scientifically. That is a lot harder than it sounds when the people you work with have not spent 4-10 years ostensibly<sup>1</sup> doing science. But it is also more valuable than just writing dbt models and dashboarding.</p>
<p>Here is an example from my work about getting people to think scientifically. Data analysts routinely made dashboards for the A/B tests we ran prior to my ownership of experimentation protocols. Many of the top of funnel metrics we measured were measured in terms of one another (e.g.&nbsp;Signup Rate = Signups per Visitor, Activation Rate = Activations per Signup, which is the ratio of Activation per Visitor and Signups per Visitor.) etc. Fine from a business perspective.</p>
<p>When it comes to inference, I don’t need to tell you that if you measure those two metrics as I’ve written them then anything that increases signup rate is going to decrease activation rate, so its going to look like everything is a stalemate. But I did have to share that with most everyone I talked to about experimentation, data analysts included. And it wasn’t just one person or team doing it, it was nearly the entire company. Measuring the right thing (and most importantly, knowing how to explain that to people because it isn’t as easy as mentioning conditioning on a post treatment variable) is like 20% math problem and 80% people problem due to all the stakeholder management that has to go into explanation why we are now changing the metrics, and how the numbers don’t match, no we can’t keep doing it like we’ve been doing it, what the source of truth is now, and on and on and on. It seems cheesy for me to say “look how my scientific thinking has changed the company for the better” but I think this is the type of work we should be looking for and training data scientists for. This is the answer to “what do you do here”, and what data scientists should be doing instead of screwing around with ChatGPT.</p>
<p>I think SPE would call this a “job perk” – thought leadership for internal decision making. That assumes you’re in a company that thinks scientifically and you’re free to do higher level stuff. We should all be so lucky. Thought leadership isn’t a perk, <strong>it is the job. You’re leading people to think scientifically</strong>. This is the disconnect I think SPE mentions. If you buy my rant, the title data scientist can imply an advanced understanding of applied math and not be expected to answer homework questions because remembering tricks from econometrics class isn’t used regularly in thinking scientifically. Candidates and interviewers aren’t being measured for/measuring the right thing (the ability to think scientifically and convince/teach others to follow suit) and here we are talking about if remembering <img src="https://latex.codecogs.com/png.latex?E%5B%5Chat%7B%5Cbeta%7D_1%5D%20=%20%5Cfrac%7B%5Coperatorname%7BCov%7D(X,%20Y)%7D%7B%5Coperatorname%7BVar%7D(X)%7D"> is a good barometer for being a data scientist or not.</p>
</section>
<section id="we-agree" class="level2">
<h2 class="anchored" data-anchor-id="we-agree">We Agree</h2>
<p>None of this undermines SPE’s points, it isn’t like bootcamps are teaching how to think scientifically. But it isn’t news that data science is over hyped, nor is it news that fresh grads aren’t well equipped for the job, nor is it news that correct linear algebra problem sets are not a good indicator for success on the job. I can’t rebut something we all agree is true, but I can ask for solutions, next steps, jeez anything than another “zero interest rate phenomenon” joke.</p>
<p>If I could amend SPE’s blog post, it would be as follows:</p>
<blockquote class="blockquote">
<p>But I don’t think “should you ask it?” is the right question. The real question here is: “Should you be hiring a data scientist? <strong>If so, are you willing to listen to what they have to say? Are you capable of recognizing scientific ability and probing to further test it?</strong>” And the answer to that is probably not. – (<em>Emphasis mine</em>).</p>
</blockquote>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I say “ostensibly” because I’m not sure what I did was “science” as much as it was survival.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://dpananos.github.io/posts/2023-06-26-did-you-do-your-homework/</guid>
  <pubDate>Mon, 26 Jun 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A Practical A/B Testing Brain Dump</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-05-14-ab-brain-dump/</link>
  <description><![CDATA[ 





<section id="what-is-this-post" class="level2">
<h2 class="anchored" data-anchor-id="what-is-this-post">What Is This Post?</h2>
<p>Over the past year or so, I’ve helped move Zapier towards doing better experiments and more of them. I wanted to document some of this for posterity; what I did, what worked, how we know it worked, and where I might want to go in the future. This is more of a story rather than a set of instructions.</p>
<p>My hope is that there is some sort of generalizable knowledge here. I don’t want to turn this into a set of instructions, but I do think there is something to learn (even if this has been written about before. I mean, I couldn’t find anything I needed, so here I am making it). As such, its going to be a <strong>long post</strong>. I might periodically update this post from time to time so that I can just put something out there initially.</p>
</section>
<section id="what-this-post-is-not" class="level2">
<h2 class="anchored" data-anchor-id="what-this-post-is-not">What This Post Is Not</h2>
<p>This is not a list of statistical tests to run (spoiler: its all regression anyway). Nor is this a technical post about feature flagging, persisting experiences across sessions, caching, or any other technical aspects of running online experiments.</p>
</section>
<section id="what-am-i-going-to-cover" class="level2">
<h2 class="anchored" data-anchor-id="what-am-i-going-to-cover">What Am I Going To Cover</h2>
<p>Roughly, I want to go through the steps I took over the last year. Much of it was off the cuff and improvisation, but a lot of it was inspired by working with clinicians and contents of the book <strong>Trustworthy Online Controlled Experiments</strong>. Topics will include:</p>
<ul>
<li>Understanding where we are and where we came from</li>
<li>Determining the quickest way to improve the situation</li>
<li>Building credibility and trust</li>
<li>Scaling experimentation – even if it means buying rather than building</li>
<li>(Counter intuitive) signs we are moving in the right direction</li>
<li>Next Steps</li>
</ul>
<p><strong>You should know:</strong> This was not a one man effort. There are lots of people to thank for any success I’ve had. Guidance from leadership, all the people who let me touch their projects, and all the data scientists who tapped me for help or a consult.</p>
<hr>
</section>
<section id="empathy-understanding-where-we-are-and-where-we-came-from" class="level1">
<h1>Empathy: Understanding Where We Are and Where We Came From</h1>
<p>The first thing I did when I arrived at Zapier was shut up and listen. It would have been very easy for me to come in, see a few experiments, and then insist we do everything as Bayesians and use exotic methods to estimate quantities that didn’t actually matter but sounded important. There is a folk theorem I like that goes like</p>
<blockquote class="blockquote">
<p>“If you have a problem, someone smarter than you has already solved it”.</p>
</blockquote>
<p>A small corollary to that theorem is</p>
<blockquote class="blockquote">
<p>“If you have a possible solution, someone has already tried it and failed.”</p>
</blockquote>
<p>That failure is likely not because they just did it wrong. Don’t recreate stuff that doesn’t work. I set up a “listening tour” (basically a bunch of 1:1s) with anyone who was interested in talking to me or had something to say about experimentation. This was the single best thing I could have done. I learned a lot – which I will get to – but before that I want to talk about how to run these.</p>
<p>Your main job here is to empathize and be curious about what you’re hearing. Don’t solution, don’t look for a nail you can hit with your statistical hammer, just listen. I politely asked everyone if I could record the sessions so that I could come back and listen more intently later. This removed the burden of taking notes during the meeting, I could do that after. Instead, we were able to have a real connection. If you find yourself in the same position as I found myself, do the following: Shut up, listen, and empathize.</p>
<p>What did I learn? A few things:</p>
<ul>
<li><p>There was a culture of experimentation. People were running experiments and generating insights. However, the way experiments were being run was heterogeneous. There was no global process for ideating, hypothesizing, designing, implementing, analyzing, and reporting on an experiment. People were running experiments differently between teams, and in some cases were running them differently <em>within teams</em>. If the process for running experiments differs person to person, there is no consistency. That needs to be solved.</p></li>
<li><p>Experimentation was seen as a roadblock for a lot of people. It took time, engineering effort, and would often not result in a clear winner which was frustrating. Not only that, but it took data some time to actually analyze these experiments. Data was considered a bottleneck because we would have to make a JIRA ticket to analyze the data, and then once we did analyze it stakeholders just had more questions so we’d have to repeat the process.</p></li>
<li><p>Additionally, there was just no guidance on how to run experiments. I remember one conversation so viscerally because a stakeholder told me “If I wanted to run an experiment, I wouldn’t know where to start”. We needed some basic information on why we experiment, how we experiment, and even <em>when</em> to experiment. When we couldn’t run an experiment, we needed some guidance on what other forms of learning we could use and when those were appropriate.</p></li>
</ul>
<p>There were a few other pain points, but these were the biggest three in my opinion.</p>
<p>I don’t have much advice on empathizing except the following: You’re not going to solve someone’s problems with math. Do not go into these conversations looking for evidence that your sexy model is going to work. Instead, be curious, collect data, and try to see if problems you are hearing exist elsewhere. There is a whole art to this that I will not pretend to have mastered. In any case, <strong>do not go in thinking more math will save the day. It won’t</strong>.</p>
<p>After these interviews, I consolidated all my learning and presented them to other data scientists. The one thing I wish I added to my research was <em>why previous attempts to solve these problems failed</em>. There were at least two attempts to improve experimentation at Zapier and it would have been useful to get a more robust understanding of what they attempted to solve and how.</p>
<hr>
</section>
<section id="determining-the-quickest-way-to-improve-the-situation" class="level1">
<h1>Determining The Quickest Way To Improve The Situation</h1>
<p>At this point, I had a pretty good understanding of what people thought the problems with experimentation were. It was time for me to get some skin in the game and analyze a few experiments myself. After getting a few experiment reps in, the first thing I sought to introduce to improve the situation was an A/B Testing Brief Template.</p>
<p>My hope here was that this would be an evergreen place to learn about experiments being run. It includes all the information I would need to know about to help run an experiment. This includes, but is not limited to:</p>
<ul>
<li>Phase of development (are we planning, are we developing, are we running, have we finished, etc)</li>
<li>Experiment start and end dates</li>
<li>Variant names and links to Figma</li>
<li>Hypotheses, metrics, and assumptions, etc</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Here is the template brief I created. Its simple, and has a lot more than what is shown here, including some steps to estimate sample size.</figcaption>
<p><img src="https://cdn.zappy.app/a6022ad19406dfa7531506824ad4b395.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>It was a really simple document that tried to extract the most information with the least amount of pain. To my surprise, <em>people loved it</em>. I quickly saw teams adopt this template, and would even encourage other teams to use it too. This was the quickest way to improve the situation. It gave a small global process to think about what was important when planning an experiment. This helped pave the way to introducing more global processes and an eventual repository of experimentation information (more on that later maybe).</p>
<p>Of course, nothing is perfect. I was hoping teams would be able to self serve sample size requests with just a few simple steps. Some of these questions are easy to answer (like baseline performance) but others created a lot of questions. What <em>should</em> our MDE be? what <em>should</em> our significance level be? This section is rarely filled out by stakeholders and left to data scientists, which is too bad because it really should be something a stakeholder can do. I’ll talk about how this was solved later.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>Sample size instructions</figcaption>
<p><img src="https://cdn.zappy.app/e3e465a29c32f1b889d0691b12686782.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Additionally, the quality and depth of these briefs varied team to team. Some teams were very verbose, offering links and tons of details. Others would kind of slap something in there, maybe a few bullet points at the most. It isn’t my job to say what is good and what is bad, but certainly more info made it feel like the hypotheses were better researched and supported. No word yet on if more complete briefs yielded more successful experiments.</p>
<section id="an-important-side-about-frequentism-vs-bayesianism" class="level3">
<h3 class="anchored" data-anchor-id="an-important-side-about-frequentism-vs-bayesianism">An Important Side About Frequentism vs Bayesianism</h3>
<p>You may have noticed the mention of sample size and significance level, implying a Frequentist and NHST framework being adopted here. I’m well aware of the problems with this framework, so why did I allow us to keep using this approach?</p>
<ul>
<li><p>First, keep in mind that 80% of A/B testing is not about what model you use. It is more about the stuff that comes prior to hitting <code>Run</code> on your R or python script. We needed to work on that 80%, and letting people use Frequentist models at least let them be familliar with the harder parts of AB testing. Keeping that familiarity and not introducing exotic models (again, math solution to a non-math problem) helped me build trust with those data scientists instead of having me be perceived as some egg-head completely detached from business needs. I’m not saying this would be the case for everyone, but I made the decision to leave some things the same as we fixed the more important pieces. P values were one of those things.</p></li>
<li><p>Not only that, but you need to remember that you are working with people on various different stages in their journey. You had some people like <a href="https://twitter.com/statwonk">Statwonk</a>, who really knows his stuff, and you had others who hadn’t taken stats in 10 years and didn’t understand that all statistical tests are forms of regression. Bayesian stats is hard, and once we were to move past Beta-Binomial models for conversion, I would have to hold many people’s hands as they fit and interpreted their Bayesian model. That doesn’t scale very well.</p></li>
<li><p>Not only that, but I’m no longer interested in teaching statistics to people. There are plenty of resources online that are leagues better than what I could put together, so why waste my breath? If you wanna learn Bayesian stats then go read McElreath or Gelman or Kruschke or whomever. Its just not something I’m interested in doing ever again.</p></li>
</ul>
<p>That being said, there is no reason to stay Frequentist. If we feel there is a real advantage to being Bayesian, we can and have used Bayesian models. These are especially useful in revenue experiments where we statistical significance is not our concern and we should instead be using decision theory. So let’s do what we know for now and re-evaluate when all the supporting processes are working as we intend them too. Don’t be so infelxible as to think “Bayes or bust”, that isn’t helpful and lacks empathy.</p>
</section>
</section>
<section id="an-experimentation-hub" class="level1">
<h1>An Experimentation Hub</h1>
<p>The AB testing Brief was a really good move. It saw quick and wide spread adoption and helped Zapier begin to think about planning experiments in the same way by making everyone answer the same questions. This helped a lot with the variance problem.</p>
<p>There was, however, a scalability problem. While I was very keen to consult on as many A/B tests as I could, I very quickly learned that I was not a scalable solution; I could not realistically consult on experiment ideation, design, quality control, monitoring, analysis, and reporting for every experiment we would run. As soon as I got up to about 3 or 4 experiments simultaneously, I started to get really bogged down. Not only that, but I became a victim of my own success. Teams would have a good experience with an experiment I helped run and then come back to me, which lead to another good experience, and soon enough I became their go to person for experimentation. My goal was not to give myself too much work, my goal was to improve experimentation across the org and this workflow was actively working against me.</p>
<p>I’ve learned that as you become more senior, your job is less writing code and more writing documentation<sup>1</sup>. I began writing documentation on experimentation with the help of my VP. Much of the content was mine, but the idea was his and he helped me identify where and what to write about. I didn’t try to re-write textbooks, and neither should you if you’re thinking of doing the same. Instead, my goal was to capture the most salient information so that people would be able to self serve as much as possible, and when I was required to consult I could do the most important work only I could do and then dip. Examples include:</p>
<ul>
<li>Here are the criteria you need in order to experiment. Here is the decision tree for if you should experiment. It isn’t perfect and that is OK.</li>
<li>Sample size? Nope, here is a calculator and what each of the fields mean. Let me know when you’ve got a number and I will check it.</li>
<li>Need to run a test of some sort? Here is the R function. Don’t know R? Here is the python function. Don’t code all that much? Here is a link to an online calculator.</li>
<li>Here are suggested checks you should do on your experiment data.</li>
</ul>
<p>You get the jist. This worked…OK. What I found is that this “just in time” education is extremely prone to edge cases and that means I just created different problems to solve initially (which was good, that is progress).</p>
<p><sup>2</sup>: For more on this, I would recommend reading “The Staff Engineer’s Path”.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>1↩︎</p></li>
<li id="fn2"><p>1↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <guid>https://dpananos.github.io/posts/2023-05-14-ab-brain-dump/</guid>
  <pubDate>Sun, 14 May 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Choosing the Optimal MDE for Experimentation</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-03-31-optimal-mde/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Planning experiments means deciding how long to run the experiment (by doing a sample size calculation). A big factor in this decision is agreeing on a minimal detectable effect or MDE. Smaller MDEs mean longer experiments and hence fewer of them in a given window of time. Larger MDEs mean shorter experiments, but they also mean there is a chance we could fail to reject smaller effects <sup>1</sup>. Clearly, there is a sweet spot for the MDE; not so large that we are passing over interventions which would improve a given metric, but not so small that we are wasting our time collecting samples.</p>
<p>This blog post is intended to demonstrate how data scientists can empirically estimate the “optimal” MDE for experimenting teams. Here, “optimal” refers to the MDE which optimizes the long run cumulative improvement to the metric (i.e.&nbsp;the MDE which is estimated to improve the metric the most in a given window of time) under some mild and some strong assumptions. I begin by assuming teams have a model of likely effect sizes for their interventions vis a vis a Bayesian model like I have done in my past post <a href="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/">Forecasting Experimental Lift Using Hierarchical Bayesian Modelling</a>.</p>
<p>I begin with an illustration of the larger idea, at a level I hope would be appropriate for a product manager. Then, I formally describe the procedure and implement it in R, making some illustrative assumptions about a hypothetical team running experiments. Lastly, I demonstrate how various assumptions can effect the estimate of the optimal MDE and estimate a linear model for the optimal MDE as a function of the assumptions.</p>
<p>Although imperfect, I believe this approach offers a superior approach to determining the MDE for experimenting teams, and also has the benefit of being re-estimable experiment over experiment thanks to the Bayesian modelling driving the approach.</p>
</section>
<section id="big-idea" class="level2">
<h2 class="anchored" data-anchor-id="big-idea">Big Idea</h2>
<p>Let’s consider how many experiments a team can run in a year. Teams usually have some upper limit for the number of experiments because they need time to tend to their other responsibilities. Let’s assume a team can run 24 experiments in a year (~2 experiments a month on average). While the team has a maximum number of experiments they can run, the number of experiments <em>they actually run</em> will depend on how the experiments are planned. For example, if the team has on average 10,000,000 unique visitors each year, and each experiment needs 1, 500, 000 users, then the team can run 6 experiments (you can’t run half an experiment so you have to round down to the nearest number). So the number of experiments that can be run for this team is the smaller of the ratio of unique visitors per year to total sample size per experiment and 24. The key insight here is that because the MDE determines the sample size per experiment (again, larger/smaller MDEs mean smaller/larger sample sizes), then the MDE implicitly determines the number of experiments we can.</p>
<p>Each change to the product has some true effect that is unknown to us. In fact, the whole reason we run an experiment is to estimate that effect. Because the MDE determines the sample size per experiment, it also determines the probability we detect the effect. Increase the MDE, and the probability we detect a given effect decreases (because the sample size for the experiment decreases). Conversely, decreasing the MDE increases the probability we detect an effect.</p>
<p>We need to choose an MDE so that we can run lots of experiments <em>and</em> have a good chance of detecting positive effects in those experiments. The problem is that we don’t know what kinds of effects our experiments are going to have, which is why we use an MDE. The MDE basically is a stand in for what we think the effect of the change is going to be <em>at its smallest</em>. If the effect of the change is bigger than the MDE, then we have a really good chance to detect the effect.</p>
<p>However, we actually can estimate what kinds of effects our changes will produce. It isn’t worth getting into, but we can estimate a distribution of likely effect sizes, meaning we can reasonably guess what kinds of effects we are going to see in future experiments. This means that we can use this distribution of plausible future effects to simulate future experiments. These simulations can then be used to determine the MDE which strikes the balance we need. A good way to determine which MDE is best is to consider the “cumulative impact” on the metric. Think of it this way; if we run lots of experiments and they all have a reasonable chance of detecting effects then the metric we’re seeking to improve is going to change in a big way. So our goal is to find the MDE which results in the largest improvement to our metric over a given window of time in which we can experiment. This MDE which results in the largest improvement is called the “optimal MDE”.</p>
<p>Let’s formalize the optimization problem using some math.</p>
</section>
<section id="mathematical-details" class="level2">
<h2 class="anchored" data-anchor-id="mathematical-details">Mathematical Details</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?N_%7Buuid%7D"> be the number of unique subjects available for experimentation in a given time frame, let <img src="https://latex.codecogs.com/png.latex?%5Cdelta%20%5Cin%20%5Cmathbb%7BR%7D_+"> be an arbitrary MDE, and let <img src="https://latex.codecogs.com/png.latex?K"> be the maximum number of experiments for a given team. Let <img src="https://latex.codecogs.com/png.latex?n_%7Bss%7D:%20%5Cmathbb%7BR%7D_+%20%5Cto%20%5Cmathbb%7BN%7D"> be a function which maps MDEs to sample sizes for experiments. The number of experiments which can be run in a given time frame is <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D(%5Cdelta)%20=%20%5Cmin%5Cleft(K,%20%20%5Clfloor%5Cfrac%7BN_%7Buuid%7D%7D%7Bn_%7Bss%7D(%5Cdelta)%7D%20%5Crfloor%20%5Cright)">. Here, I have included an explicit dependency of <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D"> on <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> to remind us that the MDE implicitly determines the number of experiments. I’ve made the assumption that experiments can be run back to back.</p>
<p>Let <img src="https://latex.codecogs.com/png.latex?%5Ctheta_k"> be a latent effect from an intervention, and let <img src="https://latex.codecogs.com/png.latex?%5Cpsi(%5Ctheta_k;%20%5Cdelta)"> be the statistical power to detect an effect of <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> when the experiment is designed with an MDE of <img src="https://latex.codecogs.com/png.latex?%5Cdelta">. I assume that: a) All interventions are independent of one another, and the effect of one intervention is not changed by the implementation of another, b) effects of interventions are additive (on the appropriate scale), and c) effects persist through time (there is now decay of an effect once implemented).</p>
<p>The objective function we seek to optimize is the expected cumulative improvement to the metric we are opting to experiment on. We get <img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D"> draws from our population distribution of effects (because we are running that many experiments), and the expected cumulative improvement is the sum of the products of the effects and the probability we detect the effect</p>
<p><img src="https://latex.codecogs.com/png.latex?%20C(%5Cdelta)%20=%20%5Csum_%7Bk=1%7D%5E%7Bn_%7B%5Cexp%7D(%5Cdelta)%7D%20%5Ctheta_k%20%5Cpsi(%5Ctheta_k;%20%5Cdelta)%20%20"> Note here that the MDE <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> determines both the number of experiments run (<img src="https://latex.codecogs.com/png.latex?n_%7B%5Cexp%7D">) <em>and</em> the probability those experiments detect an effect. The optimal MDE is then</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cdelta_%7B%5Cmbox%7Bopt%7D%7D%20=%20%5Cunderset%7B%5Cdelta%20%5Cin%20%5Cmathbb%7BR%7D_+%7D%7B%5Carg%5Cmax%7D%20%20%5CBig%5C%7B%20C(%5Cdelta)%20%5CBig%20%5C%7D"> While the <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> are latent, this quantity can still be optimized by using draws from a Bayesian model for experimental effects. See <a href="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/">this previous post of mine</a> for an example of what I mean.</p>
<p>In the next section, I demonstrate how to estimate <img src="https://latex.codecogs.com/png.latex?%5Cdelta_%7B%5Cmbox%7Bopt%7D%7D"> using simulation. To fill in some missing information (e.g.&nbsp;the maximum number of experiments run by the team), I explicitly write out some assumptions.</p>
</section>
<section id="additional-assumptions" class="level2">
<h2 class="anchored" data-anchor-id="additional-assumptions">Additional Assumptions</h2>
<p>Imagine a team who runs experiments. I make the following assumptions about the team:</p>
<ul>
<li>The team’s entire job is running experiments. Due to resourcing constraints, they can only run a finite number experiments per year. I assume the team can run 24 experiments a year (or 2 per month on average). The team can run experiments back to back.</li>
<li>The team works in a frequentist framework, and they always run 2 tailed tests because there is a chance they could hurt the product, and they would want to know that.</li>
<li>The main causal contrast is relative risk. In industry, we call this the “lift”.</li>
<li>The outcome is a binary outcome, and the baseline rate is 8%.</li>
<li>10,000,000 unique visitors to your website per year.</li>
<li>The team generates lift fairly reliably and these lifts sustain through time. There is no decay of the effect, no interaction between experiments, nor is there any seasonality. These are blatantly false, but they simplify enough for us to get traction.</li>
<li>The population level lift distribution is log normal, with parameters <img src="https://latex.codecogs.com/png.latex?%5Cmu=%5Clog(1.01)"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma=0.1"> on the log scale. This means the team increases the metric by approximately 1% on average.</li>
<li>The team is really only interested in positive effects (lift &gt; 1) so they will not implement anything with lift &lt; 1, and if the null fails to be rejected they will stick with the status quo.</li>
<li>The same MDE is used to plan all experiments.</li>
</ul>
<p>Under these assumptions, a procedure can be devised to optimize the cumulative improvement to the metric of interest.</p>
</section>
<section id="results-from-a-simulation-experiment" class="level2">
<h2 class="anchored" data-anchor-id="results-from-a-simulation-experiment">Results from a Simulation Experiment</h2>
<p>Shown in the code cell below is simulation of the process for finding the optimal MDE under the assumptions listed above. Rather than simulate every experiment (e.g.&nbsp;by drawing random numbers and performing a statistical test), we can draw a binomial random variable with probability of success equal to the statistical power of detecting the latent lift with the indicated MDE and hence sample size.</p>
<p>The optimal lift is somewhere between 5% and 6%. Explicit optimization methods could be used find the optima, but I think for the purposes of experimentation you just want to be in the right ballpark, so a plot is more than enough.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">one_sided_power <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(real_lift, n_per_group){</span>
<span id="cb1-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only interested in the case when the estimated lift is</span></span>
<span id="cb1-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Greater than one, which corresponds to a one sided test.</span></span>
<span id="cb1-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># However, you always run 2 tailed tests, so the significance level</span></span>
<span id="cb1-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># is half of what is typically is.</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pwr.2p.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ES.h</span>(real_lift<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>baseline, baseline), </span>
<span id="cb1-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n_per_group,</span>
<span id="cb1-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>,</span>
<span id="cb1-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sig.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span></span>
<span id="cb1-10">              )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power</span>
<span id="cb1-11">}</span>
<span id="cb1-12"></span>
<span id="cb1-13">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(mde, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">baseline=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_uuids=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latent_lift =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>){</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw lifts for experiments from this distribution</span></span>
<span id="cb1-16">  lift_dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>\(n) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(n, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(latent_lift), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Given the MDE, here is how many users you need per group in each experiment.</span></span>
<span id="cb1-19">  n_per_group <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pwr.2p.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ES.h</span>(mde<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>baseline, baseline), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here is how many experiments you could run per year</span></span>
<span id="cb1-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Why the factor of 2?  Because the computation above is the szie of each group.</span></span>
<span id="cb1-23">  n_experiments_per_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(n_uuids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)))</span>
<span id="cb1-24">  </span>
<span id="cb1-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here is a grid of experiments.  Simulate </span></span>
<span id="cb1-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Running these experiments 1000 times</span></span>
<span id="cb1-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># each experiment has n_per_group users in each group</span></span>
<span id="cb1-28">  simulations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossing</span>(</span>
<span id="cb1-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, </span>
<span id="cb1-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">experiment =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_experiments_per_year,</span>
<span id="cb1-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group</span>
<span id="cb1-32">  )</span>
<span id="cb1-33">  </span>
<span id="cb1-34">  simulations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-36">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># draw a real lift for each experiment from your lift distribution</span></span>
<span id="cb1-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">real_lift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lift_dist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()),</span>
<span id="cb1-38">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the power to detect that lift given the sample size you have</span></span>
<span id="cb1-39">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual_power =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2_dbl</span>(real_lift, n_per_group, one_sided_power),</span>
<span id="cb1-40">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate detecting the lift</span></span>
<span id="cb1-41">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">detect =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.logical</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, actual_power)),</span>
<span id="cb1-42">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Did you implement the result or not?</span></span>
<span id="cb1-43">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you didn't, this is equivalent to a lift of 1</span></span>
<span id="cb1-44">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and won't change the product.</span></span>
<span id="cb1-45">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(detect, real_lift, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-46">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#finally, take the product, grouping among simulations.</span></span>
<span id="cb1-49">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prod</span>(result)) </span>
<span id="cb1-50">  </span>
<span id="cb1-51">}</span>
<span id="cb1-52"></span>
<span id="cb1-53"></span>
<span id="cb1-54">mdes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mde =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-55">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mde_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(mde)))</span>
<span id="cb1-56"></span>
<span id="cb1-57">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(mdes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mde, f, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mde_id'</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-58">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(mdes)</span>
<span id="cb1-59"></span>
<span id="cb1-60"></span>
<span id="cb1-61">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mde, lift)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean_se</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> \(x) scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(x<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> \(x) scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(x<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDE'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cumulative Improvement Over all Experiments'</span>,</span>
<span id="cb1-67">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Swing for the Fences'</span>,</span>
<span id="cb1-68">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The optimal MDE is not the expected lift the team generates'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="how-do-the-various-parts-of-the-problem-change-the-objective-function" class="level2">
<h2 class="anchored" data-anchor-id="how-do-the-various-parts-of-the-problem-change-the-objective-function">How Do The Various Parts of The Problem Change The Objective Function?</h2>
<p>Changing the baseline of the metric moves the optima, with larger MDEs being considered optimal for smaller baselines.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>As the number of unique visitors to the website increases, the optimal MDE decreases, but only slightly.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>As the expectation of the latent lift increases, the optima does not move but the expected cumulative improvement to the metric increases. This is unsurprising.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-03-31-optimal-mde/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The “M” in MDE is really misleading. A better term would be Smallest Effect Size of Interest, because we <em>can</em> detect smaller effects than the MDE, albeit with lower probability.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <guid>https://dpananos.github.io/posts/2023-03-31-optimal-mde/</guid>
  <pubDate>Fri, 31 Mar 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Causal Risk Ratios in AB Tests with One Sided Non-Compliance</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/</link>
  <description><![CDATA[ 





<p>Sometimes we run AB tests where engaging with the treatment (and hence being treated) is optional. Since assignment to treatment is random, we can use the randomization as an instrumental variable (assuming there is a strong correlation between the instrument and the treatment, and that there are no backdoor paths between randomization and the final outcome).</p>
<p>There are a few libraries to do estimate the LATE from an instrumental variable. However, none of them report a causal risk ratio, which is usually our choice of causal contrast for better or worse.</p>
<p>In this post, I’m putting together some much appreciated advice from <a href="https://twitter.com/guilhermejd1/status/1624196853947416576"><span class="citation" data-cites="guilhermejd1">@guilhermejd1</span></a> and <a href="https://stats.stackexchange.com/a/605042/111259">dimitry on cross validated</a> on how to estimate a causal risk ratio in a randomized experiment with one sided non-compliance. I’ll first demonstrate how to do this with a simulation where we will actually have potential outcomes with which to compare. Then, I’ll apply this approach to a real experiment I helped run at Zapier.</p>
<section id="simulation" class="level2">
<h2 class="anchored" data-anchor-id="simulation">Simulation</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?A"> be a binary indicator for assignment to treatment (1) or control (0). Let <img src="https://latex.codecogs.com/png.latex?d_j%5Ea"> be the potential outcome for engaging with the treatment under treatment <img src="https://latex.codecogs.com/png.latex?A=a"> for user <img src="https://latex.codecogs.com/png.latex?j">. Due to construction of the experiment, <img src="https://latex.codecogs.com/png.latex?d_j%5E0%20=%200%20%20%5Cforall%20j"> because users in control can not engage in the treatment by design. Dimitry writes</p>
<blockquote class="blockquote">
<p>“This is different than the typical experiment in labor economics, where people can take up job training somewhere else even if they are in the control group”.</p>
</blockquote>
<p>This means that we have two types of users in treatment group: <img src="https://latex.codecogs.com/png.latex?d_j%5E1%20=%201"> is a “complier” and <img src="https://latex.codecogs.com/png.latex?d_j%5E1%20=%200"> is a “never taker”. If our outcome is <img src="https://latex.codecogs.com/png.latex?y">, then LATE is the ATE for compliers and is also the ATT.</p>
<p>Let’s set up a simulation. Here are some details:</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?A"> is decided by a coinflip (i.e.&nbsp;bernoulli with probability of success 0.5)</li>
<li>There is an unmeasured confounder <img src="https://latex.codecogs.com/png.latex?w">, which is also distributed in the population via a coinflip.</li>
<li>The confounder and the treatment effect the probability of engaging with the treatment (being a complier). <img src="https://latex.codecogs.com/png.latex?P%5Cleft(d_j%5E1%20=%201%20%5Cmid%20A=1,%20w%5Cright)%20=%200.4%20-%200.2w">. Because of the one sided compliance, <img src="https://latex.codecogs.com/png.latex?P(d_j%5E0=1)%20=%200">.</li>
<li>Probability of the outcome is <img src="https://latex.codecogs.com/png.latex?P%5Cleft(%20y%5Ea_j=1%20%5Cmid%20d%5E%7Ba%7D_j,%20w%20%5Cright)%20=%200.1%20+%200.5w%20+%200.1d_j%5E%7Ba%7D">. So the instrument only effects the outcome through compliance.</li>
</ul>
<p>Let’s simuilate this in R</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-3">my_blue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()) </span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_geom_defaults</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>,   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> my_blue, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-2">N<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lots of precision</span></span>
<span id="cb2-3">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-4">w <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Potential outcomes</span></span>
<span id="cb2-7">d_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-8">d_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A)</span>
<span id="cb2-9">y_0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w)</span>
<span id="cb2-10">y_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_1)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and now the observed data via switching equation</span></span>
<span id="cb2-13">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y_0</span>
<span id="cb2-14">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d_0</span>
<span id="cb2-15">complier <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</div>
<p>From our setup, <img src="https://latex.codecogs.com/png.latex?LATE%20=%200.1">. Let’s compute that from our potential outcomes and estimate it using <img src="https://latex.codecogs.com/png.latex?A"> as an instrument.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sample_late <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_1[d_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_0[d_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb3-2">est_late <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(y, A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(d, A)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-striped" style="margin-left: auto; margin-right: auto;">
<thead>
<tr>
<th style="text-align:right;">
True LATE
</th>
<th style="text-align:right;">
Sample LATE
</th>
<th style="text-align:right;">
IV Estimate of LATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right;">
0.1
</td>
<td style="text-align:right;">
0.101
</td>
<td style="text-align:right;">
0.103
</td>
</tr>
</tbody>
</table>
<p>True LATE, sample LATE, and estimated LATE. All 3 agree to within 3 decimal places and any differences are just sampling variability.</p>
</div>
</div>
</section>
<section id="estimating-the-causal-risk-ratio" class="level2">
<h2 class="anchored" data-anchor-id="estimating-the-causal-risk-ratio">Estimating The Causal Risk Ratio</h2>
<p>In order to compute the causal risk ratio we need two quantities:</p>
<ul>
<li>An estimate of <img src="https://latex.codecogs.com/png.latex?E%5By%5E1_j%20%5Cmid%20d%5E1%5D">, and</li>
<li>An estimate of <img src="https://latex.codecogs.com/png.latex?E%5By%5E0_j%20%5Cmid%20d%5E1%5D">.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?E%5By%5E1_j%20%5Cmid%20d%5E1%5D"> is easy to estimate; just compute the average outcome of those users in treatment who engaged with the treatment. Now because <img src="https://latex.codecogs.com/png.latex?LATE%20=%20E%5By%5E1_j%20%5Cmid%20d%5E1%5D%20-%20E%5By%5E0_j%20%5Cmid%20d%5E1%5D">, the second estimate we need is obtained from some algebra.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estimate from the data</span></span>
<span id="cb4-2">E_y1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y[d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb4-3">E_y0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> E_y1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> est_late <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use the estimate, not the truth</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">E_y1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>E_y0</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.389267</code></pre>
</div>
</div>
<p>Let’s compare this to the true estimate of the causal risk ratio using potential outcomes</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_1[complier])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y_0[complier])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.381259</code></pre>
</div>
</div>
<p>Which is pretty damn close.</p>
</section>
<section id="a-real-example" class="level1">
<h1>A Real Example</h1>
<p>We ran an experiment where users could optionally watch a video. The video was intended to drive some other metric <img src="https://latex.codecogs.com/png.latex?y">. Here are the results from the experiment.</p>
<div class="cell">
<div class="cell-output-display">
<div id="zvewtafbqe" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#zvewtafbqe .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zvewtafbqe .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zvewtafbqe .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zvewtafbqe .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zvewtafbqe .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zvewtafbqe .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zvewtafbqe .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zvewtafbqe .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zvewtafbqe .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zvewtafbqe .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zvewtafbqe .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zvewtafbqe .gt_from_md > :first-child {
  margin-top: 0;
}

#zvewtafbqe .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zvewtafbqe .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zvewtafbqe .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zvewtafbqe .gt_row_group_first td {
  border-top-width: 2px;
}

#zvewtafbqe .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zvewtafbqe .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zvewtafbqe .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zvewtafbqe .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zvewtafbqe .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zvewtafbqe .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zvewtafbqe .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zvewtafbqe .gt_left {
  text-align: left;
}

#zvewtafbqe .gt_center {
  text-align: center;
}

#zvewtafbqe .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zvewtafbqe .gt_font_normal {
  font-weight: normal;
}

#zvewtafbqe .gt_font_bold {
  font-weight: bold;
}

#zvewtafbqe .gt_font_italic {
  font-style: italic;
}

#zvewtafbqe .gt_super {
  font-size: 65%;
}

#zvewtafbqe .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#zvewtafbqe .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zvewtafbqe .gt_indent_1 {
  text-indent: 5px;
}

#zvewtafbqe .gt_indent_2 {
  text-indent: 10px;
}

#zvewtafbqe .gt_indent_3 {
  text-indent: 15px;
}

#zvewtafbqe .gt_indent_4 {
  text-indent: 20px;
}

#zvewtafbqe .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th id="<strong>Characteristic</strong>" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"><strong>Characteristic</strong></th>
<th id="<strong>Overall</strong>, N = 10,119<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Overall</strong>, N = 10,119<sup>1</sup></th>
<th id="<strong>Complied</strong>, N = 219<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Complied</strong>, N = 219<sup>1</sup></th>
<th id="<strong>Never Taker</strong>, N = 9,900<sup class=&quot;gt_footnote_marks&quot;>1</sup>" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"><strong>Never Taker</strong>, N = 9,900<sup>1</sup></th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="label">Y</td>
<td class="gt_row gt_center" headers="stat_0"></td>
<td class="gt_row gt_center" headers="stat_1"></td>
<td class="gt_row gt_center" headers="stat_2"></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;0</td>
<td class="gt_row gt_center" headers="stat_0">5,932.0 (58.6%)</td>
<td class="gt_row gt_center" headers="stat_1">145.0 (66.2%)</td>
<td class="gt_row gt_center" headers="stat_2">5,787.0 (58.5%)</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;1</td>
<td class="gt_row gt_center" headers="stat_0">4,187.0 (41.4%)</td>
<td class="gt_row gt_center" headers="stat_1">74.0 (33.8%)</td>
<td class="gt_row gt_center" headers="stat_2">4,113.0 (41.5%)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">Treatment</td>
<td class="gt_row gt_center" headers="stat_0"></td>
<td class="gt_row gt_center" headers="stat_1"></td>
<td class="gt_row gt_center" headers="stat_2"></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;Control</td>
<td class="gt_row gt_center" headers="stat_0">5,083.0 (50.2%)</td>
<td class="gt_row gt_center" headers="stat_1">0.0 (0.0%)</td>
<td class="gt_row gt_center" headers="stat_2">5,083.0 (51.3%)</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="label">&nbsp;&nbsp;&nbsp;&nbsp;Treatment</td>
<td class="gt_row gt_center" headers="stat_0">5,036.0 (49.8%)</td>
<td class="gt_row gt_center" headers="stat_1">219.0 (100.0%)</td>
<td class="gt_row gt_center" headers="stat_2">4,817.0 (48.7%)</td>
</tr>
</tbody><tfoot class="gt_footnotes">
<tr class="odd">
<td colspan="4" class="gt_footnote"><sup>1</sup> n (%)</td>
</tr>
</tfoot>

</table>

</div>
</div>
</div>
<p>We can see that 74 of the 219 compliers actually had the outcome. This means we can estimate <img src="https://latex.codecogs.com/png.latex?E%5By%5E1%5Cmid%20d%5E1%5D%20%5Capprox%2074/219%20%5Capprox%2033.8%5C%25">. Using <code>ivreg</code>, the LATE is estimated to be 0.256, so the lift is estimated to be <img src="https://latex.codecogs.com/png.latex?0.338/(0.388-0.256)%20%5Capprox%202.56">. But there is still a problem.</p>
<section id="oh-shit-i-forgot-a-bound" class="level2">
<h2 class="anchored" data-anchor-id="oh-shit-i-forgot-a-bound">Oh Shit, I Forgot a Bound</h2>
<p>Note that there is no bound on the LATE because it is estimated via OLS (sure, there are realistic bounds on how big this can be, but OLS isn’t enforcing those). In particular, what if <img src="https://latex.codecogs.com/png.latex?LATE%20=%20E%5By%5E1%20%5Cmid%20d%5E1%5D">? Then the denominator of the causal risk ratio would be 0. That’s…bad.</p>
<p>More over, what if <img src="https://latex.codecogs.com/png.latex?LATE%20%5Capprox%20E%5By%5E1%20%5Cmid%20d%5E1%5D"> so that the denominator was really small? Then the causal risk ratio would basically blow up (that’s a technical term for “embiggen”).</p>
<p>The only reason I bring this up is because it happens in this example. Let’s bootstrap the estimated causal risk ratio (what we call “lift”) and look at the distribuion of bootstrap replicates.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>LMAO look at that tail! The long tail us due to the problems I’ve highlighted. In fact, we can highlight the “Oh shit zone” on a plot of the bootstraps (below in the figure below). The red line is where the tail behavior comes from; if you have a bootstrap replicate on that line, you should be saying “oh shit”.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In fact, there are some estimates from the bootstrap which yield <img src="https://latex.codecogs.com/png.latex?E%5By%5E0%5Cmid%20d%5E1%5D%3C0"> so… what was the point if this?</p>
</section>
<section id="what-was-the-point-of-this-post" class="level2">
<h2 class="anchored" data-anchor-id="what-was-the-point-of-this-post">What Was The Point Of This Post</h2>
<p>Ok, so estimating the causal risk ratio in a randomized experiment with one sided non-compliance is technically possible, but the math can get…weird. In particular, bootstrapping the standard errors (which is probably the most sensible way of estimating the standard errors unless you’re a glutton for delta method punishment) shows that we can get non-nonsensical bootstrapped estimates of the counterfacutal average outcome for compliers.</p>
<p>Honestly…I’m not sure where to go from here. Point estimates are possible but incomplete. Bootstrapping is a sanest way to get standard errors, but have no way of ensuring the estimates are bounded appropriately. All is not lost, its nice to know this sort of thing can happen. Maybe the most sensible thing to say here is “do not ask for causal risk ratios for these types of experiments” and that is worth its weight in gold.</p>


</section>
</section>

 ]]></description>
  <category>AB Tests</category>
  <category>Statistics</category>
  <category>Causal Inference</category>
  <guid>https://dpananos.github.io/posts/2023-02-11-iv-risk-ratio/</guid>
  <pubDate>Sat, 11 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Journeyman Statistics</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-12-06-journeyman/</link>
  <description><![CDATA[ 





<p>A number of people have asked me how to learn statistics. I don’t have a good answer for them. I find all books are deficient in some way: some too theoretical, others not theoretical enough. Some too focused on pen and paper calculation, others provide code that was very likely written decades ago and do not use modern packages or tidy principles (e.g they begin their analysis with <code>rm(list=ls()</code> or use <code>attach</code> and <code>detatch</code>). I can’t recommend my own path to learning statistics either, mostly because I did a Ph.D in statistics and had the benefit of a Masters in Applied Mathematics.</p>
<p>I want to write a book for people who are not statisticians but need to make use of statistics anyway. The medical residents who need to do logistic regression for a research project, the social science grad student (save econometricians, I’d say we could learn something from them but we probably know all the same things by different names) who is more interested in their research than their statistical models, the business intelligence analyst who has to to analyze a (poorly planned) A/B test and would love nothing than to improve the experiment the next time around.</p>
<p>This sequence of blog posts is going to be a sort of first go at that book. Not even an alpha or a rough draft, but rather somewhere to put some thoughts that might eventually make it into the book. This first post is about the motivation for the book, which I am tentatively calling “Journeyman Statistics”.</p>
<section id="what-is-journeyman-statistics" class="level2">
<h2 class="anchored" data-anchor-id="what-is-journeyman-statistics">What is Journeyman Statistics?</h2>
<p>A journeyperson/woman/man is</p>
<blockquote class="blockquote">
<p>“a worker, skilled in a given building trade or craft, who has successfully completed an official apprenticeship qualification. Journeymen are considered competent and authorized to work in that field as a fully qualified employee. They earn their license by education, supervised experience and examination. Although journeymen have completed a trade certificate and are allowed to work as employees, they may not yet work as self-employed master craftsmen.</p>
</blockquote>
<p>What do I mean then by “journeyman statistics” and who are “journeyman statisticians”? Borrowing heavily from the definition above, journeyman statisticians are people who are trained in some field and are currently doing statistics in service of someone or something else. Journeyman statistics are then the statistical analyses performed by these people. I don’t think its tough to pick our journeyman statisticians; they are to a first approximation those who perform statistical analysis but are not statisticians first and foremost. They are biologists, medical residents, sociologists, analysts of several varietys, etc. To them, statistics is <em>the means</em> whereas statistics are <em>the end</em> to research (perhaps “pure”) statisticians.</p>
<p>Its important to further distinguish journeyman statisticians from applied statisticians. Applied statisticians can, as Tukey once said, “play in everyone’s backyard”. They possess the necessary mathematical maturity and statistical expertise to move from field to field. A journeyman statistician, though they may be well versed in statistics, would likely stay in their own backyard (to continue the metaphor) in order to tackle problems there.</p>
<p>Of course, I don’t mean to place people in boxes. You don’t need to subscribe to my taxonomy of statisticians (in fact, outside of this book I don’t think its a particularly useful taxonomy), and I think there are edge cases which threaten the taxonomy as a whole. The taxonomy is simply a model, and this model is useful for one thing: understanding motivations for learning statistics, and designing a path through statistical literature so as to serve those motivations.</p>
</section>
<section id="why-do-we-need-a-book-on-journeyman-statistics" class="level2">
<h2 class="anchored" data-anchor-id="why-do-we-need-a-book-on-journeyman-statistics">Why Do We Need a Book on Journeyman Statistics?</h2>
<p>The taxonomy allows us to understand who journeyman statisticians are, what their intentions are, what they may lack in terms of statistical understanding, what is enough to satiate their desire to learn statistics, and what details contribute “noise” rather than “signal”. As an example, I don’t think biology grad students need to know what <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bplim%7D"> means, or any of the other topics adjacent to mathematical analysis in Casella and Berger’s <em>Statistical Inference</em>. They do need to go slightly beyond their sophmore classes which tell them they can use the t-test when <img src="https://latex.codecogs.com/png.latex?N%3E30">. Likewise, medical residents need to go beyond Martin Bland’s <em>An Introduction to Medical Statistics</em> and need to be able to confidently say “we shouldn’t do that” when their supervisors or superiors insist on a clearly flawed mode of analysis. However, they may get bogged down by the integrals in Frank Harrell’s <em>Regression Modelling Strategies</em> (as well as the sea of references to methodological papers). There are few books for people like that. I find that books are typically for sophmore students learning statistics for the first time, or applied statisticians. Journeyman statisticians need something in the middle. I hope this book is that something.</p>
</section>
<section id="what-will-this-book-contain" class="level2">
<h2 class="anchored" data-anchor-id="what-will-this-book-contain">What Will This Book Contain?</h2>
<p>Statisticians like to joke “its all regression”. There is truth in that phrase, and so this book will take the perspective that regression is the primary means of estimation. We’ll cover all the typical analyses as regression methods. This includes estimation of the mean, its just a one parameter regression. I want to get to GLM’s as quickly as possible while not getting bogged down by mathematical details, like whatever “mild regularity conditions” means. GLMs are the workhorse of applied statistics, and I see no point in leaving GLMs to later chapters. One thing that will be absent from the book is p values. The book will take an estimation approach and report only confidence intervals.</p>
<p>The book will also contain code in both python and R, though I encourage readers to use R rather than python. Python’s statistical tools have a distinct econometrics flavor.</p>
</section>
<section id="what-benefit-is-there-to-reading-this-book" class="level2">
<h2 class="anchored" data-anchor-id="what-benefit-is-there-to-reading-this-book">What Benefit is There to Reading This Book?</h2>
<p>Before discussing why you should read this book, I want to discuss what I call “The Precision-Usefulness Tradeoff”, as I anticipate I will refer to this many times. In short, the tradeoff states</p>
<blockquote class="blockquote">
<p>Perfectly precise statements are completely useless. In order to become useful, the statement must be made less precise. The less precise, the more useful.</p>
</blockquote>
<p>Again, this is a model rather than a law. As an example, consider the definition for a 95% confidence interval.</p>
<blockquote class="blockquote">
<p>A 95% confidence interval is an interval estimate which, upon repeated construction under identical and ideal conditions, contains the estimand 95% of the time.</p>
</blockquote>
<p>I can make this statement more precise by writing it down mathematically</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P%20%5Cleft(%20%5Cbar%7Bx%7D%20-%20z_%7B0.975%7D%20%5Csigma/%5Csqrt%7Bn%7D%20%5Cleq%20%5Cmu%20%5Cleq%20%5Cbar%7Bx%7D%20+%20z_%7B0.975%7D%20%5Csigma/%5Csqrt%7Bn%7D%20%5Cright)%20=%200.95%20"></p>
<p>but it loses usefulness. This doesn’t really tell me what a confidence interval is, when to use one, or how to interpret one. However, the definition I initially presented perhaps permits some pathological cases. We can make the definition more useful by removing precision further</p>
<blockquote class="blockquote">
<p>A 95% confidence interval contains parameters consistent with the data.</p>
</blockquote>
<p>Now, we have a better idea how to interpret the interval, but the 95% is opaque to us.</p>
<p>The reason I bring up this trade off is because the book is intended to give journeyman statisticians the tools required to move in Precision-Usefulness space. My hope is that when the time comes, you will be able to artfully trade precision for usefulness (e.g.&nbsp;to be pedantic when it is necessary, or to break the rules precisely because you know how and when they can be broken safely). This is the primary benefit of the book. Obviously, I can’t tell people <em>when</em> or <em>where</em> to move within that space. I will have to leave that to their best judgement.</p>
<p>The second benefit is to solve the problem we began with; to answer “how to I go about learning statistics” in a satisfactory way.</p>


</section>

 ]]></description>
  <guid>https://dpananos.github.io/posts/2022-12-06-journeyman/</guid>
  <pubDate>Sat, 31 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Way Too Many Taylor Series</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-11-25-taylor-series/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?Y(a)"> be a potential outcome for a continuous measure under treatment status <img src="https://latex.codecogs.com/png.latex?A=a">, which for the purpose of this blog post can be considered a binary treatment. When is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%20%5Cdelta%20=%20%5Cdfrac%7BE%5BY(1)%5D%7D%7BE%5BY(0)%5D%7D%20"> well approximated by <img src="https://latex.codecogs.com/png.latex?%5Cexp(%5Cdelta%5E%5Cstar)"> where</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cdelta%5E%5Cstar%20=%20E%20%5Cleft%5B%20%5Cln%20%5Cleft(%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright)%20%5Cright%5D%20=%20E%5B%5Cln(Y(1)%5D%20%20-%20E%5B%5Cln(Y(0)%5D%20%5C%3E."></p>
<p>It seems to be a <a href="https://stats.stackexchange.com/questions/163518/interpreting-test-results-on-log-transformed-data">fairly well accepted proposition</a> that the difference in means on the log scale can be interpreted as a relative change in means on the natural scale, but upon closer inspection they aren’t equivalent. Firstly, Jensen’s inequality prevents interchanging the expectation operator and the logarithm and second <img src="https://latex.codecogs.com/png.latex?E%5BX/Y%5D%20%5Cneq%20E%5BX%5D/E%5BY%5D"> since expectation is a linear operation. I think a more nuanced discussion is needed as to if and when we can interpret <img src="https://latex.codecogs.com/png.latex?%5Cexp(%5Cdelta%5E%5Cstar)"> as <img src="https://latex.codecogs.com/png.latex?%5Cdelta">.</p>
<p>To be clear, I’m sure this holds fairly readily. I don’t want to overstate the importance of this blog post, but I don’t want to understate it either. This question came up when considering how AB tests should measure changes in continuous metrics, like revenue. Log-transforming revenue to reign in tails is common advice – and I think that’s fine, especially when it makes the sampling distribution of the sample mean more normal looking. Additionally, talking about changes in a relative sense (i.e.&nbsp;“lift” in the metric) is something that comes natural to a lot of companies. But if we’re going to use <img src="https://latex.codecogs.com/png.latex?%5Cdelta%5E%5Cstar"> as the metric for our experiment, then I personally would like to understand under what conditions this is a good approximation. What assumptions am I implicitly making? I don’t think curiosity in that sense is a bad thing, or a waste of time.</p>
</section>
<section id="taylor-series-for-random-variables" class="level2">
<h2 class="anchored" data-anchor-id="taylor-series-for-random-variables">Taylor Series for Random Variables</h2>
<p>Before getting into the meat of the blog post, it might be worthwhile to revisit Taylor series for random variables (which we will make heavy use of in this post). Recall that a Taylor series for a continuously differentiable function <img src="https://latex.codecogs.com/png.latex?f"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20f(x)%20=%20%5Csum_%7Bk=0%7D%5E%7B%5Cinfty%7D%20%5Cdfrac%7Bf%5E%7B(k)%7D(x_0)%7D%7Bk!%7D%20(x%20-%20x_0)%5Ek%20%5C%3E,%20%20%5Cquad%20%5Cmid%20x%20-%20x_0%20%5Cmid%20%5Clt%20d"></p>
<p>and that the error made in approximating <img src="https://latex.codecogs.com/png.latex?f"> with first <img src="https://latex.codecogs.com/png.latex?n+1"> terms of this sum, <img src="https://latex.codecogs.com/png.latex?R_n(x)">, can be bounded by</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cmid%20R_n(x)%20%5Cmid%20%5Cleq%20%5Cdfrac%7BM%7D%7B(n+1)!%7D(x%20-%20x_0)%5E%7Bn+1%7D%20%5C%3E,%20%5Cquad%20%5Cmid%20x%20-%20x_0%20%5Cmid%20%5Clt%20d%20%5C%3E."> We can also expand a function of a random variable, <img src="https://latex.codecogs.com/png.latex?X">, in a Taylor series by considering the variation of <img src="https://latex.codecogs.com/png.latex?X-%5Cmu"> about <img src="https://latex.codecogs.com/png.latex?%5Cmu"></p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0Af(X)%20&amp;=%20f((X-%5Cmu)%20+%20%5Cmu)%20%5C%3E,%20%5C%5C%0A%20%20%20%20%20&amp;=%20f(%5Cmu)%20+%20f%5E%7B%5Cprime%7D(%5Cmu)(X-%5Cmu)%20+%20%5Cdfrac%7Bf%5E%7B%5Cprime%5Cprime%7D(%5Cmu)%7D%7B2%7D(X-%5Cmu)%5E2%20+%20%5Cmathcal%7BO%7D%5Cleft(%20(X-%5Cmu)%5E3%20%5Cright)%20%5C%3E.%0A%5Cend%7Balign%7D">
<p>From here, we can take expectations and leverage the linearity of <img src="https://latex.codecogs.com/png.latex?E"> to get a nice second order approximation of <img src="https://latex.codecogs.com/png.latex?E(f(X))"></p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0AE%5Bf(X)%5D%20&amp;%5Capprox%20%20E%5Bf(%5Cmu)%5D%20+%20f%5E%7B%5Cprime%7D(%5Cmu)E%5B(X-%5Cmu)%5D%20+%20%5Cdfrac%7Bf%5E%7B%5Cprime%5Cprime%7D(%5Cmu)%7D%7B2%7DE%5B(X-%5Cmu)%5E2%5D%20%5C%3E,%20%5C%5C%0A%20%20%20%20%20%20%20%20&amp;%5Capprox%20%20f(%5Cmu)%20+%20%5Cdfrac%7Bf%5E%7B%5Cprime%5Cprime%7D(%5Cmu)%7D%7B2%7D%5Csigma%5E2%20%5C%3E.%0A%5Cend%7Balign%7D">
</section>
<section id="applying-taylor-series-to-our-problem" class="level2">
<h2 class="anchored" data-anchor-id="applying-taylor-series-to-our-problem">Applying Taylor Series To Our Problem</h2>
<p>The quantity <img src="https://latex.codecogs.com/png.latex?%5Cexp(%5Cdelta%5E%5Cstar)"> could be approximately be <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> under the right circumstances. Let’s expand <img src="https://latex.codecogs.com/png.latex?%5Cln(Y(1)/Y(0))"> in a Taylor series centered around <img src="https://latex.codecogs.com/png.latex?Y(1)/Y(0)%20=%201">. We’re going to be doing quite a few Taylor expansions, so I’m going to color code some of them in order to keep track of which terms belong to which expansion.</p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0AE%5Cleft%5B%5Cln%20%5Cleft(%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright)%5Cright%5D%20&amp;%5Capprox%20E%20%5Cleft%20%5B%20%5Ctextcolor%7B#1f77b4%7D%7B%5Cleft(%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20-1%20%5Cright)%20+%20%5Cdfrac%7B1%7D%7B2%7D%20%5Cleft(%20%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20-1%20%5Cright)%5E2%7D%20%5Cright%5D%20%5C%3E,%5C%5C%0A&amp;%5Capprox%20%5Ctextcolor%7B#ff7f0e%7D%7BE%20%5Cleft%5B%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright%5D%7D%20%20%5Ctextcolor%7B#1f77b4%7D%7B-%201%20+%20%5Cdfrac%7B1%7D%7B2%7D%20E%20%5Cleft%5B%5Cleft(%20%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20-1%20%5Cright)%5E2%20%20%5Cright%5D%7D%20%5C%3E.%0A%5Cend%7Balign%7D">
<p>This approximation is only valid when <img src="https://latex.codecogs.com/png.latex?0%20%5Clt%20Y(1)/Y(0)%20%5Cleq%202">, and the error in this approximation is bounded by <img src="https://latex.codecogs.com/png.latex?E%5Cleft%5B%5Cleft(%5Cfrac%7BY(1)%7D%7BY(0)%7D%20-1%5Cright)%5E3%5Cright%5D">. Note that we almost have <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> in our Taylor series expansion, but not quite. We can apply yet another Taylor series expansion on the part in orange to yield</p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0A%5Ctextcolor%7B#ff7f0e%7D%7BE%5Cleft%5B%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright%5D%20%5Capprox%20%5Cdfrac%7BE%5BY(1)%5D%7D%7BE%5BY(0)%5D%7D%20-%5Cfrac%7B%5Coperatorname%7Bcov%7D%5BY(1),%20Y(0)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E2%7D+%5Cfrac%7B%5Cmathrm%7BE%7D%5BY(1)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E3%7D%20%5Coperatorname%7Bvar%7D%5BY(0)%5D%7D%20%5C%3E.%0A%5Cend%7Balign%7D">
<p>Let’s assemble this all together now. Our approximation is now</p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0AE%5Cleft%5B%5Cln%20%5Cleft(%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright)%5Cright%5D%20%20&amp;%5Capprox%20%5Ctextcolor%7B#ff7f0e%7D%7B%20%5Cdfrac%7BE%5BY(1)%5D%7D%7BE%5BY(0)%5D%7D%20-%5Cfrac%7B%5Coperatorname%7Bcov%7D%5BY(1),%20Y(0)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E2%7D+%5Cfrac%7B%5Cmathrm%7BE%7D%5BY(1)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E3%7D%20%5Coperatorname%7Bvar%7D%5BY(0)%5D%7D%20%20%5Ctextcolor%7B#1f77b4%7D%7B-%201%20+%20%5Cdfrac%7B1%7D%7B2%7D%20E%20%5Cleft%5B%5Cleft(%20%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20-1%20%5Cright)%5E2%20%20%5Cright%5D%7D%20%5C%3E,%20%5C%5C%0A&amp;%5Capprox%20%5Cdfrac%7BE%5BY(1)%5D%7D%7BE%5BY(0)%5D%7D%20-%201%20%5Ctextcolor%7B#ff7f0e%7D%7B-%5Cfrac%7B%5Coperatorname%7Bcov%7D%5BY(1),%20Y(0)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E2%7D+%5Cfrac%7B%5Cmathrm%7BE%7D%5BY(1)%5D%7D%7B%5Cmathrm%7BE%7D%5BY(0)%5D%5E3%7D%20%5Coperatorname%7Bvar%7D%5BY(0)%5D%7D%20%5Ctextcolor%7B#1f77b4%7D%7B%20+%20%5Cdfrac%7B1%7D%7B2%7D%20E%20%5Cleft%5B%5Cleft(%20%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20-1%20%5Cright)%5E2%20%20%5Cright%5D%7D%20%5C%3E.%0A%5Cend%7Balign%7D">
<p>Finally <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> appears in our long and tedious approximation of <img src="https://latex.codecogs.com/png.latex?%5Cdelta%5E%5Cstar">. Let’s ignore the terms colored in blue and orange for a moment and come back to them later.</p>
<p>Our approximation is now</p>
<p><img src="https://latex.codecogs.com/png.latex?E%5Cleft%5B%5Cln%20%5Cleft(%20%5Cdfrac%7BY(1)%7D%7BY(0)%7D%20%5Cright)%5Cright%5D%20%5Capprox%20%5Cdfrac%7BE%5BY(1)%5D%7D%7BE%5BY(0)%5D%7D%20-%201"></p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cdelta%5E%5Cstar%20%5Capprox%20%5Cdelta%20-1%20%20"></p>
<p>Exponentiating both sides</p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0A%5Cexp(%5Cdelta%5E%5Cstar)%20&amp;%5Capprox%20%5Cexp(%5Cdelta-1)%20%5C%5C%0A&amp;%20%5Capprox%201%20+%20%5Cdelta%20-1%20+%20%20%5Cmathcal%7BO%7D((%5Cdelta-1)%5E2)%5C%5C%0A&amp;%20%5Capprox%20%5Cdelta%0A%5Cend%7Balign%7D">
</section>
<section id="we-did-itnow-what" class="level2">
<h2 class="anchored" data-anchor-id="we-did-itnow-what">We Did It…Now What?</h2>
<p>Now that we’ve written down all the necessary approximations and assumptions, let’s go back and determine under what circumstances this is a valid approximation. Can we break this approximation? Can we break it really badly?</p>
<p>Let’s leave that for the next blog post. I’m tired from doing all this algebra.</p>


</section>

 ]]></description>
  <category>Statistics</category>
  <category>AB Testing</category>
  <guid>https://dpananos.github.io/posts/2022-11-25-taylor-series/</guid>
  <pubDate>Fri, 25 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Bootstrapping in SQL</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-11-16-bootstrapping-in-sql/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Remember the <a href="https://en.wikipedia.org/wiki/Double_Down_(sandwich)">“Double Down”</a> from KFC? It was bacon and cheese sandwiched between two deep fried pieces of chicken. I’m willing to bet we all conceived of it independently (as in “LOL wouldn’t it be crazy if…”), realistically could have made it ourselves, but were smart enough not to because “sure we could but… why?”.</p>
<p>This blog post is the Double Down of Statistics.</p>
</section>
<section id="bootstrapping-in-sql.-no-really." class="level2">
<h2 class="anchored" data-anchor-id="bootstrapping-in-sql.-no-really.">Bootstrapping in SQL. No, Really.</h2>
<p>Two things which have made my stats like easier:</p>
<ul>
<li>Bootstrapping, and</li>
<li>Tidy data</li>
</ul>
<p>R’s <code>rsample::bootstraps</code> seems to do one in terms of the other. Take a look at the output of that function. We have, in essence, one bootstrapped dataset per row.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rsample )</span>
<span id="cb1-3"></span>
<span id="cb1-4">rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstraps</span>(cars)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Bootstrap sampling 
# A tibble: 25 × 2
   splits          id         
   &lt;list&gt;          &lt;chr&gt;      
 1 &lt;split [50/18]&gt; Bootstrap01
 2 &lt;split [50/16]&gt; Bootstrap02
 3 &lt;split [50/16]&gt; Bootstrap03
 4 &lt;split [50/18]&gt; Bootstrap04
 5 &lt;split [50/21]&gt; Bootstrap05
 6 &lt;split [50/19]&gt; Bootstrap06
 7 &lt;split [50/20]&gt; Bootstrap07
 8 &lt;split [50/18]&gt; Bootstrap08
 9 &lt;split [50/20]&gt; Bootstrap09
10 &lt;split [50/19]&gt; Bootstrap10
# … with 15 more rows</code></pre>
</div>
</div>
<p>In theory, I could unnest this and have one observation from each bootstrap per row, with <code>id</code> serving as an indicator to tell me to which resample the observation belongs to. Which means…I could theoretically bootstrap in SQL.</p>
<p>So, let’s do that. I’m going to use duckdb because its SQL-like and has some stats functions (whereas SQLite does not).</p>
<p>Let’s sample some pairs <img src="https://latex.codecogs.com/png.latex?(x_i,%20y_i)"> from the relationship <img src="https://latex.codecogs.com/png.latex?y_i%20=%202x_i%20+%201%20+%20%5Cvarepsilon_i">, where the <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon"> are iid draws from a standard Gaussian Let’s stick that in a dataframe along with a row number column into our database. The data are shown in Table&nbsp;1.</p>
<div class="cell">
<div id="tbl-original-data" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-original-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: My Data
</figcaption>
<div aria-describedby="tbl-original-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="table table-striped do-not-create-environment cell table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">original_rownum</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">x</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">y</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
<td style="text-align: center;">2.09</td>
<td style="text-align: center;">5.73</td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
<td style="text-align: center;">0.97</td>
<td style="text-align: center;">3.58</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
<td style="text-align: center;">0.70</td>
<td style="text-align: center;">1.37</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
<td style="text-align: center;">1.44</td>
<td style="text-align: center;">4.84</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
<td style="text-align: center;">2.07</td>
<td style="text-align: center;">4.14</td>
</tr>
<tr class="even">
<td style="text-align: center;">6</td>
<td style="text-align: center;">1.67</td>
<td style="text-align: center;">3.09</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>To bootstrap in SQL, we need to emulate what the unnested results of <code>rsample::bootstraps</code> would look like. We need rows of (<code>strap_id</code>, <code>original_data_rownum</code>, and <code>bootstrap_rownum</code>). Let’s discuss the interpretation and purpose of each column.</p>
<ul>
<li><p><code>strap_id</code> plays the part of <code>id</code> in <code>rsample::bootstraps</code>. We’re just going to group by this column and aggregate the resampled data later.</p></li>
<li><p><code>original_data_rownum</code> doesn’t really serve a purpose. It contains integers 1 through <img src="https://latex.codecogs.com/png.latex?N"> (where <img src="https://latex.codecogs.com/png.latex?N"> is our original sample size). We can do a cross join to get pairs (<code>strap_id</code>, <code>original_data_rownum</code>). This means there will be <img src="https://latex.codecogs.com/png.latex?N"> copies of <code>strap_id</code>, meaning we can get <img src="https://latex.codecogs.com/png.latex?N"> resamples of our data for each <code>strap_id</code>.</p></li>
<li><p><code>bootstrap_rownum</code> is a random integer between 1 and <img src="https://latex.codecogs.com/png.latex?N">. This column DOES serve a purpose, its basically the sampling with replacement bit for the bootstrap. Now, duckdb doesn’t have a function to sample random integers. To do this, I basically sample random numbers on the unit interval do some arithmetic to turn those into integers.</p></li>
</ul>
<p>Let’s set that up now. The hardest part really is creating a sequence of numbers, but duckdb makes that pretty easy.</p>
<section id="query-to-make-strap_id" class="level3">
<h3 class="anchored" data-anchor-id="query-to-make-strap_id">Query To Make <code>strap_id</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Set up strap_ids in a table</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OR</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">REPLACE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TABLE</span> strap_ids(strap_id <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">INTEGER</span>);</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Do 1000 bootstraps</span></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INSERT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INTO</span> strap_ids(strap_id) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">select</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">from</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1001</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span></code></pre></div>
</div>
<div class="cell">
<div id="tbl-strap-ids" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-strap-ids-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Contents of <code>strap_ids</code>. These play the role of <code>id</code> in the rsample output.
</figcaption>
<div aria-describedby="tbl-strap-ids-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="table table-striped do-not-create-environment cell table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">strap_id</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
</section>
<section id="query-to-make-original_data_rownum" class="level3">
<h3 class="anchored" data-anchor-id="query-to-make-original_data_rownum">Query To Make <code>original_data_rownum</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Set up original_data_rownum in a table</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">OR</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">REPLACE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TABLE</span> original_data_rownum(original_rownum <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">INTEGER</span>);</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- I have 2500 observations in my data</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INSERT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INTO</span> original_data_rownum(original_rownum) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">select</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">from</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span></code></pre></div>
</div>
<div class="cell">
<div id="tbl-original-data-rownum" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-original-data-rownum-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Contents of <code>original_data_rownum</code>. These play the role of <code>id</code> in the rsample output.
</figcaption>
<div aria-describedby="tbl-original-data-rownum-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="table table-striped do-not-create-environment cell table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">original_rownum</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
<p>Ok, now we have the two tables <code>strap_ids</code> and <code>original_data_rownum</code>. All we need to do now is cross join then, and do the random number magic. That’s shown below in table Table&nbsp;4.</p>
</section>
<section id="query-to-make-bootstrap_rownum" class="level3">
<h3 class="anchored" data-anchor-id="query-to-make-bootstrap_rownum">Query To Make <code>bootstrap_rownum</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">create</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">table</span> resample_template <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> </span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">select</span></span>
<span id="cb5-3">  strap_ids.strap_id,</span>
<span id="cb5-4">  original_data_rownum.original_rownum,</span>
<span id="cb5-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- I have 2500 observations in my data</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>( <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2501</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">random</span>()) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> bootstrap_rownum,</span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">from</span></span>
<span id="cb5-8">  strap_ids</span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">cross</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">join</span> </span>
<span id="cb5-10">  original_data_rownum;</span></code></pre></div>
</div>
<div class="cell">
<div id="tbl-resample-template" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-resample-template-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;4: A sample from the table <code>resampel_template</code>.
</figcaption>
<div aria-describedby="tbl-resample-template-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table class="table table-striped do-not-create-environment cell table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">strap_id</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">original_rownum</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">bootstrap_rownum</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">573</td>
<td style="text-align: center;">2216</td>
<td style="text-align: center;">4</td>
</tr>
<tr class="even">
<td style="text-align: center;">312</td>
<td style="text-align: center;">2227</td>
<td style="text-align: center;">1792</td>
</tr>
<tr class="odd">
<td style="text-align: center;">2</td>
<td style="text-align: center;">554</td>
<td style="text-align: center;">1577</td>
</tr>
<tr class="even">
<td style="text-align: center;">440</td>
<td style="text-align: center;">381</td>
<td style="text-align: center;">688</td>
</tr>
<tr class="odd">
<td style="text-align: center;">969</td>
<td style="text-align: center;">1352</td>
<td style="text-align: center;">1840</td>
</tr>
</tbody>
</table>


</div>
</div>
</figure>
</div>
</div>
</section>
</section>
<section id="actually-doing-the-bootstrapping-its-just-a-left-join" class="level2">
<h2 class="anchored" data-anchor-id="actually-doing-the-bootstrapping-its-just-a-left-join">Actually Doing The Bootstrapping: Its Just A Left Join!</h2>
<p>Now all we have to do is join the original data onto <code>resample_template</code>. The join is going to happen <code>on original_data.original_rownum = resample_template.bootstrap_rownum</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">create</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">replace</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">table</span> resampled_data <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">select</span></span>
<span id="cb6-3">  resample_template.strap_id,</span>
<span id="cb6-4">  resample_template.bootstrap_rownum,</span>
<span id="cb6-5">  original_data.x,</span>
<span id="cb6-6">  original_data.y</span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">from</span> </span>
<span id="cb6-8">  resample_template</span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">left</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">join</span> </span>
<span id="cb6-10">  original_data <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">on</span> original_data.original_rownum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resample_template.bootstrap_rownum;</span></code></pre></div>
</div>
<p>And congratulations, you have what is in essence an unnested <code>rsample::bootstraps</code> output. This happens shockingly fast in duckdb (actually, a bit faster than <code>rsample</code> does it, but that is anecdote I didn’t actually time them). The hard part now is the aggregation function. Obviously, you can’t do very complex statsitical aggregations in duckdb (or any other SQL dialect), but there are a few you can do. For example, let’s bootstrap the mean of <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y">, as well as the estimated regression coefficient.</p>
<div class="cell" data-output.var="bsr">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">select</span></span>
<span id="cb7-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bootstrap'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lpad</span>(strap_id,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb7-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SQL'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">method</span>,</span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg</span>(x) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> mean_x,</span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">avg</span>(y) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> mean_y,</span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corr</span>(y, x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stddev</span>(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stddev</span>(x) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">as</span> beta</span>
<span id="cb7-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">from</span> resampled_data</span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">group</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">by</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">order</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">by</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>;</span></code></pre></div>
</div>
<p>We can easily compare the distributions obtained via the SQL bootstrap with distributions obtained from <code>rsample::bootstrap</code></p>
</section>
<section id="but-does-it-work" class="level2">
<h2 class="anchored" data-anchor-id="but-does-it-work">But Does It Work</h2>
<p>Yes…I think. The averages for <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y"> look really good, but the SQL bootstrap tails for the regression coefficient are a little thin.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-11-16-bootstrapping-in-sql/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This is pretty silly, and probably inefficient. I’m no data engineer, I’m just a guy with a Ph.D in stats and a lot of time on the weekend. I should get a hobby or something.</p>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>https://dpananos.github.io/posts/2022-11-16-bootstrapping-in-sql/</guid>
  <pubDate>Wed, 16 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>PCA on The Tags for Cross Validated</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-08-16-pca/</link>
  <description><![CDATA[ 





<p>Julia Silge gave a <a href="https://www.rstudio.com/resources/rstudioconf-2018/understanding-pca-using-shiny-and-stack-overflow-data/">really good talk</a> in 2018 about PCA ond tags on stack overflow. She was able to interpret some of the components to infer some subgroups of users of stack overflow (front-end vs back-end, are they a Microsoft tech developer or not, are you an android dev or not, etc). These principal components were able to shed some light on what drove the variation in questions asked.</p>
<p>I love this talk, and I crib it all the time. As of late, I’ve not been doing much SQL, so I figured I would recreate Julia’s analysis using data from <a href="https://stats.stackexchange.com/">cross validated</a>. But this time, with a twist!</p>
<p>What if instead of understanding the drivers of variance in questions asked, we analyze the kinds of questions users answer. This could give us insight into the type of analysts we have on cross validated. The site is intended to be for statistical analysis, but it has a mix of prediction questions, machine learning questions, econometrics questions, and much more. Hang around there long enough and you will see some familiar faces (mine included) and you get a pretty good sense of who answers what kinds of questions.</p>
<p>I’m going to use data available from the stack exchange data explorer available <a href="https://data.stackexchange.com/">here</a>. I’ve included a code box in this post with the query I’ve used. I’ve sliced out the top 250 users as ranked by reputation and the top 100 tags as calculated by prevalence. We can use <code>{tidymodels}</code> to do a lot of the heay lifting. Let’s get to it.</p>
<details>
<summary>
Click to see SQL Query
</summary>
<p>
</p><pre><code>with QA_Tags as (
select

A.Id as QuestionId,
A.Title as QuestionTitle,
A.Body as QuestionBody,

B.Id as AnswerId,
B.OwnerUserId,
B.Body as AnswerBody,

C.iD as UserId,
C.DisplayName,
dense_rank() over (order by C.Reputation desc) as rnk,

D.TagId,
E.TagName

from
--Extract Answers from Posts Table
(select * from Posts where PostTypeId = 2)  as B
--Extract Questions from Posts Table
left join (select * from Posts where PostTypeId = 1)  as A
on  A.Id = B.ParentId
left join Users as C
on B.OwnerUserId = C.Id
left join PostTags as D
on A.Id = D.PostId
left join (select top 100 * from Tags where TagName is not NULL order by Count desc) as E
on D.TagId = E.Id)

select
rnk,
UserId, 
DisplayName, 
TagName,
count(distinct QuestionId) as N
from QA_tags
where rnk&lt;=250
group by rnk, UserId, DisplayName, TagName
order by rnk</code></pre>
<p></p>
</details>
<section id="data-modelling" class="level2">
<h2 class="anchored" data-anchor-id="data-modelling">Data &amp; Modelling</h2>
<p>Let’s Take a peek at the data, using me as an example. Below are my top 10 tags as a percent of my total answers. Looks like I like to answer questions about regression, hypothesis testing, and R most frequently. Each of the top 250 users has data similar to this in my dataset. I need to pivot it so that tags become features. Then, I can normalize the data and perform PCA.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-striped table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Name</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">Tag</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">Percent</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Regression</td>
<td style="text-align: left;">11.40%</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Hypothesis-Testing</td>
<td style="text-align: left;">6.01%</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">R</td>
<td style="text-align: left;">5.90%</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Machine-Learning</td>
<td style="text-align: left;">5.45%</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Logistic</td>
<td style="text-align: left;">4.85%</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Bayesian</td>
<td style="text-align: left;">3.58%</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Statistical-Significance</td>
<td style="text-align: left;">3.42%</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Confidence-Interval</td>
<td style="text-align: left;">2.75%</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">T-Test</td>
<td style="text-align: left;">2.64%</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Probability</td>
<td style="text-align: left;">2.31%</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Demetri Pananos</td>
<td style="text-align: left;">Generalized-Linear-Model</td>
<td style="text-align: left;">2.31%</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Checkout how dummy easy the analysis is with tidymodels. I think I spent more time cleaning the data than I did modelling it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">rec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(rnk <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> UserId <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> DisplayName <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_normalize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric_predictors</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-3">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_pca</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric_predictors</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_comp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-4">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prep</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6">prin_comps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bake</span>(rec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> d) </span>
<span id="cb2-7">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rec <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-8">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">number =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coef"</span>)</span></code></pre></div>
</div>
<p>The last two lines extract both the principal components and the weights for each tag on each component. Now. we’re ready to make some plots.</p>
</section>
<section id="principal-components" class="level2">
<h2 class="anchored" data-anchor-id="principal-components">Principal Components</h2>
<p>The results for the first 3 principal componensts are shown below. I’ve shown the 20 most extreme components for clarity.</p>
<p>The first principal compnent has tags like “Anova”, “T-Test” and “SPSS” as heavily weighted positive, while “Machine Learning”, “Mathematical Statistics” and “Probability” are all weighted heavily negative (the direction of the weights doesn’t matter, it isn’t like one direction is better or worse). To me, I read this as “Beginner” vs “Advanced” answers. Questions with the former tags are usually from users who are maybe taking a stats class for the first time and are learning about the t test or Anova. The dead give away for this is the “SPSS” tag being weighted so heavily<sup>1</sup>. Looking at more weights verifies this, with the negative weights being associated with topics like “Neural Nets”, and “Maximum Likelihod” while the positive weights have tags like “Statistical Significance” and “Interpretation”.</p>
<p>Now remember, these components do not explain variance in questions. They explain variance in the question <em>answers</em>! So the first component is really about people who choose to answer simple versus complex topics. The second principal component has a fairly straightforward interpretation. This component explains variation between users who answer classical statistical questions versus those who opt to answer machine learning type questions. Lastly, the third principal component seems to be distinguishing users who answer forecasting type questions (see tags like “Arima”, “Time Series”, “Forecasting”, and “Econometrics”) versus non forecasting type questions.</p>
<div class="cell" data-layout-row="3" data-fig.dpi="240">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-08-16-pca/index_files/figure-html/prin-comp-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-08-16-pca/index_files/figure-html/prin-comp-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-08-16-pca/index_files/figure-html/prin-comp-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I think what is more interesting is that we can plot some of the more popular users on the site using the principal components. In the first plot, I’ve scattered PC1 vs PC2. Left to right means advanced vs simple questions. It is no surpriuse to see whuber farther left and BruceET farther right. Whuber can answer most anything, and I feel like he often accepts the challenge of a complex answer, opting to comment on simpler questions. Bruce, on the other hand, will always answer a simple question very robustly. Top to bottom means machine learning vs classical stats. I’m not surprised to see Frank Harrell closer to the top, as he has appeared in many questions if not only to scold people for using accuracy as a metric. No surprise Topepo is on the top of this PC. Interestingly, I’m kind of near the origin, if not a bit right of it. Seems like I strike a good balance between ML and stats, but often opt to answer simpler questions.</p>
<p>Plotting PC1 vs PC3 shows a very predictable pattern. Users near the bottom are more forcasting types, so its no surprise that Rob Hyndman, Dimitris Rizopoulus (who does a lot of longitudinal work), and Stephan Kolassa are near the bottom. I’m near the top, I have no clue about any of that stuff to be honest.</p>
<div>

</div>
<div class="cell quarto-layout-panel" data-layout-nrow="2" data-fig.dpi="240">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: center;">
<p><img src="https://dpananos.github.io/posts/2022-08-16-pca/index_files/figure-html/prin-comp-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: center;">
<p><img src="https://dpananos.github.io/posts/2022-08-16-pca/index_files/figure-html/prin-comp-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>There appear to be at least three dimensions about which analysts on cross validated can be placed. Analysts can either opt to answer easy or difficult questions, which lean classical statistics or machine learning, with additional focus on forecasting on non-forecasting problems. That’s a fairly useful interpretation of the first three principal components!</p>
<p>It could be fun to think about how best to use this information. Now that we know these three kinds of subgroups, could we use it to recommend users questions to answer? Its been the case that <a href="https://stats.meta.stackexchange.com/questions/5325/we-have-a-very-large-widening-gap-between-questions-and-answers-how-do-we-fix">there is a large gap between questions and answers</a>, so maybe this could be useful but also maybe not.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Because once you’ve taken a few stats courses, you know bette than to use SPSS.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Machine Learning</category>
  <guid>https://dpananos.github.io/posts/2022-08-16-pca/</guid>
  <pubDate>Tue, 16 Aug 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Interim Analysis &amp; Group Sequential Designs Pt 2</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/</link>
  <description><![CDATA[ 





<p>This is part 2 of an ongoing series on group sequential designs for AB testing. Previous parts are shown below</p>
<blockquote class="blockquote">
<p><a href="https://dpananos.github.io/posts/2022-07-06-gsd/">Part 1</a></p>
</blockquote>
<p>Last time, we noted that we want our AB tests to be shorter so we could learn quicker. Peeking – testing the data before the end of the experiment – inflates the probability we make a false positive unless we choose the critical values of the tests a little more carefully. The reason this happens is because requiring that any of the cumulative test statistics be larger than 1.96 in magnitude defines a region in the space of cumulative means which has a probability density larger than 5%. One way to fix that is just to redefine the space to be smaller by requiring the cumulative test statistics to be larger in magnitude than some other value. I noted this puts the unnecessary requirement on us that the thresholds all be the same. In this blog post, we will discuss other approaches to that problem and their pros and cons.</p>
<p>In order to have that discussion, we need to understand what “alpha” (<img src="https://latex.codecogs.com/png.latex?%5Calpha">) is and how it can be “spent”. That will allow us to talk about “alpha spending functions”.</p>
<section id="preliminaries" class="level2">
<h2 class="anchored" data-anchor-id="preliminaries">Preliminaries</h2>
<p>In the last post, we looked at a <img src="https://latex.codecogs.com/png.latex?K=2"> GSD with equal sized groups. Of course, we don’t need to have equal sized groups and we can have more than two stages. Let <img src="https://latex.codecogs.com/png.latex?n_k"> be the sample size of the <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> group. Then <img src="https://latex.codecogs.com/png.latex?N%20=%20%5Csum_k%20n_k"> is the total sample size. It is sometimes more convenient to refer to the <em>information rates</em> <img src="https://latex.codecogs.com/png.latex?t_k%20=%20n_k/N">. We will do the same for consistency with other sources on GSDs.</p>
</section>
<section id="what-is-alpha-and-how-do-we-spend-it" class="level2">
<h2 class="anchored" data-anchor-id="what-is-alpha-and-how-do-we-spend-it">What is <img src="https://latex.codecogs.com/png.latex?%5Calpha">, and How Do We Spend It?</h2>
<p>The probability we reject the null, <img src="https://latex.codecogs.com/png.latex?H_0">, when it is true is called <img src="https://latex.codecogs.com/png.latex?%5Calpha">. In a classical test, we would reject <img src="https://latex.codecogs.com/png.latex?H_0"> when <img src="https://latex.codecogs.com/png.latex?%5Cvert%20Z%20%5Cvert%20%3E%20z_%7B1-%5Calpha/2%7D">, and so <img src="https://latex.codecogs.com/png.latex?P(%5Cvert%20Z%20%5Cvert%20%3E%20z_%7B1-%5Calpha/2%7D%20%5Cvert%20H_0)%20=%20%5Calpha">. Now consider a <img src="https://latex.codecogs.com/png.latex?K=4"> GSD so we can work with a concrete example. Let <img src="https://latex.codecogs.com/png.latex?Z%5E%7B(k)%7D"> be the test statistic after seeing the <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> group, and let <img src="https://latex.codecogs.com/png.latex?u_k"> be the threshold so that if <img src="https://latex.codecogs.com/png.latex?%5Cvert%20Z%5E%7B(k)%7D%20%5Cvert%20%3E%20u_k"> then we would reject the null. Then a type one error could happen when <sup>1</sup> …</p>
<p><span id="eq-rejections"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A&amp;%5Cleft(%20u_1%20%5Clt%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cright)%20%20%5Cquad%20%5Cmbox%7Bor%7D%20%5C%5C%0A&amp;%20%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Clt%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5Cright)%20%5Cquad%20%5Cmbox%7Bor%7D%20%5C%5C%0A&amp;%20%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Cgeq%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_3%20%5Clt%20%5Cvert%20Z%5E%7B(3)%7D%20%5Cvert%20%5Cright)%20%5Cquad%20%5Cmbox%7Bor%7D%20%5C%5C%0A&amp;%20%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Cgeq%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_3%20%5Cgeq%20%5Cvert%20Z%5E%7B(3)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_4%20%5Clt%20%5Cvert%20Z%5E%7B(4)%7D%20%5Cvert%20%5Cright)%0A%5Cend%7Balign%7D%0A%5Ctag%7B1%7D"></span></p>
<p>So a type one error can occur in multiple ways, but we still want the probability we make a type one error to be <img src="https://latex.codecogs.com/png.latex?%5Calpha">, which means we’re going to need to evaluate the probability of the expression above. Note that each line in (Equation&nbsp;1) are mutually exclusive, so the probability of the expression above is just the sum of the probabilities of each expression. This gives us</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Calpha%20=%20&amp;P%5Cleft(%20u_1%20%5Clt%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%20%20+%20%20%5C%5C%0A&amp;%20P%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Clt%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%20+%20%5C%5C%0A&amp;%20P%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Cgeq%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_3%20%5Clt%20%5Cvert%20Z%5E%7B(3)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%20+%20%5C%5C%0A&amp;%20P%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Cgeq%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_3%20%5Cgeq%20%5Cvert%20Z%5E%7B(3)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_4%20%5Clt%20%5Cvert%20Z%5E%7B(4)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%0A%5Cend%7Balign%7D%0A"></p>
<p>The test at each stage contributes towards the probability we make a type one error <img src="https://latex.codecogs.com/png.latex?%5Calpha">. You can think of <img src="https://latex.codecogs.com/png.latex?%5Calpha"> as a “budget”, and at each stage we have to “spend” (see where I’m going?) some of that alpha, with the added condition that we can never buy it back (meaning our <img src="https://latex.codecogs.com/png.latex?%5Calpha"> spending must be increasing). How much we decide to spend dictates what the <img src="https://latex.codecogs.com/png.latex?u_k"> are going to be.</p>
<p>But how do we decide how to spend our <img src="https://latex.codecogs.com/png.latex?%5Calpha">? If <img src="https://latex.codecogs.com/png.latex?%5Calpha"> is our budget for type one error, we need some sort of spending plan. Or perhaps a spending…function.</p>
</section>
<section id="alpha-spending-functions" class="level2">
<h2 class="anchored" data-anchor-id="alpha-spending-functions"><img src="https://latex.codecogs.com/png.latex?%5Calpha">-Spending Functions</h2>
<p>An <img src="https://latex.codecogs.com/png.latex?%5Calpha">-spending function <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(t_k)"> can be any non-decreasing function of the information rate <img src="https://latex.codecogs.com/png.latex?t_k"> such that <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(0)=0"> and <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(1)%20=%20%5Calpha">. Using this approach, we don’t need to specify the number of looks (though we may plan for <img src="https://latex.codecogs.com/png.latex?K"> of them), nor the number of observations at those looks. Only the maximum sample size needed, <img src="https://latex.codecogs.com/png.latex?N">.</p>
<p>Each time we make an analysis, we spend some of our budgeted <img src="https://latex.codecogs.com/png.latex?%5Calpha">. In our first analysis (at <img src="https://latex.codecogs.com/png.latex?t_1%20=%20n_1/N">), we spend</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P%5Cleft(%20u_1%20%5Clt%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%20=%20%5Calpha%5E%5Cstar(t_1)%20%5C%3E.%20"></p>
<p>At the second analysis, we spend</p>
<p><img src="https://latex.codecogs.com/png.latex?P%5Cleft(u_1%20%5Cgeq%20%5Cvert%20Z%5E%7B(1)%7D%20%5Cvert%20%5Cmbox%7B%20and%20%7D%20u_2%20%5Clt%20%5Cvert%20Z%5E%7B(2)%7D%20%5Cvert%20%5CBig%5Cvert%20H_0%5Cright)%20=%20%5Calpha%5E%5Cstar(t_2)%20-%20%5Calpha%5E%5Cstar(t_1)%20%5C%3E,"></p>
<p>and so on, with the <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> analysis being the difference in the alpha spending functions at the successive information rates. The spend is defined in this way so that the sum of the spend totals <img src="https://latex.codecogs.com/png.latex?%5Calpha"> since <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%20%5Csum_%7Bk=2%7D%5EK%20%5Calpha%5E%5Cstar(t_k)%20-%20%5Calpha%5E%5Cstar(t_%7Bk-1%7D)">. The quantities <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(t_k)%20-%20%5Calpha%5E%5Cstar(t_%7Bk-1%7D)"> determine what the <img src="https://latex.codecogs.com/png.latex?u_k"> should be through something called the <em>recursive integration formula</em>, which I will not be covering because wow is it every mathy and I need some time.</p>
<p>Two popular <img src="https://latex.codecogs.com/png.latex?%5Calpha">-spending functions are the Pockock Spending function and the O’Brien Flemming spending function, shown in Figure&nbsp;1. The equations don’t matter, what matters is the qualitative behavior.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-spending-function" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-fig" id="fig-spending-function-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Pocock and O’Brien <img src="https://latex.codecogs.com/png.latex?%5Calpha">-spending functions
</figcaption>
<div aria-describedby="fig-spending-function-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/index_files/figure-html/fig-spending-function-1.png" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>
<p>In gray is the line <img src="https://latex.codecogs.com/png.latex?y%20=%200.05x">, which would correspond to an alpha spending function in which our spend is proportional to the difference in information rates. Note how the Pocock function is kind of close to the diagonal (but not exactly on it), while the O’Brien Flemmming is constant up until <img src="https://latex.codecogs.com/png.latex?t_k%20%5Capprox%200.3"> and then starts to increase. The result of this qualitative behavioiur is evident when we plot our rejection regions (the <img src="https://latex.codecogs.com/png.latex?u_k">, which remember depend on the spending function).</p>
</section>
<section id="plotting-the-rejection-regions" class="level2">
<h2 class="anchored" data-anchor-id="plotting-the-rejection-regions">Plotting the Rejection Regions</h2>
<p>In my <a href="https://dpananos.github.io/posts/2022-07-06-gsd/">last post</a>, the rejection region was plotted on the joint distribution of the <img src="https://latex.codecogs.com/png.latex?Z%5E%7B(1)%7D"> and <img src="https://latex.codecogs.com/png.latex?Z%5E%7B(2)%7D">. That is easy for two dimensions, doable for 3, and impossible for us to comprehend beyond that. Luckily, there is a simpler way of visualizing these rejection regions. We can simply plot the rejection regions <img src="https://latex.codecogs.com/png.latex?u_k"> as a function of the information rate <img src="https://latex.codecogs.com/png.latex?t_k">. Let’s plot the rejection regions for the Pocock and O’Brien Flemming spending functions now. But, I’m not going to label them just yet. I want you to think about which one might be which and why (knowing what we know about spending functions and the qualitative behaviour we saw above).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">extract_lims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(sfu){</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  gs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsDesign</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, </span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timing =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test.type=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, </span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sfu=</span>sfu</span>
<span id="cb1-10">)</span>
<span id="cb1-11">  </span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tk =</span> gs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>timing,</span>
<span id="cb1-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> gs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lower<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bound,</span>
<span id="cb1-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> gs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>upper<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bound,</span>
<span id="cb1-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spending =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(sfu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OF'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O'Brien Flemming"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pocock"</span>)</span>
<span id="cb1-16">       )</span>
<span id="cb1-17"></span>
<span id="cb1-18">}</span>
<span id="cb1-19"></span>
<span id="cb1-20"></span>
<span id="cb1-21">sfus<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pocock'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OF'</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">lims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(sfus, extract_lims) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-24">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> lower<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'which'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'uk'</span> )</span>
<span id="cb1-25"></span>
<span id="cb1-26">lims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(tk, uk, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interaction</span>(which, spending))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>my_blue, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_linetype_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span>F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb1-32">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>()</span>
<span id="cb1-33">        )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(t[k]), </span>
<span id="cb1-35">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(u[k]))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'spending.png'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dpi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)</span></code></pre></div>
</details>
</div>
<details>
<summary>
Click to see which is which
</summary>
<p>
</p><div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p></p>
</details>
<p>One of the spending functions results in the same <img src="https://latex.codecogs.com/png.latex?u_k">, regardless of information rate, while the other seems to put a relatively low chance of rejecting the null (low alpha spend) in the beginning but then allows for a larger chance to reject the null later (larger alpha spend). Now, knowing what we know about the spending function qualitative behaviour, which function corresponds to which spending function?</p>
<p>The solid line is very clearly the O’Brien Flemming spending function. When <img src="https://latex.codecogs.com/png.latex?t_k"> is small, then the O’Brien Flemming spending function has a small amount of spend (because <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(t_k)%20-%20%5Calpha%5E%5Cstar(t_%7Bk-1%7D)"> is very small when <img src="https://latex.codecogs.com/png.latex?t_k"> is small). But, when <img src="https://latex.codecogs.com/png.latex?t_k"> is large, then <img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%5Cstar(t_k)%20-%20%5Calpha%5E%5Cstar(t_%7Bk-1%7D)"> is large, leading to more spend and hence smaller <img src="https://latex.codecogs.com/png.latex?u_k">. The Pocock function is the dashed line, but I have no good rationale why constant lines should come from a spending function which is not on the diagonal. I’d love an explanation if you have one.</p>
<p>So what is the difference? Why might you choose one spending function over another? Note that the O’Brien Flemming function results in critical values which are really big in the beginning and really small at the end. This means we have the best chance to reject the null near the end of the experiment. I mean…that’s nice and all, but for AB testing we want to save as much time as possible, and the large critical values in the beginning work against us in that regard. On the other hand Pocock spending has constant critical values, meaning we are more likely to save time and detect an effect early. However, we run the risk of not detecting an effect over the experimental period, so there is risk of commiting a type II error. If it were me, I would choose Pocock boundaries. Move faster, try more things, and you can likely make up for type II erros by doing so.</p>
<p>What would be kind of cool is to specify our own alpha spending function, perhaps one which makes it realy easy to reject the null early but later punishes us for spending so much early on. Maybe that would be a good idea for another post.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>I feel like we are more or less ready to start doing GSD in AB testing. We know why peeking is bad, and more or less how to fix it now. We also have a better understanding of some of the tradeoffs between the two most prevalent spending functions. There is still a lot to talk about, including confidence intervals for these sorts of tests (which are NOT intuitive in the least) as well as stopping for futility as well as binding/non-binding boundaries. Honestly, I don’t have a good idea for what the next part will be about, but I promise it will make sense.</p>
</section>
<section id="visualising-alpha-spending-in-action" class="level2">
<h2 class="anchored" data-anchor-id="visualising-alpha-spending-in-action">Visualising Alpha Spending in Action</h2>
<p>Its one thing to talk about alpha spending (Equation&nbsp;1 and the probability statements that follow it), but it is another thing completely to see it in action.</p>
<p>I’m going to use <code>{rpact}</code> to obtain the <img src="https://latex.codecogs.com/png.latex?u_k"> for a <img src="https://latex.codecogs.com/png.latex?K=4"> stage GSD using the O’Brien Flemming spending function. Then, I’m going to simulate some data from a GSD and compute the spend to show you how it works. I really hope you take the time to do the same, it can really clear up how the spending works.</p>
<p>First, we need data, and a lot of it. Some of the spend can be on the order of 1e-5, so I’m going to cheat a little. The book I’m working from writes down the joint distribution of the <img src="https://latex.codecogs.com/png.latex?Z"> under some assumptions (namely that the standard deviation is known and the data are normal). Let’s use that joint distirbution to simulate 10, 000, 000 samples. This should give me about 3 decimal places of accuracy.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span></span>
<span id="cb3-3">K <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the Cholesky Factor, row-wise</span></span>
<span id="cb3-6">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, K<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>K), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> K)</span>
<span id="cb3-7">A[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>K){</span>
<span id="cb3-9">  A[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(n)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n)</span>
<span id="cb3-10">}</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the covariance </span></span>
<span id="cb3-13">S <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(A)</span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw from a multivariate normal</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lots of draws because the alpha spend will be small</span></span>
<span id="cb3-16">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10e6</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, K), S)</span></code></pre></div>
</div>
<p>Now, let’s use <code>{rpart}</code> to get those critical values as well as how much alpha should be spent at each stage.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rpact<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getDesignGroupSequential</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kMax =</span> K, </span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sided=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, </span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb4-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">informationRates =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span>K),</span>
<span id="cb4-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">typeOfDesign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OF'</span></span>
<span id="cb4-8">  )</span>
<span id="cb4-9"></span>
<span id="cb4-10">z_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>criticalValues</span>
<span id="cb4-11">aspend <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>alphaSpent</span></code></pre></div>
</div>
<p>Now, its just a matter of taking means. The <code>ith</code> column of <code>X</code> represents a mean I might see in a group sequential design at the <code>ith</code> stage. We know what the critical value is for each stage, so we just have to estimate the proportion of observations in each column which are beyond the associated critical value.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">X1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(X[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>z_vals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-2">X2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(X[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>z_vals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb5-3">X3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(X[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>z_vals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb5-4">X4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(X[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>z_vals[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span></code></pre></div>
</div>
<p>To compute the alpha spend, we just compute the probability statement above</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">my_spend <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(X1),</span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>X2),</span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>X3),</span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>X3)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>X4)</span>
<span id="cb6-6">)</span></code></pre></div>
</div>
<p>Now, we just take the cumulative sum of <code>my_spend</code> to determine how much alpha we spend up to the <code>ith</code> stage</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(my_spend), aspend, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Simulated Spend'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Spend From rpact'</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Oh MAN does that feel good! We spend very nearly the projected alpha at each stage. THAT is alpha spending in action!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Or if you like set theory, we could write each line as <img src="https://latex.codecogs.com/png.latex?%5Cleft(%20%5Cbigcap_%7Bk=1%7D%5E%7Bj-1%7D%20%5Cvert%7BZ%5E%7B(k)%7D%7D%20%5Cvert%20%5Clt%20u_k%20%5Cright)%20%5Ccap%20%5Cleft(%20%5Cvert%7BZ%5E%7B(j)%7D%7D%20%5Cvert%20%5Cgeq%20u_j%20%5Cright)">.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Statistics</category>
  <category>AB Testing</category>
  <guid>https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/</guid>
  <pubDate>Sat, 30 Jul 2022 04:00:00 GMT</pubDate>
  <media:content url="https://dpananos.github.io/posts/2022-07-31-gsd-pt-2/spending.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Forecasting Experimental Lift Using Hierarchical Bayesian Modelling</title>
  <dc:creator>Demetri Pananos</dc:creator>
  <link>https://dpananos.github.io/posts/2022-07-20-pooling-experiments/</link>
  <description><![CDATA[ 





<p>You’re part of a team at a company who is tasked with improving conversion on some web page. You’ve run a few experiments already with mixed results and now it is time to set some goals for the next year. Here is a question:</p>
<blockquote class="blockquote">
<p>Based on your team’s performance to date, how do you set realistic goals for incremental conversion?</p>
</blockquote>
<p>Maybe your approach for your end of year targets would look like</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CBig(%20%5Cmbox%7BAverage%20Lift%7D%5CBig)%5E%7B%5Cmbox%7BNumber%20of%20Planned%20Experiments%7D%7D%20"></p>
<p>Its a good back-of-the-napkin approach to the problem. But if you come up short is that <em>neccesarily</em> a failure? Or, could it be well within expectation?</p>
<p>This post is forecasting how much a given team can move a metric within some time frame. You’re going to forecast the lift the team can generate given some of their past performance. The forecasting is Bayesian, but assumes the team works within a frequentist framework.</p>
<section id="assumptions" class="level2">
<h2 class="anchored" data-anchor-id="assumptions">Assumptions</h2>
<p>Your team can run approximately 1 experiment per month or 12 in a calendar year (but the method we develop can be extended to an arbitrary number of experiments per month). Let’s say you start experimenting on January 1 and will evaluate your performance December 31. In addition to this, assume:</p>
<ul>
<li>All your experiments are A/B tests with two and only two groups: test and control.</li>
<li>Your main metric is a conversion rate and the baseline value is 1%.</li>
<li>Every intervention has an effect, though it may be small. The null is never true.</li>
<li>Your site sees 100,000 unique users per month. You split all 100,000 into two groups at random, and</li>
<li>You measure lift in a relative sense (this is sometimes called <em>relative risk</em> in epidemiology).</li>
</ul>
<p>Let’s make some additional assumptions about experiments:</p>
<ul>
<li>Your team is relatively reliable. They don’t get better at thinking up interventions over time, so the effects they generate do not change over time, except for random variation.</li>
<li>Experiments effects are independent of one another, so the implementation of one change does not alter the effect of the next experiment.</li>
</ul>
</section>
<section id="scenario" class="level2">
<h2 class="anchored" data-anchor-id="scenario">Scenario</h2>
<p>Shown in the table below are your results over the last year. Nice job, lots of wins, a few failures to reject the null, but overall very good. Using the estimated relative lifts where you did , you managed to increase conversion by 80%. Now, you’re PM is asking you to shoot for 2x conversion this year.</p>
<p>Is that reasonable<sup>1</sup>? How probable are you to generate at least 2x lift over 12 months given your past performance? I mean, it’s only a little better than you did this past year, right? Luckily, you’re a good data scientist. Even though your team uses frequentism to evaluate their A/B tests, you are not beholden to one ideology over another. So, you decide to use a hierarchical Bayesian model to estimate what kinds of lifts your team is likely to generate in the future.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">N</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Treatment Conversions</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Control Conversions</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Relative Lift</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">p</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">541</td>
<td style="text-align: right;">496</td>
<td style="text-align: right;">1.09</td>
<td style="text-align: right;">0.08</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">557</td>
<td style="text-align: right;">524</td>
<td style="text-align: right;">1.06</td>
<td style="text-align: right;">0.16</td>
</tr>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">559</td>
<td style="text-align: right;">486</td>
<td style="text-align: right;">1.15</td>
<td style="text-align: right;">0.01</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">556</td>
<td style="text-align: right;">500</td>
<td style="text-align: right;">1.11</td>
<td style="text-align: right;">0.04</td>
</tr>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">530</td>
<td style="text-align: right;">516</td>
<td style="text-align: right;">1.03</td>
<td style="text-align: right;">0.34</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">532</td>
<td style="text-align: right;">475</td>
<td style="text-align: right;">1.12</td>
<td style="text-align: right;">0.04</td>
</tr>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">516</td>
<td style="text-align: right;">507</td>
<td style="text-align: right;">1.02</td>
<td style="text-align: right;">0.40</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">532</td>
<td style="text-align: right;">475</td>
<td style="text-align: right;">1.12</td>
<td style="text-align: right;">0.04</td>
</tr>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">528</td>
<td style="text-align: right;">490</td>
<td style="text-align: right;">1.08</td>
<td style="text-align: right;">0.12</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">544</td>
<td style="text-align: right;">506</td>
<td style="text-align: right;">1.08</td>
<td style="text-align: right;">0.13</td>
</tr>
<tr class="odd">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">519</td>
<td style="text-align: right;">512</td>
<td style="text-align: right;">1.01</td>
<td style="text-align: right;">0.43</td>
</tr>
<tr class="even">
<td style="text-align: left;">50,000</td>
<td style="text-align: right;">552</td>
<td style="text-align: right;">489</td>
<td style="text-align: right;">1.13</td>
<td style="text-align: right;">0.03</td>
</tr>
</tbody>
</table>


</div>
</div>
</section>
<section id="hierarchical-model" class="level2">
<h2 class="anchored" data-anchor-id="hierarchical-model">Hierarchical Model</h2>
<p>Let <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BRR%7D_i"> be the estimated relative lift<sup>2</sup> from experiment <img src="https://latex.codecogs.com/png.latex?i">. The sampling distribution of relative lift is asymptotically normally distributed on the log scale. Assuming we know the standard error exactly (using the delta rule), this means</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Clog%20%5CBig(%5Cwidehat%7BRR%7D_i%20%5CBig)%20%5Csim%20%5Cmathcal%7BN%7D(%5Clog(%5Ctheta_i),%20%5Csigma)"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?%5Clog(%5Ctheta_i)"> is the relative lift on the log scale for experiment <img src="https://latex.codecogs.com/png.latex?i"> (whereas <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BRR%7D_i"> is just the estimated relative lift). We can model the <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> hierarchically as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Clog(%5Ctheta_i)%20%5Csim%20%5Cmathcal%7BN%7D(%5Cmu,%20%5Ctau)%20"></p>
<p>Now, you just need to place priors on <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Ctau"> (assume you used good priors).</p>
</section>
<section id="forcasting-lift" class="level2">
<h2 class="anchored" data-anchor-id="forcasting-lift">Forcasting Lift</h2>
<p>Once you fit your model, you can generate hypothetical relative lifts by sampling from the model. Let <img src="https://latex.codecogs.com/png.latex?%5Cpsi"> be a relative lift, so that</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Clog(%5Cpsi)%20%5Csim%20%5Cmathcal%7BN%7D(%5Cmu,%20%5Csigma)%20%5C%3E.%20"></p>
<p>If your team were to implement an experiment for which had a relative lift of <img src="https://latex.codecogs.com/png.latex?%5Cpsi">, you would get an estimated relative lift. Depending on the size of that estimate, you may or may not reject the null hypothesis. The probability you reject the null hypothesis is when it is false (and it is always false by assumption) is known as the statistical power. Since you have a fixed sample size in each experiment, and every experiment is a 50/50 split, you can calculate the statistical power that you detect a relative lift of <img src="https://latex.codecogs.com/png.latex?%5Cpsi">. Call that <img src="https://latex.codecogs.com/png.latex?p_%7B%5Cpsi%7D">.</p>
<p>Now for the fun part. Say you run <img src="https://latex.codecogs.com/png.latex?n"> experiments per month for <img src="https://latex.codecogs.com/png.latex?K"> months. The lift you generate in month <img src="https://latex.codecogs.com/png.latex?k">, <img src="https://latex.codecogs.com/png.latex?LG_k">, would be</p>
<p><img src="https://latex.codecogs.com/png.latex?%20LG_k%20=%20%5Cexp%5CBigg(%20%5Csum_%7Bj=1%7D%5En%20%5Clog(%5Cpsi_j)%20p_%7B%5Cpsi,%20j%7D%20%5CBigg)%20"></p>
<p>and the forecasted lift, <img src="https://latex.codecogs.com/png.latex?FL">, up to and including month <img src="https://latex.codecogs.com/png.latex?k"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%20FL_k%20=%20%5Cprod_%7Bi=1%7D%5E%7Bk%7D%20LG_i%20"></p>
<p>Think this through. If you were to implement every intervention, your lift would simply be <img src="https://latex.codecogs.com/png.latex?%5Cprod_%7Bj=1%7D%5Ek%20%5Cpsi_j">, or on the log scale <img src="https://latex.codecogs.com/png.latex?%5Csum_j%20%5Clog(%5Cpsi_j)">. But you don’t detect every effect. The probability you detect the effect of the <img src="https://latex.codecogs.com/png.latex?j%5E%7Bth%7D"> intervention is <img src="https://latex.codecogs.com/png.latex?p_%7B%5Cpsi,%20j%7D">. So <img src="https://latex.codecogs.com/png.latex?%5Csum_j%20%5Clog(%5Cpsi_j)%20p_%7B%5Cpsi,%20j%7D"> is the expected lift you would accrue over the <img src="https://latex.codecogs.com/png.latex?k"> experiments. Take the exponential to convert this sum back to a product and you’ve got a generated lift after <img src="https://latex.codecogs.com/png.latex?n"> experiments in a given month. Multiply the lift month over month to get a forecasted lift. Now, because there is uncertainty in the <img src="https://latex.codecogs.com/png.latex?%5Cpsi">, there is uncertainty in the forecasted lift. However, your hierarchical model will make it more or less easy to integrate over that uncertainty. Just sample from the model and average over the samples.</p>
</section>
<section id="modelling" class="level2">
<h2 class="anchored" data-anchor-id="modelling">Modelling</h2>
<p>Luckily, all of the computation above – even the power calculation – can be done inside Stan (and you’re pretty good at writing Stan code<sup>3</sup>).</p>
<p>Shown in Figure&nbsp;1 is the forecasted lift as compared to baseline after the <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> month Good job, if you keep doing things as you’re doing, you’re going to probably increase conversion rate by a little more than 50% (a little less than the 80% but still nothing to sneeze at). The shaded blue regions indicate the uncertainty in that estimate. Note that although your forecasted lift seems to always be increasing, that isn’t necessarily the case. You could implement a change which hurts our conversion because of chance, so if you were to plot simulated trajectories you might see some decreases in the metric.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-forecast" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-fig" id="fig-forecast-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Forecasted lift after the 12 months. Shown in blue are credible interval estimates. The conditional distirbution is log-normal since the forecasted lift is the sum of normals on the log scale.
</figcaption>
<div aria-describedby="fig-forecast-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/index_files/figure-html/fig-forecast-1.png" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>
<details>
<summary>
Click to see individual trajectories
</summary>
<p>
</p><div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figcaption>The red lines are draws where you would have implemented a change to hurt the conversion rate. See how sometimes those lines actually decrease? Such is life, can’t win em all!</figcaption>
<p><img src="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p></p>
</details>
<p>Now, what about that goal of increasing conversion by 2x? Well, it isn’t looking good. Looks like there is only a 12% chance you meet or exceed the 2x goal. Could it be your performance last year was just extreme? The distribution of forecasted lifts <em>is</em> long tailed. Maybe you’re just going to regress to the mean. Sounds like a good time to push back on your boss and come prepared with data.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-conditional" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-fig" id="fig-conditional-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Conditional posterior distirbution of forecasted lifts after completing the 12 experiments you had planned this year. Indicated point/interval is mean and 95% credible interval.
</figcaption>
<div aria-describedby="fig-conditional-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/index_files/figure-html/fig-conditional-1.png" class="img-fluid figure-img" width="672">
</div>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>You’re clever and realized you could use a hierarchical model to simulate future experiment results and use those to forecast your team’s performance. Your boss’ goal of a 2x increase is nice in so far as it shows they have confidence in you and your team, but the model says it isn’t super achievable.</p>
<p>If 2x isn’t achievable, what is a better target? Or maybe, what is a better range of targets. I’m not sure, that isn’t the point of the post. The post was to equip you with a means of answering that question yourself, and I know you’re capable of answering it. I mean…look at all this cool modelling you did.</p>
</section>
<section id="post-script" class="level2">
<h2 class="anchored" data-anchor-id="post-script">Post Script</h2>
<p>Ok, breaking away from the narrative for a moment…this is a continuous approximation to a discrete process. We should simulate this to see how real experiments would stack up against my forecast. I’ve gone ahead and actually simulated running the 12 tests and computed the lift after the 12 tests. Shown below is the forecasted lift versus relative error as compared to simulation. I’ll let you come to your own conclusion about the quality of the approximation.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Just go with it, its a work of fiction, who knows if it is reasonable. Let’s pull out the forecasted lifts after the final experiment.↩︎</p></li>
<li id="fn2"><p><img src="https://latex.codecogs.com/png.latex?RR"> for relative risk, sorry my epidemiology is showing↩︎</p></li>
<li id="fn3"><p>Speaking of Stan code, the Stan file in the github repo for this post (see the “Edit this page on github” on the right hand side).↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Statistics</category>
  <category>AB Testing</category>
  <category>Bayes</category>
  <guid>https://dpananos.github.io/posts/2022-07-20-pooling-experiments/</guid>
  <pubDate>Wed, 20 Jul 2022 04:00:00 GMT</pubDate>
  <media:content url="https://dpananos.github.io/posts/2022-07-20-pooling-experiments/forecast.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
